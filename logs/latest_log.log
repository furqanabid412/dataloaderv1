2022-05-06 22:35:56,955 bytecode dump:
>          0	NOP(arg=None, lineno=354)
           2	LOAD_FAST(arg=0, lineno=354)
           4	LOAD_ATTR(arg=0, lineno=354)
           6	LOAD_CONST(arg=1, lineno=354)
           8	BINARY_SUBSCR(arg=None, lineno=354)
          10	STORE_FAST(arg=1, lineno=354)
          12	LOAD_FAST(arg=0, lineno=355)
          14	LOAD_ATTR(arg=0, lineno=355)
          16	LOAD_CONST(arg=2, lineno=355)
          18	BINARY_SUBSCR(arg=None, lineno=355)
          20	STORE_FAST(arg=2, lineno=355)
          22	LOAD_GLOBAL(arg=1, lineno=356)
          24	LOAD_ATTR(arg=2, lineno=356)
          26	LOAD_FAST(arg=1, lineno=356)
          28	LOAD_FAST(arg=2, lineno=356)
          30	LOAD_CONST(arg=3, lineno=356)
          32	BUILD_TUPLE(arg=3, lineno=356)
          34	LOAD_FAST(arg=0, lineno=356)
          36	LOAD_ATTR(arg=3, lineno=356)
          38	LOAD_CONST(arg=4, lineno=356)
          40	CALL_FUNCTION_KW(arg=2, lineno=356)
          42	STORE_FAST(arg=3, lineno=356)
          44	LOAD_GLOBAL(arg=1, lineno=357)
          46	LOAD_ATTR(arg=2, lineno=357)
          48	LOAD_FAST(arg=1, lineno=357)
          50	LOAD_FAST(arg=2, lineno=357)
          52	BUILD_TUPLE(arg=2, lineno=357)
          54	LOAD_FAST(arg=0, lineno=357)
          56	LOAD_ATTR(arg=3, lineno=357)
          58	LOAD_CONST(arg=4, lineno=357)
          60	CALL_FUNCTION_KW(arg=2, lineno=357)
          62	STORE_FAST(arg=4, lineno=357)
          64	LOAD_FAST(arg=0, lineno=358)
          66	LOAD_CONST(arg=5, lineno=358)
          68	BINARY_SUBSCR(arg=None, lineno=358)
          70	LOAD_FAST(arg=0, lineno=358)
          72	LOAD_CONST(arg=6, lineno=358)
          74	BINARY_SUBSCR(arg=None, lineno=358)
          76	BINARY_SUBTRACT(arg=None, lineno=358)
          78	STORE_FAST(arg=5, lineno=358)
          80	LOAD_FAST(arg=0, lineno=359)
          82	LOAD_CONST(arg=5, lineno=359)
          84	BINARY_SUBSCR(arg=None, lineno=359)
          86	LOAD_FAST(arg=0, lineno=359)
          88	LOAD_CONST(arg=6, lineno=359)
          90	BINARY_SUBSCR(arg=None, lineno=359)
          92	BINARY_SUBTRACT(arg=None, lineno=359)
          94	STORE_FAST(arg=6, lineno=359)
          96	LOAD_GLOBAL(arg=4, lineno=360)
          98	LOAD_FAST(arg=1, lineno=360)
         100	CALL_FUNCTION(arg=1, lineno=360)
         102	GET_ITER(arg=None, lineno=360)
>        104	FOR_ITER(arg=462, lineno=360)
         108	STORE_FAST(arg=7, lineno=360)
         110	LOAD_GLOBAL(arg=4, lineno=361)
         112	LOAD_FAST(arg=2, lineno=361)
         114	CALL_FUNCTION(arg=1, lineno=361)
         116	GET_ITER(arg=None, lineno=361)
>        118	FOR_ITER(arg=446, lineno=361)
         122	STORE_FAST(arg=8, lineno=361)
         124	LOAD_FAST(arg=0, lineno=362)
         126	LOAD_FAST(arg=7, lineno=362)
         128	LOAD_FAST(arg=8, lineno=362)
         130	LOAD_CONST(arg=1, lineno=362)
         132	LOAD_CONST(arg=1, lineno=362)
         134	BUILD_TUPLE(arg=4, lineno=362)
         136	BINARY_SUBSCR(arg=None, lineno=362)
         138	LOAD_FAST(arg=0, lineno=362)
         140	LOAD_FAST(arg=7, lineno=362)
         142	LOAD_FAST(arg=8, lineno=362)
         144	LOAD_CONST(arg=2, lineno=362)
         146	LOAD_CONST(arg=1, lineno=362)
         148	BUILD_TUPLE(arg=4, lineno=362)
         150	BINARY_SUBSCR(arg=None, lineno=362)
         152	BINARY_SUBTRACT(arg=None, lineno=362)
         154	LOAD_FAST(arg=5, lineno=362)
         156	LOAD_CONST(arg=1, lineno=362)
         158	STORE_SUBSCR(arg=None, lineno=362)
         160	LOAD_FAST(arg=0, lineno=363)
         162	LOAD_FAST(arg=7, lineno=363)
         164	LOAD_FAST(arg=8, lineno=363)
         166	LOAD_CONST(arg=1, lineno=363)
         168	LOAD_CONST(arg=2, lineno=363)
         170	BUILD_TUPLE(arg=4, lineno=363)
         172	BINARY_SUBSCR(arg=None, lineno=363)
         174	LOAD_FAST(arg=0, lineno=363)
         176	LOAD_FAST(arg=7, lineno=363)
         178	LOAD_FAST(arg=8, lineno=363)
         180	LOAD_CONST(arg=2, lineno=363)
         182	LOAD_CONST(arg=2, lineno=363)
         184	BUILD_TUPLE(arg=4, lineno=363)
         186	BINARY_SUBSCR(arg=None, lineno=363)
         188	BINARY_SUBTRACT(arg=None, lineno=363)
         190	LOAD_FAST(arg=5, lineno=363)
         192	LOAD_CONST(arg=2, lineno=363)
         194	STORE_SUBSCR(arg=None, lineno=363)
         196	LOAD_FAST(arg=0, lineno=364)
         198	LOAD_FAST(arg=7, lineno=364)
         200	LOAD_FAST(arg=8, lineno=364)
         202	LOAD_CONST(arg=1, lineno=364)
         204	LOAD_CONST(arg=7, lineno=364)
         206	BUILD_TUPLE(arg=4, lineno=364)
         208	BINARY_SUBSCR(arg=None, lineno=364)
         210	LOAD_FAST(arg=0, lineno=364)
         212	LOAD_FAST(arg=7, lineno=364)
         214	LOAD_FAST(arg=8, lineno=364)
         216	LOAD_CONST(arg=2, lineno=364)
         218	LOAD_CONST(arg=7, lineno=364)
         220	BUILD_TUPLE(arg=4, lineno=364)
         222	BINARY_SUBSCR(arg=None, lineno=364)
         224	BINARY_SUBTRACT(arg=None, lineno=364)
         226	LOAD_FAST(arg=5, lineno=364)
         228	LOAD_CONST(arg=7, lineno=364)
         230	STORE_SUBSCR(arg=None, lineno=364)
         232	LOAD_FAST(arg=0, lineno=365)
         234	LOAD_FAST(arg=7, lineno=365)
         236	LOAD_FAST(arg=8, lineno=365)
         238	LOAD_CONST(arg=2, lineno=365)
         240	LOAD_CONST(arg=1, lineno=365)
         242	BUILD_TUPLE(arg=4, lineno=365)
         244	BINARY_SUBSCR(arg=None, lineno=365)
         246	LOAD_FAST(arg=0, lineno=365)
         248	LOAD_FAST(arg=7, lineno=365)
         250	LOAD_FAST(arg=8, lineno=365)
         252	LOAD_CONST(arg=7, lineno=365)
         254	LOAD_CONST(arg=1, lineno=365)
         256	BUILD_TUPLE(arg=4, lineno=365)
         258	BINARY_SUBSCR(arg=None, lineno=365)
         260	BINARY_SUBTRACT(arg=None, lineno=365)
         262	LOAD_FAST(arg=6, lineno=365)
         264	LOAD_CONST(arg=1, lineno=365)
         266	STORE_SUBSCR(arg=None, lineno=365)
         268	LOAD_FAST(arg=0, lineno=366)
         270	LOAD_FAST(arg=7, lineno=366)
         272	LOAD_FAST(arg=8, lineno=366)
         274	LOAD_CONST(arg=2, lineno=366)
         276	LOAD_CONST(arg=2, lineno=366)
         278	BUILD_TUPLE(arg=4, lineno=366)
         280	BINARY_SUBSCR(arg=None, lineno=366)
         282	LOAD_FAST(arg=0, lineno=366)
         284	LOAD_FAST(arg=7, lineno=366)
         286	LOAD_FAST(arg=8, lineno=366)
         288	LOAD_CONST(arg=7, lineno=366)
         290	LOAD_CONST(arg=2, lineno=366)
         292	BUILD_TUPLE(arg=4, lineno=366)
         294	BINARY_SUBSCR(arg=None, lineno=366)
         296	BINARY_SUBTRACT(arg=None, lineno=366)
         298	LOAD_FAST(arg=6, lineno=366)
         300	LOAD_CONST(arg=2, lineno=366)
         302	STORE_SUBSCR(arg=None, lineno=366)
         304	LOAD_FAST(arg=0, lineno=367)
         306	LOAD_FAST(arg=7, lineno=367)
         308	LOAD_FAST(arg=8, lineno=367)
         310	LOAD_CONST(arg=2, lineno=367)
         312	LOAD_CONST(arg=7, lineno=367)
         314	BUILD_TUPLE(arg=4, lineno=367)
         316	BINARY_SUBSCR(arg=None, lineno=367)
         318	LOAD_FAST(arg=0, lineno=367)
         320	LOAD_FAST(arg=7, lineno=367)
         322	LOAD_FAST(arg=8, lineno=367)
         324	LOAD_CONST(arg=7, lineno=367)
         326	LOAD_CONST(arg=7, lineno=367)
         328	BUILD_TUPLE(arg=4, lineno=367)
         330	BINARY_SUBSCR(arg=None, lineno=367)
         332	BINARY_SUBTRACT(arg=None, lineno=367)
         334	LOAD_FAST(arg=6, lineno=367)
         336	LOAD_CONST(arg=7, lineno=367)
         338	STORE_SUBSCR(arg=None, lineno=367)
         340	LOAD_FAST(arg=5, lineno=368)
         342	LOAD_CONST(arg=2, lineno=368)
         344	BINARY_SUBSCR(arg=None, lineno=368)
         346	LOAD_FAST(arg=6, lineno=368)
         348	LOAD_CONST(arg=7, lineno=368)
         350	BINARY_SUBSCR(arg=None, lineno=368)
         352	BINARY_MULTIPLY(arg=None, lineno=368)
         354	LOAD_FAST(arg=5, lineno=368)
         356	LOAD_CONST(arg=7, lineno=368)
         358	BINARY_SUBSCR(arg=None, lineno=368)
         360	LOAD_FAST(arg=6, lineno=368)
         362	LOAD_CONST(arg=2, lineno=368)
         364	BINARY_SUBSCR(arg=None, lineno=368)
         366	BINARY_MULTIPLY(arg=None, lineno=368)
         368	BINARY_SUBTRACT(arg=None, lineno=368)
         370	LOAD_FAST(arg=3, lineno=368)
         372	LOAD_FAST(arg=7, lineno=368)
         374	LOAD_FAST(arg=8, lineno=368)
         376	LOAD_CONST(arg=1, lineno=368)
         378	BUILD_TUPLE(arg=3, lineno=368)
         380	STORE_SUBSCR(arg=None, lineno=368)
         382	LOAD_FAST(arg=5, lineno=369)
         384	LOAD_CONST(arg=7, lineno=369)
         386	BINARY_SUBSCR(arg=None, lineno=369)
         388	LOAD_FAST(arg=6, lineno=369)
         390	LOAD_CONST(arg=1, lineno=369)
         392	BINARY_SUBSCR(arg=None, lineno=369)
         394	BINARY_MULTIPLY(arg=None, lineno=369)
         396	LOAD_FAST(arg=5, lineno=369)
         398	LOAD_CONST(arg=1, lineno=369)
         400	BINARY_SUBSCR(arg=None, lineno=369)
         402	LOAD_FAST(arg=6, lineno=369)
         404	LOAD_CONST(arg=7, lineno=369)
         406	BINARY_SUBSCR(arg=None, lineno=369)
         408	BINARY_MULTIPLY(arg=None, lineno=369)
         410	BINARY_SUBTRACT(arg=None, lineno=369)
         412	LOAD_FAST(arg=3, lineno=369)
         414	LOAD_FAST(arg=7, lineno=369)
         416	LOAD_FAST(arg=8, lineno=369)
         418	LOAD_CONST(arg=2, lineno=369)
         420	BUILD_TUPLE(arg=3, lineno=369)
         422	STORE_SUBSCR(arg=None, lineno=369)
         424	LOAD_FAST(arg=5, lineno=370)
         426	LOAD_CONST(arg=1, lineno=370)
         428	BINARY_SUBSCR(arg=None, lineno=370)
         430	LOAD_FAST(arg=6, lineno=370)
         432	LOAD_CONST(arg=2, lineno=370)
         434	BINARY_SUBSCR(arg=None, lineno=370)
         436	BINARY_MULTIPLY(arg=None, lineno=370)
         438	LOAD_FAST(arg=5, lineno=370)
         440	LOAD_CONST(arg=2, lineno=370)
         442	BINARY_SUBSCR(arg=None, lineno=370)
         444	LOAD_FAST(arg=6, lineno=370)
         446	LOAD_CONST(arg=1, lineno=370)
         448	BINARY_SUBSCR(arg=None, lineno=370)
         450	BINARY_MULTIPLY(arg=None, lineno=370)
         452	BINARY_SUBTRACT(arg=None, lineno=370)
         454	LOAD_FAST(arg=3, lineno=370)
         456	LOAD_FAST(arg=7, lineno=370)
         458	LOAD_FAST(arg=8, lineno=370)
         460	LOAD_CONST(arg=7, lineno=370)
         462	BUILD_TUPLE(arg=3, lineno=370)
         464	STORE_SUBSCR(arg=None, lineno=370)
         466	LOAD_FAST(arg=0, lineno=373)
         468	LOAD_FAST(arg=7, lineno=373)
         470	LOAD_FAST(arg=8, lineno=373)
         472	LOAD_CONST(arg=1, lineno=373)
         474	LOAD_CONST(arg=1, lineno=373)
         476	BUILD_TUPLE(arg=4, lineno=373)
         478	BINARY_SUBSCR(arg=None, lineno=373)
         480	UNARY_NEGATIVE(arg=None, lineno=373)
         482	LOAD_FAST(arg=3, lineno=373)
         484	LOAD_FAST(arg=7, lineno=373)
         486	LOAD_FAST(arg=8, lineno=373)
         488	LOAD_CONST(arg=1, lineno=373)
         490	BUILD_TUPLE(arg=3, lineno=373)
         492	BINARY_SUBSCR(arg=None, lineno=373)
         494	BINARY_MULTIPLY(arg=None, lineno=373)
         496	LOAD_FAST(arg=0, lineno=374)
         498	LOAD_FAST(arg=7, lineno=374)
         500	LOAD_FAST(arg=8, lineno=374)
         502	LOAD_CONST(arg=1, lineno=374)
         504	LOAD_CONST(arg=2, lineno=374)
         506	BUILD_TUPLE(arg=4, lineno=374)
         508	BINARY_SUBSCR(arg=None, lineno=374)
         510	LOAD_FAST(arg=3, lineno=374)
         512	LOAD_FAST(arg=7, lineno=374)
         514	LOAD_FAST(arg=8, lineno=374)
         516	LOAD_CONST(arg=2, lineno=374)
         518	BUILD_TUPLE(arg=3, lineno=374)
         520	BINARY_SUBSCR(arg=None, lineno=374)
         522	BINARY_MULTIPLY(arg=None, lineno=374)
         524	BINARY_SUBTRACT(arg=None, lineno=373)
         526	LOAD_FAST(arg=0, lineno=375)
         528	LOAD_FAST(arg=7, lineno=375)
         530	LOAD_FAST(arg=8, lineno=375)
         532	LOAD_CONST(arg=1, lineno=375)
         534	LOAD_CONST(arg=7, lineno=375)
         536	BUILD_TUPLE(arg=4, lineno=375)
         538	BINARY_SUBSCR(arg=None, lineno=375)
         540	LOAD_FAST(arg=3, lineno=375)
         542	LOAD_FAST(arg=7, lineno=375)
         544	LOAD_FAST(arg=8, lineno=375)
         546	LOAD_CONST(arg=7, lineno=375)
         548	BUILD_TUPLE(arg=3, lineno=375)
         550	BINARY_SUBSCR(arg=None, lineno=375)
         552	BINARY_MULTIPLY(arg=None, lineno=375)
         554	BINARY_SUBTRACT(arg=None, lineno=373)
         556	LOAD_FAST(arg=4, lineno=372)
         558	LOAD_FAST(arg=7, lineno=372)
         560	LOAD_FAST(arg=8, lineno=372)
         562	BUILD_TUPLE(arg=2, lineno=372)
         564	STORE_SUBSCR(arg=None, lineno=372)
         566	JUMP_ABSOLUTE(arg=118, lineno=372)
>        568	JUMP_ABSOLUTE(arg=104, lineno=372)
>        570	LOAD_FAST(arg=3, lineno=377)
         572	LOAD_FAST(arg=4, lineno=377)
         574	BUILD_TUPLE(arg=2, lineno=377)
         576	RETURN_VALUE(arg=None, lineno=377)
2022-05-06 22:35:56,956 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:56,956 stack: []
2022-05-06 22:35:56,956 dispatch pc=0, inst=NOP(arg=None, lineno=354)
2022-05-06 22:35:56,956 stack []
2022-05-06 22:35:56,956 dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=354)
2022-05-06 22:35:56,956 stack []
2022-05-06 22:35:56,957 dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=354)
2022-05-06 22:35:56,957 stack ['$surfaces2.0']
2022-05-06 22:35:56,957 dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=354)
2022-05-06 22:35:56,957 stack ['$4load_attr.1']
2022-05-06 22:35:56,957 dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=354)
2022-05-06 22:35:56,957 stack ['$4load_attr.1', '$const6.2']
2022-05-06 22:35:56,957 dispatch pc=10, inst=STORE_FAST(arg=1, lineno=354)
2022-05-06 22:35:56,957 stack ['$8binary_subscr.3']
2022-05-06 22:35:56,958 dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=355)
2022-05-06 22:35:56,958 stack []
2022-05-06 22:35:56,958 dispatch pc=14, inst=LOAD_ATTR(arg=0, lineno=355)
2022-05-06 22:35:56,958 stack ['$surfaces12.4']
2022-05-06 22:35:56,958 dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=355)
2022-05-06 22:35:56,958 stack ['$14load_attr.5']
2022-05-06 22:35:56,958 dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=355)
2022-05-06 22:35:56,958 stack ['$14load_attr.5', '$const16.6']
2022-05-06 22:35:56,958 dispatch pc=20, inst=STORE_FAST(arg=2, lineno=355)
2022-05-06 22:35:56,959 stack ['$18binary_subscr.7']
2022-05-06 22:35:56,959 dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=356)
2022-05-06 22:35:56,959 stack []
2022-05-06 22:35:56,959 dispatch pc=24, inst=LOAD_ATTR(arg=2, lineno=356)
2022-05-06 22:35:56,959 stack ['$22load_global.8']
2022-05-06 22:35:56,959 dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=356)
2022-05-06 22:35:56,959 stack ['$24load_attr.9']
2022-05-06 22:35:56,960 dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=356)
2022-05-06 22:35:56,960 stack ['$24load_attr.9', '$num_polygon26.10']
2022-05-06 22:35:56,960 dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=356)
2022-05-06 22:35:56,960 stack ['$24load_attr.9', '$num_polygon26.10', '$max_num_surfaces28.11']
2022-05-06 22:35:56,960 dispatch pc=32, inst=BUILD_TUPLE(arg=3, lineno=356)
2022-05-06 22:35:56,960 stack ['$24load_attr.9', '$num_polygon26.10', '$max_num_surfaces28.11', '$const30.12']
2022-05-06 22:35:56,960 dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=356)
2022-05-06 22:35:56,961 stack ['$24load_attr.9', '$32build_tuple.13']
2022-05-06 22:35:56,961 dispatch pc=36, inst=LOAD_ATTR(arg=3, lineno=356)
2022-05-06 22:35:56,961 stack ['$24load_attr.9', '$32build_tuple.13', '$surfaces34.14']
2022-05-06 22:35:56,961 dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=356)
2022-05-06 22:35:56,961 stack ['$24load_attr.9', '$32build_tuple.13', '$36load_attr.15']
2022-05-06 22:35:56,961 dispatch pc=40, inst=CALL_FUNCTION_KW(arg=2, lineno=356)
2022-05-06 22:35:56,961 stack ['$24load_attr.9', '$32build_tuple.13', '$36load_attr.15', '$const38.16']
2022-05-06 22:35:56,961 dispatch pc=42, inst=STORE_FAST(arg=3, lineno=356)
2022-05-06 22:35:56,961 stack ['$40call_function_kw.17']
2022-05-06 22:35:56,962 dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=357)
2022-05-06 22:35:56,962 stack []
2022-05-06 22:35:56,962 dispatch pc=46, inst=LOAD_ATTR(arg=2, lineno=357)
2022-05-06 22:35:56,962 stack ['$44load_global.18']
2022-05-06 22:35:56,962 dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=357)
2022-05-06 22:35:56,962 stack ['$46load_attr.19']
2022-05-06 22:35:56,962 dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=357)
2022-05-06 22:35:56,962 stack ['$46load_attr.19', '$num_polygon48.20']
2022-05-06 22:35:56,963 dispatch pc=52, inst=BUILD_TUPLE(arg=2, lineno=357)
2022-05-06 22:35:56,963 stack ['$46load_attr.19', '$num_polygon48.20', '$max_num_surfaces50.21']
2022-05-06 22:35:56,963 dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=357)
2022-05-06 22:35:56,963 stack ['$46load_attr.19', '$52build_tuple.22']
2022-05-06 22:35:56,963 dispatch pc=56, inst=LOAD_ATTR(arg=3, lineno=357)
2022-05-06 22:35:56,963 stack ['$46load_attr.19', '$52build_tuple.22', '$surfaces54.23']
2022-05-06 22:35:56,963 dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=357)
2022-05-06 22:35:56,963 stack ['$46load_attr.19', '$52build_tuple.22', '$56load_attr.24']
2022-05-06 22:35:56,963 dispatch pc=60, inst=CALL_FUNCTION_KW(arg=2, lineno=357)
2022-05-06 22:35:56,964 stack ['$46load_attr.19', '$52build_tuple.22', '$56load_attr.24', '$const58.25']
2022-05-06 22:35:56,964 dispatch pc=62, inst=STORE_FAST(arg=4, lineno=357)
2022-05-06 22:35:56,964 stack ['$60call_function_kw.26']
2022-05-06 22:35:56,964 dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=358)
2022-05-06 22:35:56,964 stack []
2022-05-06 22:35:56,964 dispatch pc=66, inst=LOAD_CONST(arg=5, lineno=358)
2022-05-06 22:35:56,964 stack ['$surfaces64.27']
2022-05-06 22:35:56,964 dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=358)
2022-05-06 22:35:56,965 stack ['$surfaces64.27', '$const66.28']
2022-05-06 22:35:56,965 dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=358)
2022-05-06 22:35:56,965 stack ['$68binary_subscr.29']
2022-05-06 22:35:56,965 dispatch pc=72, inst=LOAD_CONST(arg=6, lineno=358)
2022-05-06 22:35:56,965 stack ['$68binary_subscr.29', '$surfaces70.30']
2022-05-06 22:35:56,965 dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=358)
2022-05-06 22:35:56,965 stack ['$68binary_subscr.29', '$surfaces70.30', '$const72.31']
2022-05-06 22:35:56,965 dispatch pc=76, inst=BINARY_SUBTRACT(arg=None, lineno=358)
2022-05-06 22:35:56,965 stack ['$68binary_subscr.29', '$74binary_subscr.32']
2022-05-06 22:35:56,966 dispatch pc=78, inst=STORE_FAST(arg=5, lineno=358)
2022-05-06 22:35:56,966 stack ['$76binary_subtract.33']
2022-05-06 22:35:56,966 dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=359)
2022-05-06 22:35:56,966 stack []
2022-05-06 22:35:56,966 dispatch pc=82, inst=LOAD_CONST(arg=5, lineno=359)
2022-05-06 22:35:56,966 stack ['$surfaces80.34']
2022-05-06 22:35:56,966 dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=359)
2022-05-06 22:35:56,966 stack ['$surfaces80.34', '$const82.35']
2022-05-06 22:35:56,966 dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=359)
2022-05-06 22:35:56,967 stack ['$84binary_subscr.36']
2022-05-06 22:35:56,967 dispatch pc=88, inst=LOAD_CONST(arg=6, lineno=359)
2022-05-06 22:35:56,967 stack ['$84binary_subscr.36', '$surfaces86.37']
2022-05-06 22:35:56,967 dispatch pc=90, inst=BINARY_SUBSCR(arg=None, lineno=359)
2022-05-06 22:35:56,967 stack ['$84binary_subscr.36', '$surfaces86.37', '$const88.38']
2022-05-06 22:35:56,967 dispatch pc=92, inst=BINARY_SUBTRACT(arg=None, lineno=359)
2022-05-06 22:35:56,967 stack ['$84binary_subscr.36', '$90binary_subscr.39']
2022-05-06 22:35:56,967 dispatch pc=94, inst=STORE_FAST(arg=6, lineno=359)
2022-05-06 22:35:56,967 stack ['$92binary_subtract.40']
2022-05-06 22:35:56,968 dispatch pc=96, inst=LOAD_GLOBAL(arg=4, lineno=360)
2022-05-06 22:35:56,968 stack []
2022-05-06 22:35:56,968 dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=360)
2022-05-06 22:35:56,968 stack ['$96load_global.41']
2022-05-06 22:35:56,968 dispatch pc=100, inst=CALL_FUNCTION(arg=1, lineno=360)
2022-05-06 22:35:56,968 stack ['$96load_global.41', '$num_polygon98.42']
2022-05-06 22:35:56,968 dispatch pc=102, inst=GET_ITER(arg=None, lineno=360)
2022-05-06 22:35:56,968 stack ['$100call_function.43']
2022-05-06 22:35:56,969 end state. edges=[Edge(pc=104, stack=('$102get_iter.44',), blockstack=(), npush=0)]
2022-05-06 22:35:56,969 pending: deque([State(pc_initial=104 nstack_initial=1)])
2022-05-06 22:35:56,969 stack: ['$phi104.0']
2022-05-06 22:35:56,969 dispatch pc=104, inst=FOR_ITER(arg=462, lineno=360)
2022-05-06 22:35:56,969 stack ['$phi104.0']
2022-05-06 22:35:56,970 end state. edges=[Edge(pc=570, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=('$phi104.0', '$104for_iter.2'), blockstack=(), npush=0)]
2022-05-06 22:35:56,970 pending: deque([State(pc_initial=570 nstack_initial=0), State(pc_initial=108 nstack_initial=2)])
2022-05-06 22:35:56,970 stack: []
2022-05-06 22:35:56,970 dispatch pc=570, inst=LOAD_FAST(arg=3, lineno=377)
2022-05-06 22:35:56,970 stack []
2022-05-06 22:35:56,970 dispatch pc=572, inst=LOAD_FAST(arg=4, lineno=377)
2022-05-06 22:35:56,970 stack ['$normal_vec570.0']
2022-05-06 22:35:56,970 dispatch pc=574, inst=BUILD_TUPLE(arg=2, lineno=377)
2022-05-06 22:35:56,970 stack ['$normal_vec570.0', '$d572.1']
2022-05-06 22:35:56,971 dispatch pc=576, inst=RETURN_VALUE(arg=None, lineno=377)
2022-05-06 22:35:56,971 stack ['$574build_tuple.2']
2022-05-06 22:35:56,971 end state. edges=[]
2022-05-06 22:35:56,971 pending: deque([State(pc_initial=108 nstack_initial=2)])
2022-05-06 22:35:56,971 stack: ['$phi108.0', '$phi108.1']
2022-05-06 22:35:56,971 dispatch pc=108, inst=STORE_FAST(arg=7, lineno=360)
2022-05-06 22:35:56,971 stack ['$phi108.0', '$phi108.1']
2022-05-06 22:35:56,971 dispatch pc=110, inst=LOAD_GLOBAL(arg=4, lineno=361)
2022-05-06 22:35:56,971 stack ['$phi108.0']
2022-05-06 22:35:56,971 dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=361)
2022-05-06 22:35:56,972 stack ['$phi108.0', '$110load_global.2']
2022-05-06 22:35:56,972 dispatch pc=114, inst=CALL_FUNCTION(arg=1, lineno=361)
2022-05-06 22:35:56,972 stack ['$phi108.0', '$110load_global.2', '$max_num_surfaces112.3']
2022-05-06 22:35:56,972 dispatch pc=116, inst=GET_ITER(arg=None, lineno=361)
2022-05-06 22:35:56,972 stack ['$phi108.0', '$114call_function.4']
2022-05-06 22:35:56,972 end state. edges=[Edge(pc=118, stack=('$phi108.0', '$116get_iter.5'), blockstack=(), npush=0)]
2022-05-06 22:35:56,972 pending: deque([State(pc_initial=118 nstack_initial=2)])
2022-05-06 22:35:56,972 stack: ['$phi118.0', '$phi118.1']
2022-05-06 22:35:56,973 dispatch pc=118, inst=FOR_ITER(arg=446, lineno=361)
2022-05-06 22:35:56,973 stack ['$phi118.0', '$phi118.1']
2022-05-06 22:35:56,973 end state. edges=[Edge(pc=568, stack=('$phi118.0',), blockstack=(), npush=0), Edge(pc=122, stack=('$phi118.0', '$phi118.1', '$118for_iter.3'), blockstack=(), npush=0)]
2022-05-06 22:35:56,973 pending: deque([State(pc_initial=568 nstack_initial=1), State(pc_initial=122 nstack_initial=3)])
2022-05-06 22:35:56,973 stack: ['$phi568.0']
2022-05-06 22:35:56,973 dispatch pc=568, inst=JUMP_ABSOLUTE(arg=104, lineno=372)
2022-05-06 22:35:56,973 stack ['$phi568.0']
2022-05-06 22:35:56,973 end state. edges=[Edge(pc=104, stack=('$phi568.0',), blockstack=(), npush=0)]
2022-05-06 22:35:56,973 pending: deque([State(pc_initial=122 nstack_initial=3), State(pc_initial=104 nstack_initial=1)])
2022-05-06 22:35:56,974 stack: ['$phi122.0', '$phi122.1', '$phi122.2']
2022-05-06 22:35:56,974 dispatch pc=122, inst=STORE_FAST(arg=8, lineno=361)
2022-05-06 22:35:56,974 stack ['$phi122.0', '$phi122.1', '$phi122.2']
2022-05-06 22:35:56,974 dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=362)
2022-05-06 22:35:56,974 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,974 dispatch pc=126, inst=LOAD_FAST(arg=7, lineno=362)
2022-05-06 22:35:56,974 stack ['$phi122.0', '$phi122.1', '$surfaces124.3']
2022-05-06 22:35:56,974 dispatch pc=128, inst=LOAD_FAST(arg=8, lineno=362)
2022-05-06 22:35:56,974 stack ['$phi122.0', '$phi122.1', '$surfaces124.3', '$i126.4']
2022-05-06 22:35:56,974 dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=362)
2022-05-06 22:35:56,975 stack ['$phi122.0', '$phi122.1', '$surfaces124.3', '$i126.4', '$j128.5']
2022-05-06 22:35:56,975 dispatch pc=132, inst=LOAD_CONST(arg=1, lineno=362)
2022-05-06 22:35:56,975 stack ['$phi122.0', '$phi122.1', '$surfaces124.3', '$i126.4', '$j128.5', '$const130.6']
2022-05-06 22:35:56,975 dispatch pc=134, inst=BUILD_TUPLE(arg=4, lineno=362)
2022-05-06 22:35:56,975 stack ['$phi122.0', '$phi122.1', '$surfaces124.3', '$i126.4', '$j128.5', '$const130.6', '$const132.7']
2022-05-06 22:35:56,975 dispatch pc=136, inst=BINARY_SUBSCR(arg=None, lineno=362)
2022-05-06 22:35:56,975 stack ['$phi122.0', '$phi122.1', '$surfaces124.3', '$134build_tuple.8']
2022-05-06 22:35:56,976 dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=362)
2022-05-06 22:35:56,976 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9']
2022-05-06 22:35:56,976 dispatch pc=140, inst=LOAD_FAST(arg=7, lineno=362)
2022-05-06 22:35:56,976 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10']
2022-05-06 22:35:56,976 dispatch pc=142, inst=LOAD_FAST(arg=8, lineno=362)
2022-05-06 22:35:56,976 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10', '$i140.11']
2022-05-06 22:35:56,976 dispatch pc=144, inst=LOAD_CONST(arg=2, lineno=362)
2022-05-06 22:35:56,976 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10', '$i140.11', '$j142.12']
2022-05-06 22:35:56,976 dispatch pc=146, inst=LOAD_CONST(arg=1, lineno=362)
2022-05-06 22:35:56,976 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10', '$i140.11', '$j142.12', '$const144.13']
2022-05-06 22:35:56,977 dispatch pc=148, inst=BUILD_TUPLE(arg=4, lineno=362)
2022-05-06 22:35:56,977 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10', '$i140.11', '$j142.12', '$const144.13', '$const146.14']
2022-05-06 22:35:56,977 dispatch pc=150, inst=BINARY_SUBSCR(arg=None, lineno=362)
2022-05-06 22:35:56,977 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$surfaces138.10', '$148build_tuple.15']
2022-05-06 22:35:56,977 dispatch pc=152, inst=BINARY_SUBTRACT(arg=None, lineno=362)
2022-05-06 22:35:56,977 stack ['$phi122.0', '$phi122.1', '$136binary_subscr.9', '$150binary_subscr.16']
2022-05-06 22:35:56,977 dispatch pc=154, inst=LOAD_FAST(arg=5, lineno=362)
2022-05-06 22:35:56,977 stack ['$phi122.0', '$phi122.1', '$152binary_subtract.17']
2022-05-06 22:35:56,978 dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=362)
2022-05-06 22:35:56,978 stack ['$phi122.0', '$phi122.1', '$152binary_subtract.17', '$sv0154.18']
2022-05-06 22:35:56,978 dispatch pc=158, inst=STORE_SUBSCR(arg=None, lineno=362)
2022-05-06 22:35:56,978 stack ['$phi122.0', '$phi122.1', '$152binary_subtract.17', '$sv0154.18', '$const156.19']
2022-05-06 22:35:56,978 dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=363)
2022-05-06 22:35:56,978 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,978 dispatch pc=162, inst=LOAD_FAST(arg=7, lineno=363)
2022-05-06 22:35:56,978 stack ['$phi122.0', '$phi122.1', '$surfaces160.20']
2022-05-06 22:35:56,978 dispatch pc=164, inst=LOAD_FAST(arg=8, lineno=363)
2022-05-06 22:35:56,978 stack ['$phi122.0', '$phi122.1', '$surfaces160.20', '$i162.21']
2022-05-06 22:35:56,979 dispatch pc=166, inst=LOAD_CONST(arg=1, lineno=363)
2022-05-06 22:35:56,979 stack ['$phi122.0', '$phi122.1', '$surfaces160.20', '$i162.21', '$j164.22']
2022-05-06 22:35:56,979 dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=363)
2022-05-06 22:35:56,979 stack ['$phi122.0', '$phi122.1', '$surfaces160.20', '$i162.21', '$j164.22', '$const166.23']
2022-05-06 22:35:56,979 dispatch pc=170, inst=BUILD_TUPLE(arg=4, lineno=363)
2022-05-06 22:35:56,979 stack ['$phi122.0', '$phi122.1', '$surfaces160.20', '$i162.21', '$j164.22', '$const166.23', '$const168.24']
2022-05-06 22:35:56,979 dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=363)
2022-05-06 22:35:56,979 stack ['$phi122.0', '$phi122.1', '$surfaces160.20', '$170build_tuple.25']
2022-05-06 22:35:56,979 dispatch pc=174, inst=LOAD_FAST(arg=0, lineno=363)
2022-05-06 22:35:56,979 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26']
2022-05-06 22:35:56,980 dispatch pc=176, inst=LOAD_FAST(arg=7, lineno=363)
2022-05-06 22:35:56,980 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27']
2022-05-06 22:35:56,980 dispatch pc=178, inst=LOAD_FAST(arg=8, lineno=363)
2022-05-06 22:35:56,980 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27', '$i176.28']
2022-05-06 22:35:56,980 dispatch pc=180, inst=LOAD_CONST(arg=2, lineno=363)
2022-05-06 22:35:56,980 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27', '$i176.28', '$j178.29']
2022-05-06 22:35:56,980 dispatch pc=182, inst=LOAD_CONST(arg=2, lineno=363)
2022-05-06 22:35:56,980 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27', '$i176.28', '$j178.29', '$const180.30']
2022-05-06 22:35:56,980 dispatch pc=184, inst=BUILD_TUPLE(arg=4, lineno=363)
2022-05-06 22:35:56,981 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27', '$i176.28', '$j178.29', '$const180.30', '$const182.31']
2022-05-06 22:35:56,981 dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=363)
2022-05-06 22:35:56,981 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$surfaces174.27', '$184build_tuple.32']
2022-05-06 22:35:56,981 dispatch pc=188, inst=BINARY_SUBTRACT(arg=None, lineno=363)
2022-05-06 22:35:56,981 stack ['$phi122.0', '$phi122.1', '$172binary_subscr.26', '$186binary_subscr.33']
2022-05-06 22:35:56,981 dispatch pc=190, inst=LOAD_FAST(arg=5, lineno=363)
2022-05-06 22:35:56,981 stack ['$phi122.0', '$phi122.1', '$188binary_subtract.34']
2022-05-06 22:35:56,981 dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=363)
2022-05-06 22:35:56,981 stack ['$phi122.0', '$phi122.1', '$188binary_subtract.34', '$sv0190.35']
2022-05-06 22:35:56,982 dispatch pc=194, inst=STORE_SUBSCR(arg=None, lineno=363)
2022-05-06 22:35:56,982 stack ['$phi122.0', '$phi122.1', '$188binary_subtract.34', '$sv0190.35', '$const192.36']
2022-05-06 22:35:56,982 dispatch pc=196, inst=LOAD_FAST(arg=0, lineno=364)
2022-05-06 22:35:56,982 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,982 dispatch pc=198, inst=LOAD_FAST(arg=7, lineno=364)
2022-05-06 22:35:56,982 stack ['$phi122.0', '$phi122.1', '$surfaces196.37']
2022-05-06 22:35:56,982 dispatch pc=200, inst=LOAD_FAST(arg=8, lineno=364)
2022-05-06 22:35:56,982 stack ['$phi122.0', '$phi122.1', '$surfaces196.37', '$i198.38']
2022-05-06 22:35:56,982 dispatch pc=202, inst=LOAD_CONST(arg=1, lineno=364)
2022-05-06 22:35:56,982 stack ['$phi122.0', '$phi122.1', '$surfaces196.37', '$i198.38', '$j200.39']
2022-05-06 22:35:56,983 dispatch pc=204, inst=LOAD_CONST(arg=7, lineno=364)
2022-05-06 22:35:56,983 stack ['$phi122.0', '$phi122.1', '$surfaces196.37', '$i198.38', '$j200.39', '$const202.40']
2022-05-06 22:35:56,983 dispatch pc=206, inst=BUILD_TUPLE(arg=4, lineno=364)
2022-05-06 22:35:56,983 stack ['$phi122.0', '$phi122.1', '$surfaces196.37', '$i198.38', '$j200.39', '$const202.40', '$const204.41']
2022-05-06 22:35:56,983 dispatch pc=208, inst=BINARY_SUBSCR(arg=None, lineno=364)
2022-05-06 22:35:56,983 stack ['$phi122.0', '$phi122.1', '$surfaces196.37', '$206build_tuple.42']
2022-05-06 22:35:56,983 dispatch pc=210, inst=LOAD_FAST(arg=0, lineno=364)
2022-05-06 22:35:56,983 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43']
2022-05-06 22:35:56,983 dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=364)
2022-05-06 22:35:56,983 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44']
2022-05-06 22:35:56,984 dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=364)
2022-05-06 22:35:56,984 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44', '$i212.45']
2022-05-06 22:35:56,984 dispatch pc=216, inst=LOAD_CONST(arg=2, lineno=364)
2022-05-06 22:35:56,984 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44', '$i212.45', '$j214.46']
2022-05-06 22:35:56,984 dispatch pc=218, inst=LOAD_CONST(arg=7, lineno=364)
2022-05-06 22:35:56,984 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44', '$i212.45', '$j214.46', '$const216.47']
2022-05-06 22:35:56,984 dispatch pc=220, inst=BUILD_TUPLE(arg=4, lineno=364)
2022-05-06 22:35:56,984 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44', '$i212.45', '$j214.46', '$const216.47', '$const218.48']
2022-05-06 22:35:56,984 dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=364)
2022-05-06 22:35:56,985 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$surfaces210.44', '$220build_tuple.49']
2022-05-06 22:35:56,985 dispatch pc=224, inst=BINARY_SUBTRACT(arg=None, lineno=364)
2022-05-06 22:35:56,985 stack ['$phi122.0', '$phi122.1', '$208binary_subscr.43', '$222binary_subscr.50']
2022-05-06 22:35:56,985 dispatch pc=226, inst=LOAD_FAST(arg=5, lineno=364)
2022-05-06 22:35:56,985 stack ['$phi122.0', '$phi122.1', '$224binary_subtract.51']
2022-05-06 22:35:56,985 dispatch pc=228, inst=LOAD_CONST(arg=7, lineno=364)
2022-05-06 22:35:56,985 stack ['$phi122.0', '$phi122.1', '$224binary_subtract.51', '$sv0226.52']
2022-05-06 22:35:56,985 dispatch pc=230, inst=STORE_SUBSCR(arg=None, lineno=364)
2022-05-06 22:35:56,985 stack ['$phi122.0', '$phi122.1', '$224binary_subtract.51', '$sv0226.52', '$const228.53']
2022-05-06 22:35:56,985 dispatch pc=232, inst=LOAD_FAST(arg=0, lineno=365)
2022-05-06 22:35:56,986 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,986 dispatch pc=234, inst=LOAD_FAST(arg=7, lineno=365)
2022-05-06 22:35:56,986 stack ['$phi122.0', '$phi122.1', '$surfaces232.54']
2022-05-06 22:35:56,986 dispatch pc=236, inst=LOAD_FAST(arg=8, lineno=365)
2022-05-06 22:35:56,986 stack ['$phi122.0', '$phi122.1', '$surfaces232.54', '$i234.55']
2022-05-06 22:35:56,986 dispatch pc=238, inst=LOAD_CONST(arg=2, lineno=365)
2022-05-06 22:35:56,987 stack ['$phi122.0', '$phi122.1', '$surfaces232.54', '$i234.55', '$j236.56']
2022-05-06 22:35:56,987 dispatch pc=240, inst=LOAD_CONST(arg=1, lineno=365)
2022-05-06 22:35:56,987 stack ['$phi122.0', '$phi122.1', '$surfaces232.54', '$i234.55', '$j236.56', '$const238.57']
2022-05-06 22:35:56,987 dispatch pc=242, inst=BUILD_TUPLE(arg=4, lineno=365)
2022-05-06 22:35:56,987 stack ['$phi122.0', '$phi122.1', '$surfaces232.54', '$i234.55', '$j236.56', '$const238.57', '$const240.58']
2022-05-06 22:35:56,988 dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=365)
2022-05-06 22:35:56,988 stack ['$phi122.0', '$phi122.1', '$surfaces232.54', '$242build_tuple.59']
2022-05-06 22:35:56,988 dispatch pc=246, inst=LOAD_FAST(arg=0, lineno=365)
2022-05-06 22:35:56,988 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60']
2022-05-06 22:35:56,988 dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=365)
2022-05-06 22:35:56,988 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61']
2022-05-06 22:35:56,989 dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=365)
2022-05-06 22:35:56,989 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61', '$i248.62']
2022-05-06 22:35:56,989 dispatch pc=252, inst=LOAD_CONST(arg=7, lineno=365)
2022-05-06 22:35:56,989 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61', '$i248.62', '$j250.63']
2022-05-06 22:35:56,989 dispatch pc=254, inst=LOAD_CONST(arg=1, lineno=365)
2022-05-06 22:35:56,989 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61', '$i248.62', '$j250.63', '$const252.64']
2022-05-06 22:35:56,990 dispatch pc=256, inst=BUILD_TUPLE(arg=4, lineno=365)
2022-05-06 22:35:56,990 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61', '$i248.62', '$j250.63', '$const252.64', '$const254.65']
2022-05-06 22:35:56,990 dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=365)
2022-05-06 22:35:56,990 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$surfaces246.61', '$256build_tuple.66']
2022-05-06 22:35:56,990 dispatch pc=260, inst=BINARY_SUBTRACT(arg=None, lineno=365)
2022-05-06 22:35:56,990 stack ['$phi122.0', '$phi122.1', '$244binary_subscr.60', '$258binary_subscr.67']
2022-05-06 22:35:56,991 dispatch pc=262, inst=LOAD_FAST(arg=6, lineno=365)
2022-05-06 22:35:56,991 stack ['$phi122.0', '$phi122.1', '$260binary_subtract.68']
2022-05-06 22:35:56,991 dispatch pc=264, inst=LOAD_CONST(arg=1, lineno=365)
2022-05-06 22:35:56,991 stack ['$phi122.0', '$phi122.1', '$260binary_subtract.68', '$sv1262.69']
2022-05-06 22:35:56,991 dispatch pc=266, inst=STORE_SUBSCR(arg=None, lineno=365)
2022-05-06 22:35:56,991 stack ['$phi122.0', '$phi122.1', '$260binary_subtract.68', '$sv1262.69', '$const264.70']
2022-05-06 22:35:56,991 dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=366)
2022-05-06 22:35:56,992 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,992 dispatch pc=270, inst=LOAD_FAST(arg=7, lineno=366)
2022-05-06 22:35:56,992 stack ['$phi122.0', '$phi122.1', '$surfaces268.71']
2022-05-06 22:35:56,992 dispatch pc=272, inst=LOAD_FAST(arg=8, lineno=366)
2022-05-06 22:35:56,992 stack ['$phi122.0', '$phi122.1', '$surfaces268.71', '$i270.72']
2022-05-06 22:35:56,992 dispatch pc=274, inst=LOAD_CONST(arg=2, lineno=366)
2022-05-06 22:35:56,992 stack ['$phi122.0', '$phi122.1', '$surfaces268.71', '$i270.72', '$j272.73']
2022-05-06 22:35:56,992 dispatch pc=276, inst=LOAD_CONST(arg=2, lineno=366)
2022-05-06 22:35:56,992 stack ['$phi122.0', '$phi122.1', '$surfaces268.71', '$i270.72', '$j272.73', '$const274.74']
2022-05-06 22:35:56,992 dispatch pc=278, inst=BUILD_TUPLE(arg=4, lineno=366)
2022-05-06 22:35:56,993 stack ['$phi122.0', '$phi122.1', '$surfaces268.71', '$i270.72', '$j272.73', '$const274.74', '$const276.75']
2022-05-06 22:35:56,993 dispatch pc=280, inst=BINARY_SUBSCR(arg=None, lineno=366)
2022-05-06 22:35:56,993 stack ['$phi122.0', '$phi122.1', '$surfaces268.71', '$278build_tuple.76']
2022-05-06 22:35:56,993 dispatch pc=282, inst=LOAD_FAST(arg=0, lineno=366)
2022-05-06 22:35:56,993 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77']
2022-05-06 22:35:56,993 dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=366)
2022-05-06 22:35:56,993 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78']
2022-05-06 22:35:56,993 dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=366)
2022-05-06 22:35:56,993 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78', '$i284.79']
2022-05-06 22:35:56,994 dispatch pc=288, inst=LOAD_CONST(arg=7, lineno=366)
2022-05-06 22:35:56,994 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78', '$i284.79', '$j286.80']
2022-05-06 22:35:56,994 dispatch pc=290, inst=LOAD_CONST(arg=2, lineno=366)
2022-05-06 22:35:56,994 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78', '$i284.79', '$j286.80', '$const288.81']
2022-05-06 22:35:56,994 dispatch pc=292, inst=BUILD_TUPLE(arg=4, lineno=366)
2022-05-06 22:35:56,994 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78', '$i284.79', '$j286.80', '$const288.81', '$const290.82']
2022-05-06 22:35:56,994 dispatch pc=294, inst=BINARY_SUBSCR(arg=None, lineno=366)
2022-05-06 22:35:56,994 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$surfaces282.78', '$292build_tuple.83']
2022-05-06 22:35:56,994 dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=366)
2022-05-06 22:35:56,994 stack ['$phi122.0', '$phi122.1', '$280binary_subscr.77', '$294binary_subscr.84']
2022-05-06 22:35:56,995 dispatch pc=298, inst=LOAD_FAST(arg=6, lineno=366)
2022-05-06 22:35:56,995 stack ['$phi122.0', '$phi122.1', '$296binary_subtract.85']
2022-05-06 22:35:56,995 dispatch pc=300, inst=LOAD_CONST(arg=2, lineno=366)
2022-05-06 22:35:56,995 stack ['$phi122.0', '$phi122.1', '$296binary_subtract.85', '$sv1298.86']
2022-05-06 22:35:56,995 dispatch pc=302, inst=STORE_SUBSCR(arg=None, lineno=366)
2022-05-06 22:35:56,995 stack ['$phi122.0', '$phi122.1', '$296binary_subtract.85', '$sv1298.86', '$const300.87']
2022-05-06 22:35:56,995 dispatch pc=304, inst=LOAD_FAST(arg=0, lineno=367)
2022-05-06 22:35:56,995 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,995 dispatch pc=306, inst=LOAD_FAST(arg=7, lineno=367)
2022-05-06 22:35:56,995 stack ['$phi122.0', '$phi122.1', '$surfaces304.88']
2022-05-06 22:35:56,996 dispatch pc=308, inst=LOAD_FAST(arg=8, lineno=367)
2022-05-06 22:35:56,996 stack ['$phi122.0', '$phi122.1', '$surfaces304.88', '$i306.89']
2022-05-06 22:35:56,996 dispatch pc=310, inst=LOAD_CONST(arg=2, lineno=367)
2022-05-06 22:35:56,996 stack ['$phi122.0', '$phi122.1', '$surfaces304.88', '$i306.89', '$j308.90']
2022-05-06 22:35:56,996 dispatch pc=312, inst=LOAD_CONST(arg=7, lineno=367)
2022-05-06 22:35:56,996 stack ['$phi122.0', '$phi122.1', '$surfaces304.88', '$i306.89', '$j308.90', '$const310.91']
2022-05-06 22:35:56,996 dispatch pc=314, inst=BUILD_TUPLE(arg=4, lineno=367)
2022-05-06 22:35:56,996 stack ['$phi122.0', '$phi122.1', '$surfaces304.88', '$i306.89', '$j308.90', '$const310.91', '$const312.92']
2022-05-06 22:35:56,996 dispatch pc=316, inst=BINARY_SUBSCR(arg=None, lineno=367)
2022-05-06 22:35:56,997 stack ['$phi122.0', '$phi122.1', '$surfaces304.88', '$314build_tuple.93']
2022-05-06 22:35:56,997 dispatch pc=318, inst=LOAD_FAST(arg=0, lineno=367)
2022-05-06 22:35:56,997 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94']
2022-05-06 22:35:56,997 dispatch pc=320, inst=LOAD_FAST(arg=7, lineno=367)
2022-05-06 22:35:56,997 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95']
2022-05-06 22:35:56,997 dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=367)
2022-05-06 22:35:56,997 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95', '$i320.96']
2022-05-06 22:35:56,997 dispatch pc=324, inst=LOAD_CONST(arg=7, lineno=367)
2022-05-06 22:35:56,997 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95', '$i320.96', '$j322.97']
2022-05-06 22:35:56,997 dispatch pc=326, inst=LOAD_CONST(arg=7, lineno=367)
2022-05-06 22:35:56,998 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95', '$i320.96', '$j322.97', '$const324.98']
2022-05-06 22:35:56,998 dispatch pc=328, inst=BUILD_TUPLE(arg=4, lineno=367)
2022-05-06 22:35:56,998 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95', '$i320.96', '$j322.97', '$const324.98', '$const326.99']
2022-05-06 22:35:56,998 dispatch pc=330, inst=BINARY_SUBSCR(arg=None, lineno=367)
2022-05-06 22:35:56,998 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$surfaces318.95', '$328build_tuple.100']
2022-05-06 22:35:56,998 dispatch pc=332, inst=BINARY_SUBTRACT(arg=None, lineno=367)
2022-05-06 22:35:56,998 stack ['$phi122.0', '$phi122.1', '$316binary_subscr.94', '$330binary_subscr.101']
2022-05-06 22:35:56,998 dispatch pc=334, inst=LOAD_FAST(arg=6, lineno=367)
2022-05-06 22:35:56,998 stack ['$phi122.0', '$phi122.1', '$332binary_subtract.102']
2022-05-06 22:35:56,999 dispatch pc=336, inst=LOAD_CONST(arg=7, lineno=367)
2022-05-06 22:35:56,999 stack ['$phi122.0', '$phi122.1', '$332binary_subtract.102', '$sv1334.103']
2022-05-06 22:35:56,999 dispatch pc=338, inst=STORE_SUBSCR(arg=None, lineno=367)
2022-05-06 22:35:56,999 stack ['$phi122.0', '$phi122.1', '$332binary_subtract.102', '$sv1334.103', '$const336.104']
2022-05-06 22:35:56,999 dispatch pc=340, inst=LOAD_FAST(arg=5, lineno=368)
2022-05-06 22:35:56,999 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:56,999 dispatch pc=342, inst=LOAD_CONST(arg=2, lineno=368)
2022-05-06 22:35:56,999 stack ['$phi122.0', '$phi122.1', '$sv0340.105']
2022-05-06 22:35:56,999 dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=368)
2022-05-06 22:35:57,000 stack ['$phi122.0', '$phi122.1', '$sv0340.105', '$const342.106']
2022-05-06 22:35:57,000 dispatch pc=346, inst=LOAD_FAST(arg=6, lineno=368)
2022-05-06 22:35:57,000 stack ['$phi122.0', '$phi122.1', '$344binary_subscr.107']
2022-05-06 22:35:57,000 dispatch pc=348, inst=LOAD_CONST(arg=7, lineno=368)
2022-05-06 22:35:57,000 stack ['$phi122.0', '$phi122.1', '$344binary_subscr.107', '$sv1346.108']
2022-05-06 22:35:57,000 dispatch pc=350, inst=BINARY_SUBSCR(arg=None, lineno=368)
2022-05-06 22:35:57,000 stack ['$phi122.0', '$phi122.1', '$344binary_subscr.107', '$sv1346.108', '$const348.109']
2022-05-06 22:35:57,000 dispatch pc=352, inst=BINARY_MULTIPLY(arg=None, lineno=368)
2022-05-06 22:35:57,000 stack ['$phi122.0', '$phi122.1', '$344binary_subscr.107', '$350binary_subscr.110']
2022-05-06 22:35:57,001 dispatch pc=354, inst=LOAD_FAST(arg=5, lineno=368)
2022-05-06 22:35:57,001 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111']
2022-05-06 22:35:57,001 dispatch pc=356, inst=LOAD_CONST(arg=7, lineno=368)
2022-05-06 22:35:57,001 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$sv0354.112']
2022-05-06 22:35:57,001 dispatch pc=358, inst=BINARY_SUBSCR(arg=None, lineno=368)
2022-05-06 22:35:57,001 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$sv0354.112', '$const356.113']
2022-05-06 22:35:57,001 dispatch pc=360, inst=LOAD_FAST(arg=6, lineno=368)
2022-05-06 22:35:57,001 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$358binary_subscr.114']
2022-05-06 22:35:57,001 dispatch pc=362, inst=LOAD_CONST(arg=2, lineno=368)
2022-05-06 22:35:57,001 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$358binary_subscr.114', '$sv1360.115']
2022-05-06 22:35:57,002 dispatch pc=364, inst=BINARY_SUBSCR(arg=None, lineno=368)
2022-05-06 22:35:57,002 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$358binary_subscr.114', '$sv1360.115', '$const362.116']
2022-05-06 22:35:57,002 dispatch pc=366, inst=BINARY_MULTIPLY(arg=None, lineno=368)
2022-05-06 22:35:57,002 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$358binary_subscr.114', '$364binary_subscr.117']
2022-05-06 22:35:57,002 dispatch pc=368, inst=BINARY_SUBTRACT(arg=None, lineno=368)
2022-05-06 22:35:57,002 stack ['$phi122.0', '$phi122.1', '$352binary_multiply.111', '$366binary_multiply.118']
2022-05-06 22:35:57,002 dispatch pc=370, inst=LOAD_FAST(arg=3, lineno=368)
2022-05-06 22:35:57,002 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119']
2022-05-06 22:35:57,003 dispatch pc=372, inst=LOAD_FAST(arg=7, lineno=368)
2022-05-06 22:35:57,003 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119', '$normal_vec370.120']
2022-05-06 22:35:57,003 dispatch pc=374, inst=LOAD_FAST(arg=8, lineno=368)
2022-05-06 22:35:57,003 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119', '$normal_vec370.120', '$i372.121']
2022-05-06 22:35:57,003 dispatch pc=376, inst=LOAD_CONST(arg=1, lineno=368)
2022-05-06 22:35:57,003 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119', '$normal_vec370.120', '$i372.121', '$j374.122']
2022-05-06 22:35:57,003 dispatch pc=378, inst=BUILD_TUPLE(arg=3, lineno=368)
2022-05-06 22:35:57,003 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119', '$normal_vec370.120', '$i372.121', '$j374.122', '$const376.123']
2022-05-06 22:35:57,003 dispatch pc=380, inst=STORE_SUBSCR(arg=None, lineno=368)
2022-05-06 22:35:57,003 stack ['$phi122.0', '$phi122.1', '$368binary_subtract.119', '$normal_vec370.120', '$378build_tuple.124']
2022-05-06 22:35:57,004 dispatch pc=382, inst=LOAD_FAST(arg=5, lineno=369)
2022-05-06 22:35:57,004 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:57,004 dispatch pc=384, inst=LOAD_CONST(arg=7, lineno=369)
2022-05-06 22:35:57,004 stack ['$phi122.0', '$phi122.1', '$sv0382.125']
2022-05-06 22:35:57,004 dispatch pc=386, inst=BINARY_SUBSCR(arg=None, lineno=369)
2022-05-06 22:35:57,004 stack ['$phi122.0', '$phi122.1', '$sv0382.125', '$const384.126']
2022-05-06 22:35:57,004 dispatch pc=388, inst=LOAD_FAST(arg=6, lineno=369)
2022-05-06 22:35:57,004 stack ['$phi122.0', '$phi122.1', '$386binary_subscr.127']
2022-05-06 22:35:57,004 dispatch pc=390, inst=LOAD_CONST(arg=1, lineno=369)
2022-05-06 22:35:57,005 stack ['$phi122.0', '$phi122.1', '$386binary_subscr.127', '$sv1388.128']
2022-05-06 22:35:57,005 dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=369)
2022-05-06 22:35:57,005 stack ['$phi122.0', '$phi122.1', '$386binary_subscr.127', '$sv1388.128', '$const390.129']
2022-05-06 22:35:57,005 dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=369)
2022-05-06 22:35:57,005 stack ['$phi122.0', '$phi122.1', '$386binary_subscr.127', '$392binary_subscr.130']
2022-05-06 22:35:57,005 dispatch pc=396, inst=LOAD_FAST(arg=5, lineno=369)
2022-05-06 22:35:57,005 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131']
2022-05-06 22:35:57,005 dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=369)
2022-05-06 22:35:57,005 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$sv0396.132']
2022-05-06 22:35:57,006 dispatch pc=400, inst=BINARY_SUBSCR(arg=None, lineno=369)
2022-05-06 22:35:57,006 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$sv0396.132', '$const398.133']
2022-05-06 22:35:57,006 dispatch pc=402, inst=LOAD_FAST(arg=6, lineno=369)
2022-05-06 22:35:57,006 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$400binary_subscr.134']
2022-05-06 22:35:57,006 dispatch pc=404, inst=LOAD_CONST(arg=7, lineno=369)
2022-05-06 22:35:57,006 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$400binary_subscr.134', '$sv1402.135']
2022-05-06 22:35:57,006 dispatch pc=406, inst=BINARY_SUBSCR(arg=None, lineno=369)
2022-05-06 22:35:57,006 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$400binary_subscr.134', '$sv1402.135', '$const404.136']
2022-05-06 22:35:57,006 dispatch pc=408, inst=BINARY_MULTIPLY(arg=None, lineno=369)
2022-05-06 22:35:57,006 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$400binary_subscr.134', '$406binary_subscr.137']
2022-05-06 22:35:57,007 dispatch pc=410, inst=BINARY_SUBTRACT(arg=None, lineno=369)
2022-05-06 22:35:57,007 stack ['$phi122.0', '$phi122.1', '$394binary_multiply.131', '$408binary_multiply.138']
2022-05-06 22:35:57,007 dispatch pc=412, inst=LOAD_FAST(arg=3, lineno=369)
2022-05-06 22:35:57,007 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139']
2022-05-06 22:35:57,007 dispatch pc=414, inst=LOAD_FAST(arg=7, lineno=369)
2022-05-06 22:35:57,007 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139', '$normal_vec412.140']
2022-05-06 22:35:57,007 dispatch pc=416, inst=LOAD_FAST(arg=8, lineno=369)
2022-05-06 22:35:57,008 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139', '$normal_vec412.140', '$i414.141']
2022-05-06 22:35:57,008 dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=369)
2022-05-06 22:35:57,008 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139', '$normal_vec412.140', '$i414.141', '$j416.142']
2022-05-06 22:35:57,008 dispatch pc=420, inst=BUILD_TUPLE(arg=3, lineno=369)
2022-05-06 22:35:57,008 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139', '$normal_vec412.140', '$i414.141', '$j416.142', '$const418.143']
2022-05-06 22:35:57,008 dispatch pc=422, inst=STORE_SUBSCR(arg=None, lineno=369)
2022-05-06 22:35:57,008 stack ['$phi122.0', '$phi122.1', '$410binary_subtract.139', '$normal_vec412.140', '$420build_tuple.144']
2022-05-06 22:35:57,008 dispatch pc=424, inst=LOAD_FAST(arg=5, lineno=370)
2022-05-06 22:35:57,009 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:57,009 dispatch pc=426, inst=LOAD_CONST(arg=1, lineno=370)
2022-05-06 22:35:57,009 stack ['$phi122.0', '$phi122.1', '$sv0424.145']
2022-05-06 22:35:57,009 dispatch pc=428, inst=BINARY_SUBSCR(arg=None, lineno=370)
2022-05-06 22:35:57,009 stack ['$phi122.0', '$phi122.1', '$sv0424.145', '$const426.146']
2022-05-06 22:35:57,009 dispatch pc=430, inst=LOAD_FAST(arg=6, lineno=370)
2022-05-06 22:35:57,009 stack ['$phi122.0', '$phi122.1', '$428binary_subscr.147']
2022-05-06 22:35:57,009 dispatch pc=432, inst=LOAD_CONST(arg=2, lineno=370)
2022-05-06 22:35:57,009 stack ['$phi122.0', '$phi122.1', '$428binary_subscr.147', '$sv1430.148']
2022-05-06 22:35:57,009 dispatch pc=434, inst=BINARY_SUBSCR(arg=None, lineno=370)
2022-05-06 22:35:57,010 stack ['$phi122.0', '$phi122.1', '$428binary_subscr.147', '$sv1430.148', '$const432.149']
2022-05-06 22:35:57,010 dispatch pc=436, inst=BINARY_MULTIPLY(arg=None, lineno=370)
2022-05-06 22:35:57,010 stack ['$phi122.0', '$phi122.1', '$428binary_subscr.147', '$434binary_subscr.150']
2022-05-06 22:35:57,010 dispatch pc=438, inst=LOAD_FAST(arg=5, lineno=370)
2022-05-06 22:35:57,010 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151']
2022-05-06 22:35:57,010 dispatch pc=440, inst=LOAD_CONST(arg=2, lineno=370)
2022-05-06 22:35:57,010 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$sv0438.152']
2022-05-06 22:35:57,010 dispatch pc=442, inst=BINARY_SUBSCR(arg=None, lineno=370)
2022-05-06 22:35:57,010 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$sv0438.152', '$const440.153']
2022-05-06 22:35:57,011 dispatch pc=444, inst=LOAD_FAST(arg=6, lineno=370)
2022-05-06 22:35:57,011 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$442binary_subscr.154']
2022-05-06 22:35:57,011 dispatch pc=446, inst=LOAD_CONST(arg=1, lineno=370)
2022-05-06 22:35:57,011 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$442binary_subscr.154', '$sv1444.155']
2022-05-06 22:35:57,011 dispatch pc=448, inst=BINARY_SUBSCR(arg=None, lineno=370)
2022-05-06 22:35:57,011 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$442binary_subscr.154', '$sv1444.155', '$const446.156']
2022-05-06 22:35:57,011 dispatch pc=450, inst=BINARY_MULTIPLY(arg=None, lineno=370)
2022-05-06 22:35:57,011 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$442binary_subscr.154', '$448binary_subscr.157']
2022-05-06 22:35:57,011 dispatch pc=452, inst=BINARY_SUBTRACT(arg=None, lineno=370)
2022-05-06 22:35:57,011 stack ['$phi122.0', '$phi122.1', '$436binary_multiply.151', '$450binary_multiply.158']
2022-05-06 22:35:57,012 dispatch pc=454, inst=LOAD_FAST(arg=3, lineno=370)
2022-05-06 22:35:57,012 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159']
2022-05-06 22:35:57,012 dispatch pc=456, inst=LOAD_FAST(arg=7, lineno=370)
2022-05-06 22:35:57,012 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159', '$normal_vec454.160']
2022-05-06 22:35:57,012 dispatch pc=458, inst=LOAD_FAST(arg=8, lineno=370)
2022-05-06 22:35:57,012 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159', '$normal_vec454.160', '$i456.161']
2022-05-06 22:35:57,012 dispatch pc=460, inst=LOAD_CONST(arg=7, lineno=370)
2022-05-06 22:35:57,012 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159', '$normal_vec454.160', '$i456.161', '$j458.162']
2022-05-06 22:35:57,012 dispatch pc=462, inst=BUILD_TUPLE(arg=3, lineno=370)
2022-05-06 22:35:57,012 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159', '$normal_vec454.160', '$i456.161', '$j458.162', '$const460.163']
2022-05-06 22:35:57,013 dispatch pc=464, inst=STORE_SUBSCR(arg=None, lineno=370)
2022-05-06 22:35:57,013 stack ['$phi122.0', '$phi122.1', '$452binary_subtract.159', '$normal_vec454.160', '$462build_tuple.164']
2022-05-06 22:35:57,013 dispatch pc=466, inst=LOAD_FAST(arg=0, lineno=373)
2022-05-06 22:35:57,013 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:57,013 dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=373)
2022-05-06 22:35:57,013 stack ['$phi122.0', '$phi122.1', '$surfaces466.165']
2022-05-06 22:35:57,013 dispatch pc=470, inst=LOAD_FAST(arg=8, lineno=373)
2022-05-06 22:35:57,013 stack ['$phi122.0', '$phi122.1', '$surfaces466.165', '$i468.166']
2022-05-06 22:35:57,013 dispatch pc=472, inst=LOAD_CONST(arg=1, lineno=373)
2022-05-06 22:35:57,014 stack ['$phi122.0', '$phi122.1', '$surfaces466.165', '$i468.166', '$j470.167']
2022-05-06 22:35:57,014 dispatch pc=474, inst=LOAD_CONST(arg=1, lineno=373)
2022-05-06 22:35:57,014 stack ['$phi122.0', '$phi122.1', '$surfaces466.165', '$i468.166', '$j470.167', '$const472.168']
2022-05-06 22:35:57,014 dispatch pc=476, inst=BUILD_TUPLE(arg=4, lineno=373)
2022-05-06 22:35:57,014 stack ['$phi122.0', '$phi122.1', '$surfaces466.165', '$i468.166', '$j470.167', '$const472.168', '$const474.169']
2022-05-06 22:35:57,014 dispatch pc=478, inst=BINARY_SUBSCR(arg=None, lineno=373)
2022-05-06 22:35:57,014 stack ['$phi122.0', '$phi122.1', '$surfaces466.165', '$476build_tuple.170']
2022-05-06 22:35:57,014 dispatch pc=480, inst=UNARY_NEGATIVE(arg=None, lineno=373)
2022-05-06 22:35:57,014 stack ['$phi122.0', '$phi122.1', '$478binary_subscr.171']
2022-05-06 22:35:57,015 dispatch pc=482, inst=LOAD_FAST(arg=3, lineno=373)
2022-05-06 22:35:57,015 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172']
2022-05-06 22:35:57,015 dispatch pc=484, inst=LOAD_FAST(arg=7, lineno=373)
2022-05-06 22:35:57,015 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$normal_vec482.173']
2022-05-06 22:35:57,015 dispatch pc=486, inst=LOAD_FAST(arg=8, lineno=373)
2022-05-06 22:35:57,015 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$normal_vec482.173', '$i484.174']
2022-05-06 22:35:57,015 dispatch pc=488, inst=LOAD_CONST(arg=1, lineno=373)
2022-05-06 22:35:57,015 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$normal_vec482.173', '$i484.174', '$j486.175']
2022-05-06 22:35:57,015 dispatch pc=490, inst=BUILD_TUPLE(arg=3, lineno=373)
2022-05-06 22:35:57,015 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$normal_vec482.173', '$i484.174', '$j486.175', '$const488.176']
2022-05-06 22:35:57,016 dispatch pc=492, inst=BINARY_SUBSCR(arg=None, lineno=373)
2022-05-06 22:35:57,016 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$normal_vec482.173', '$490build_tuple.177']
2022-05-06 22:35:57,016 dispatch pc=494, inst=BINARY_MULTIPLY(arg=None, lineno=373)
2022-05-06 22:35:57,016 stack ['$phi122.0', '$phi122.1', '$480unary_negative.172', '$492binary_subscr.178']
2022-05-06 22:35:57,016 dispatch pc=496, inst=LOAD_FAST(arg=0, lineno=374)
2022-05-06 22:35:57,016 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179']
2022-05-06 22:35:57,016 dispatch pc=498, inst=LOAD_FAST(arg=7, lineno=374)
2022-05-06 22:35:57,016 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180']
2022-05-06 22:35:57,016 dispatch pc=500, inst=LOAD_FAST(arg=8, lineno=374)
2022-05-06 22:35:57,016 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180', '$i498.181']
2022-05-06 22:35:57,017 dispatch pc=502, inst=LOAD_CONST(arg=1, lineno=374)
2022-05-06 22:35:57,017 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180', '$i498.181', '$j500.182']
2022-05-06 22:35:57,017 dispatch pc=504, inst=LOAD_CONST(arg=2, lineno=374)
2022-05-06 22:35:57,017 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180', '$i498.181', '$j500.182', '$const502.183']
2022-05-06 22:35:57,017 dispatch pc=506, inst=BUILD_TUPLE(arg=4, lineno=374)
2022-05-06 22:35:57,017 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180', '$i498.181', '$j500.182', '$const502.183', '$const504.184']
2022-05-06 22:35:57,017 dispatch pc=508, inst=BINARY_SUBSCR(arg=None, lineno=374)
2022-05-06 22:35:57,017 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$surfaces496.180', '$506build_tuple.185']
2022-05-06 22:35:57,017 dispatch pc=510, inst=LOAD_FAST(arg=3, lineno=374)
2022-05-06 22:35:57,018 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186']
2022-05-06 22:35:57,018 dispatch pc=512, inst=LOAD_FAST(arg=7, lineno=374)
2022-05-06 22:35:57,018 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$normal_vec510.187']
2022-05-06 22:35:57,018 dispatch pc=514, inst=LOAD_FAST(arg=8, lineno=374)
2022-05-06 22:35:57,018 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$normal_vec510.187', '$i512.188']
2022-05-06 22:35:57,018 dispatch pc=516, inst=LOAD_CONST(arg=2, lineno=374)
2022-05-06 22:35:57,018 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$normal_vec510.187', '$i512.188', '$j514.189']
2022-05-06 22:35:57,018 dispatch pc=518, inst=BUILD_TUPLE(arg=3, lineno=374)
2022-05-06 22:35:57,018 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$normal_vec510.187', '$i512.188', '$j514.189', '$const516.190']
2022-05-06 22:35:57,018 dispatch pc=520, inst=BINARY_SUBSCR(arg=None, lineno=374)
2022-05-06 22:35:57,019 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$normal_vec510.187', '$518build_tuple.191']
2022-05-06 22:35:57,019 dispatch pc=522, inst=BINARY_MULTIPLY(arg=None, lineno=374)
2022-05-06 22:35:57,019 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$508binary_subscr.186', '$520binary_subscr.192']
2022-05-06 22:35:57,019 dispatch pc=524, inst=BINARY_SUBTRACT(arg=None, lineno=373)
2022-05-06 22:35:57,019 stack ['$phi122.0', '$phi122.1', '$494binary_multiply.179', '$522binary_multiply.193']
2022-05-06 22:35:57,019 dispatch pc=526, inst=LOAD_FAST(arg=0, lineno=375)
2022-05-06 22:35:57,019 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194']
2022-05-06 22:35:57,019 dispatch pc=528, inst=LOAD_FAST(arg=7, lineno=375)
2022-05-06 22:35:57,019 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195']
2022-05-06 22:35:57,019 dispatch pc=530, inst=LOAD_FAST(arg=8, lineno=375)
2022-05-06 22:35:57,020 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195', '$i528.196']
2022-05-06 22:35:57,020 dispatch pc=532, inst=LOAD_CONST(arg=1, lineno=375)
2022-05-06 22:35:57,020 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195', '$i528.196', '$j530.197']
2022-05-06 22:35:57,020 dispatch pc=534, inst=LOAD_CONST(arg=7, lineno=375)
2022-05-06 22:35:57,020 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195', '$i528.196', '$j530.197', '$const532.198']
2022-05-06 22:35:57,020 dispatch pc=536, inst=BUILD_TUPLE(arg=4, lineno=375)
2022-05-06 22:35:57,020 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195', '$i528.196', '$j530.197', '$const532.198', '$const534.199']
2022-05-06 22:35:57,020 dispatch pc=538, inst=BINARY_SUBSCR(arg=None, lineno=375)
2022-05-06 22:35:57,020 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$surfaces526.195', '$536build_tuple.200']
2022-05-06 22:35:57,021 dispatch pc=540, inst=LOAD_FAST(arg=3, lineno=375)
2022-05-06 22:35:57,021 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201']
2022-05-06 22:35:57,021 dispatch pc=542, inst=LOAD_FAST(arg=7, lineno=375)
2022-05-06 22:35:57,021 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$normal_vec540.202']
2022-05-06 22:35:57,021 dispatch pc=544, inst=LOAD_FAST(arg=8, lineno=375)
2022-05-06 22:35:57,021 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$normal_vec540.202', '$i542.203']
2022-05-06 22:35:57,021 dispatch pc=546, inst=LOAD_CONST(arg=7, lineno=375)
2022-05-06 22:35:57,021 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$normal_vec540.202', '$i542.203', '$j544.204']
2022-05-06 22:35:57,021 dispatch pc=548, inst=BUILD_TUPLE(arg=3, lineno=375)
2022-05-06 22:35:57,022 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$normal_vec540.202', '$i542.203', '$j544.204', '$const546.205']
2022-05-06 22:35:57,022 dispatch pc=550, inst=BINARY_SUBSCR(arg=None, lineno=375)
2022-05-06 22:35:57,022 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$normal_vec540.202', '$548build_tuple.206']
2022-05-06 22:35:57,022 dispatch pc=552, inst=BINARY_MULTIPLY(arg=None, lineno=375)
2022-05-06 22:35:57,022 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$538binary_subscr.201', '$550binary_subscr.207']
2022-05-06 22:35:57,022 dispatch pc=554, inst=BINARY_SUBTRACT(arg=None, lineno=373)
2022-05-06 22:35:57,022 stack ['$phi122.0', '$phi122.1', '$524binary_subtract.194', '$552binary_multiply.208']
2022-05-06 22:35:57,022 dispatch pc=556, inst=LOAD_FAST(arg=4, lineno=372)
2022-05-06 22:35:57,023 stack ['$phi122.0', '$phi122.1', '$554binary_subtract.209']
2022-05-06 22:35:57,023 dispatch pc=558, inst=LOAD_FAST(arg=7, lineno=372)
2022-05-06 22:35:57,023 stack ['$phi122.0', '$phi122.1', '$554binary_subtract.209', '$d556.210']
2022-05-06 22:35:57,023 dispatch pc=560, inst=LOAD_FAST(arg=8, lineno=372)
2022-05-06 22:35:57,023 stack ['$phi122.0', '$phi122.1', '$554binary_subtract.209', '$d556.210', '$i558.211']
2022-05-06 22:35:57,023 dispatch pc=562, inst=BUILD_TUPLE(arg=2, lineno=372)
2022-05-06 22:35:57,024 stack ['$phi122.0', '$phi122.1', '$554binary_subtract.209', '$d556.210', '$i558.211', '$j560.212']
2022-05-06 22:35:57,024 dispatch pc=564, inst=STORE_SUBSCR(arg=None, lineno=372)
2022-05-06 22:35:57,024 stack ['$phi122.0', '$phi122.1', '$554binary_subtract.209', '$d556.210', '$562build_tuple.213']
2022-05-06 22:35:57,024 dispatch pc=566, inst=JUMP_ABSOLUTE(arg=118, lineno=372)
2022-05-06 22:35:57,024 stack ['$phi122.0', '$phi122.1']
2022-05-06 22:35:57,024 end state. edges=[Edge(pc=118, stack=('$phi122.0', '$phi122.1'), blockstack=(), npush=0)]
2022-05-06 22:35:57,025 pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=118 nstack_initial=2)])
2022-05-06 22:35:57,025 pending: deque([State(pc_initial=118 nstack_initial=2)])
2022-05-06 22:35:57,025 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,025 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): {'$phi104.0'},
             State(pc_initial=108 nstack_initial=2): {'$phi108.1'},
             State(pc_initial=118 nstack_initial=2): {'$phi118.1'},
             State(pc_initial=122 nstack_initial=3): {'$phi122.2'},
             State(pc_initial=568 nstack_initial=1): set(),
             State(pc_initial=570 nstack_initial=0): set()})
2022-05-06 22:35:57,027 defmap: {'$phi104.0': State(pc_initial=0 nstack_initial=0),
 '$phi108.1': State(pc_initial=104 nstack_initial=1),
 '$phi118.1': State(pc_initial=108 nstack_initial=2),
 '$phi122.2': State(pc_initial=118 nstack_initial=2)}
2022-05-06 22:35:57,027 phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi568.0',
                            State(pc_initial=568 nstack_initial=1))},
             '$phi108.0': {('$phi104.0',
                            State(pc_initial=104 nstack_initial=1))},
             '$phi108.1': {('$104for_iter.2',
                            State(pc_initial=104 nstack_initial=1))},
             '$phi118.0': {('$phi108.0',
                            State(pc_initial=108 nstack_initial=2)),
                           ('$phi122.0',
                            State(pc_initial=122 nstack_initial=3))},
             '$phi118.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2)),
                           ('$phi122.1',
                            State(pc_initial=122 nstack_initial=3))},
             '$phi122.0': {('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi122.1': {('$phi118.1',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi568.0': {('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))}})
2022-05-06 22:35:57,029 changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi108.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi108.1': {('$104for_iter.2',
                            State(pc_initial=104 nstack_initial=1))},
             '$phi118.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi118.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2)),
                           ('$phi118.1',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi122.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi122.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi568.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))}})
2022-05-06 22:35:57,031 changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.1': {('$104for_iter.2',
                            State(pc_initial=104 nstack_initial=1))},
             '$phi118.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2))},
             '$phi122.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi122.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi568.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))}})
2022-05-06 22:35:57,033 changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.1': {('$104for_iter.2',
                            State(pc_initial=104 nstack_initial=1))},
             '$phi118.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2))},
             '$phi122.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi122.1': {('$116get_iter.5',
                            State(pc_initial=108 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi568.0': {('$102get_iter.44',
                            State(pc_initial=0 nstack_initial=0))}})
2022-05-06 22:35:57,035 keep phismap: {'$phi104.0': {('$102get_iter.44', State(pc_initial=0 nstack_initial=0))},
 '$phi108.1': {('$104for_iter.2', State(pc_initial=104 nstack_initial=1))},
 '$phi118.1': {('$116get_iter.5', State(pc_initial=108 nstack_initial=2))},
 '$phi122.2': {('$118for_iter.3', State(pc_initial=118 nstack_initial=2))}}
2022-05-06 22:35:57,036 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi104.0': '$102get_iter.44'},
             State(pc_initial=104 nstack_initial=1): {'$phi108.1': '$104for_iter.2'},
             State(pc_initial=108 nstack_initial=2): {'$phi118.1': '$116get_iter.5'},
             State(pc_initial=118 nstack_initial=2): {'$phi122.2': '$118for_iter.3'}})
2022-05-06 22:35:57,038 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,038 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$surfaces2.0'}), (4, {'item': '$surfaces2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$surfaces12.4'}), (14, {'item': '$surfaces12.4', 'res': '$14load_attr.5'}), (16, {'res': '$const16.6'}), (18, {'index': '$const16.6', 'target': '$14load_attr.5', 'res': '$18binary_subscr.7'}), (20, {'value': '$18binary_subscr.7'}), (22, {'res': '$22load_global.8'}), (24, {'item': '$22load_global.8', 'res': '$24load_attr.9'}), (26, {'res': '$num_polygon26.10'}), (28, {'res': '$max_num_surfaces28.11'}), (30, {'res': '$const30.12'}), (32, {'items': ['$num_polygon26.10', '$max_num_surfaces28.11', '$const30.12'], 'res': '$32build_tuple.13'}), (34, {'res': '$surfaces34.14'}), (36, {'item': '$surfaces34.14', 'res': '$36load_attr.15'}), (38, {'res': '$const38.16'}), (40, {'func': '$24load_attr.9', 'args': ['$32build_tuple.13', '$36load_attr.15'], 'names': '$const38.16', 'res': '$40call_function_kw.17'}), (42, {'value': '$40call_function_kw.17'}), (44, {'res': '$44load_global.18'}), (46, {'item': '$44load_global.18', 'res': '$46load_attr.19'}), (48, {'res': '$num_polygon48.20'}), (50, {'res': '$max_num_surfaces50.21'}), (52, {'items': ['$num_polygon48.20', '$max_num_surfaces50.21'], 'res': '$52build_tuple.22'}), (54, {'res': '$surfaces54.23'}), (56, {'item': '$surfaces54.23', 'res': '$56load_attr.24'}), (58, {'res': '$const58.25'}), (60, {'func': '$46load_attr.19', 'args': ['$52build_tuple.22', '$56load_attr.24'], 'names': '$const58.25', 'res': '$60call_function_kw.26'}), (62, {'value': '$60call_function_kw.26'}), (64, {'res': '$surfaces64.27'}), (66, {'res': '$const66.28'}), (68, {'index': '$const66.28', 'target': '$surfaces64.27', 'res': '$68binary_subscr.29'}), (70, {'res': '$surfaces70.30'}), (72, {'res': '$const72.31'}), (74, {'index': '$const72.31', 'target': '$surfaces70.30', 'res': '$74binary_subscr.32'}), (76, {'lhs': '$68binary_subscr.29', 'rhs': '$74binary_subscr.32', 'res': '$76binary_subtract.33'}), (78, {'value': '$76binary_subtract.33'}), (80, {'res': '$surfaces80.34'}), (82, {'res': '$const82.35'}), (84, {'index': '$const82.35', 'target': '$surfaces80.34', 'res': '$84binary_subscr.36'}), (86, {'res': '$surfaces86.37'}), (88, {'res': '$const88.38'}), (90, {'index': '$const88.38', 'target': '$surfaces86.37', 'res': '$90binary_subscr.39'}), (92, {'lhs': '$84binary_subscr.36', 'rhs': '$90binary_subscr.39', 'res': '$92binary_subtract.40'}), (94, {'value': '$92binary_subtract.40'}), (96, {'res': '$96load_global.41'}), (98, {'res': '$num_polygon98.42'}), (100, {'func': '$96load_global.41', 'args': ['$num_polygon98.42'], 'res': '$100call_function.43'}), (102, {'value': '$100call_function.43', 'res': '$102get_iter.44'})), outgoing_phis={'$phi104.0': '$102get_iter.44'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ('$102get_iter.44',)})
2022-05-06 22:35:57,038 block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((104, {'iterator': '$phi104.0', 'pair': '$104for_iter.1', 'indval': '$104for_iter.2', 'pred': '$104for_iter.3'}),), outgoing_phis={'$phi108.1': '$104for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={570: (), 108: ('$phi104.0', '$104for_iter.2')})
2022-05-06 22:35:57,038 block_infos State(pc_initial=108 nstack_initial=2):
AdaptBlockInfo(insts=((108, {'value': '$phi108.1'}), (110, {'res': '$110load_global.2'}), (112, {'res': '$max_num_surfaces112.3'}), (114, {'func': '$110load_global.2', 'args': ['$max_num_surfaces112.3'], 'res': '$114call_function.4'}), (116, {'value': '$114call_function.4', 'res': '$116get_iter.5'})), outgoing_phis={'$phi118.1': '$116get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi108.0', '$116get_iter.5')})
2022-05-06 22:35:57,039 block_infos State(pc_initial=118 nstack_initial=2):
AdaptBlockInfo(insts=((118, {'iterator': '$phi118.1', 'pair': '$118for_iter.2', 'indval': '$118for_iter.3', 'pred': '$118for_iter.4'}),), outgoing_phis={'$phi122.2': '$118for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={568: ('$phi118.0',), 122: ('$phi118.0', '$phi118.1', '$118for_iter.3')})
2022-05-06 22:35:57,039 block_infos State(pc_initial=122 nstack_initial=3):
AdaptBlockInfo(insts=((122, {'value': '$phi122.2'}), (124, {'res': '$surfaces124.3'}), (126, {'res': '$i126.4'}), (128, {'res': '$j128.5'}), (130, {'res': '$const130.6'}), (132, {'res': '$const132.7'}), (134, {'items': ['$i126.4', '$j128.5', '$const130.6', '$const132.7'], 'res': '$134build_tuple.8'}), (136, {'index': '$134build_tuple.8', 'target': '$surfaces124.3', 'res': '$136binary_subscr.9'}), (138, {'res': '$surfaces138.10'}), (140, {'res': '$i140.11'}), (142, {'res': '$j142.12'}), (144, {'res': '$const144.13'}), (146, {'res': '$const146.14'}), (148, {'items': ['$i140.11', '$j142.12', '$const144.13', '$const146.14'], 'res': '$148build_tuple.15'}), (150, {'index': '$148build_tuple.15', 'target': '$surfaces138.10', 'res': '$150binary_subscr.16'}), (152, {'lhs': '$136binary_subscr.9', 'rhs': '$150binary_subscr.16', 'res': '$152binary_subtract.17'}), (154, {'res': '$sv0154.18'}), (156, {'res': '$const156.19'}), (158, {'target': '$sv0154.18', 'index': '$const156.19', 'value': '$152binary_subtract.17'}), (160, {'res': '$surfaces160.20'}), (162, {'res': '$i162.21'}), (164, {'res': '$j164.22'}), (166, {'res': '$const166.23'}), (168, {'res': '$const168.24'}), (170, {'items': ['$i162.21', '$j164.22', '$const166.23', '$const168.24'], 'res': '$170build_tuple.25'}), (172, {'index': '$170build_tuple.25', 'target': '$surfaces160.20', 'res': '$172binary_subscr.26'}), (174, {'res': '$surfaces174.27'}), (176, {'res': '$i176.28'}), (178, {'res': '$j178.29'}), (180, {'res': '$const180.30'}), (182, {'res': '$const182.31'}), (184, {'items': ['$i176.28', '$j178.29', '$const180.30', '$const182.31'], 'res': '$184build_tuple.32'}), (186, {'index': '$184build_tuple.32', 'target': '$surfaces174.27', 'res': '$186binary_subscr.33'}), (188, {'lhs': '$172binary_subscr.26', 'rhs': '$186binary_subscr.33', 'res': '$188binary_subtract.34'}), (190, {'res': '$sv0190.35'}), (192, {'res': '$const192.36'}), (194, {'target': '$sv0190.35', 'index': '$const192.36', 'value': '$188binary_subtract.34'}), (196, {'res': '$surfaces196.37'}), (198, {'res': '$i198.38'}), (200, {'res': '$j200.39'}), (202, {'res': '$const202.40'}), (204, {'res': '$const204.41'}), (206, {'items': ['$i198.38', '$j200.39', '$const202.40', '$const204.41'], 'res': '$206build_tuple.42'}), (208, {'index': '$206build_tuple.42', 'target': '$surfaces196.37', 'res': '$208binary_subscr.43'}), (210, {'res': '$surfaces210.44'}), (212, {'res': '$i212.45'}), (214, {'res': '$j214.46'}), (216, {'res': '$const216.47'}), (218, {'res': '$const218.48'}), (220, {'items': ['$i212.45', '$j214.46', '$const216.47', '$const218.48'], 'res': '$220build_tuple.49'}), (222, {'index': '$220build_tuple.49', 'target': '$surfaces210.44', 'res': '$222binary_subscr.50'}), (224, {'lhs': '$208binary_subscr.43', 'rhs': '$222binary_subscr.50', 'res': '$224binary_subtract.51'}), (226, {'res': '$sv0226.52'}), (228, {'res': '$const228.53'}), (230, {'target': '$sv0226.52', 'index': '$const228.53', 'value': '$224binary_subtract.51'}), (232, {'res': '$surfaces232.54'}), (234, {'res': '$i234.55'}), (236, {'res': '$j236.56'}), (238, {'res': '$const238.57'}), (240, {'res': '$const240.58'}), (242, {'items': ['$i234.55', '$j236.56', '$const238.57', '$const240.58'], 'res': '$242build_tuple.59'}), (244, {'index': '$242build_tuple.59', 'target': '$surfaces232.54', 'res': '$244binary_subscr.60'}), (246, {'res': '$surfaces246.61'}), (248, {'res': '$i248.62'}), (250, {'res': '$j250.63'}), (252, {'res': '$const252.64'}), (254, {'res': '$const254.65'}), (256, {'items': ['$i248.62', '$j250.63', '$const252.64', '$const254.65'], 'res': '$256build_tuple.66'}), (258, {'index': '$256build_tuple.66', 'target': '$surfaces246.61', 'res': '$258binary_subscr.67'}), (260, {'lhs': '$244binary_subscr.60', 'rhs': '$258binary_subscr.67', 'res': '$260binary_subtract.68'}), (262, {'res': '$sv1262.69'}), (264, {'res': '$const264.70'}), (266, {'target': '$sv1262.69', 'index': '$const264.70', 'value': '$260binary_subtract.68'}), (268, {'res': '$surfaces268.71'}), (270, {'res': '$i270.72'}), (272, {'res': '$j272.73'}), (274, {'res': '$const274.74'}), (276, {'res': '$const276.75'}), (278, {'items': ['$i270.72', '$j272.73', '$const274.74', '$const276.75'], 'res': '$278build_tuple.76'}), (280, {'index': '$278build_tuple.76', 'target': '$surfaces268.71', 'res': '$280binary_subscr.77'}), (282, {'res': '$surfaces282.78'}), (284, {'res': '$i284.79'}), (286, {'res': '$j286.80'}), (288, {'res': '$const288.81'}), (290, {'res': '$const290.82'}), (292, {'items': ['$i284.79', '$j286.80', '$const288.81', '$const290.82'], 'res': '$292build_tuple.83'}), (294, {'index': '$292build_tuple.83', 'target': '$surfaces282.78', 'res': '$294binary_subscr.84'}), (296, {'lhs': '$280binary_subscr.77', 'rhs': '$294binary_subscr.84', 'res': '$296binary_subtract.85'}), (298, {'res': '$sv1298.86'}), (300, {'res': '$const300.87'}), (302, {'target': '$sv1298.86', 'index': '$const300.87', 'value': '$296binary_subtract.85'}), (304, {'res': '$surfaces304.88'}), (306, {'res': '$i306.89'}), (308, {'res': '$j308.90'}), (310, {'res': '$const310.91'}), (312, {'res': '$const312.92'}), (314, {'items': ['$i306.89', '$j308.90', '$const310.91', '$const312.92'], 'res': '$314build_tuple.93'}), (316, {'index': '$314build_tuple.93', 'target': '$surfaces304.88', 'res': '$316binary_subscr.94'}), (318, {'res': '$surfaces318.95'}), (320, {'res': '$i320.96'}), (322, {'res': '$j322.97'}), (324, {'res': '$const324.98'}), (326, {'res': '$const326.99'}), (328, {'items': ['$i320.96', '$j322.97', '$const324.98', '$const326.99'], 'res': '$328build_tuple.100'}), (330, {'index': '$328build_tuple.100', 'target': '$surfaces318.95', 'res': '$330binary_subscr.101'}), (332, {'lhs': '$316binary_subscr.94', 'rhs': '$330binary_subscr.101', 'res': '$332binary_subtract.102'}), (334, {'res': '$sv1334.103'}), (336, {'res': '$const336.104'}), (338, {'target': '$sv1334.103', 'index': '$const336.104', 'value': '$332binary_subtract.102'}), (340, {'res': '$sv0340.105'}), (342, {'res': '$const342.106'}), (344, {'index': '$const342.106', 'target': '$sv0340.105', 'res': '$344binary_subscr.107'}), (346, {'res': '$sv1346.108'}), (348, {'res': '$const348.109'}), (350, {'index': '$const348.109', 'target': '$sv1346.108', 'res': '$350binary_subscr.110'}), (352, {'lhs': '$344binary_subscr.107', 'rhs': '$350binary_subscr.110', 'res': '$352binary_multiply.111'}), (354, {'res': '$sv0354.112'}), (356, {'res': '$const356.113'}), (358, {'index': '$const356.113', 'target': '$sv0354.112', 'res': '$358binary_subscr.114'}), (360, {'res': '$sv1360.115'}), (362, {'res': '$const362.116'}), (364, {'index': '$const362.116', 'target': '$sv1360.115', 'res': '$364binary_subscr.117'}), (366, {'lhs': '$358binary_subscr.114', 'rhs': '$364binary_subscr.117', 'res': '$366binary_multiply.118'}), (368, {'lhs': '$352binary_multiply.111', 'rhs': '$366binary_multiply.118', 'res': '$368binary_subtract.119'}), (370, {'res': '$normal_vec370.120'}), (372, {'res': '$i372.121'}), (374, {'res': '$j374.122'}), (376, {'res': '$const376.123'}), (378, {'items': ['$i372.121', '$j374.122', '$const376.123'], 'res': '$378build_tuple.124'}), (380, {'target': '$normal_vec370.120', 'index': '$378build_tuple.124', 'value': '$368binary_subtract.119'}), (382, {'res': '$sv0382.125'}), (384, {'res': '$const384.126'}), (386, {'index': '$const384.126', 'target': '$sv0382.125', 'res': '$386binary_subscr.127'}), (388, {'res': '$sv1388.128'}), (390, {'res': '$const390.129'}), (392, {'index': '$const390.129', 'target': '$sv1388.128', 'res': '$392binary_subscr.130'}), (394, {'lhs': '$386binary_subscr.127', 'rhs': '$392binary_subscr.130', 'res': '$394binary_multiply.131'}), (396, {'res': '$sv0396.132'}), (398, {'res': '$const398.133'}), (400, {'index': '$const398.133', 'target': '$sv0396.132', 'res': '$400binary_subscr.134'}), (402, {'res': '$sv1402.135'}), (404, {'res': '$const404.136'}), (406, {'index': '$const404.136', 'target': '$sv1402.135', 'res': '$406binary_subscr.137'}), (408, {'lhs': '$400binary_subscr.134', 'rhs': '$406binary_subscr.137', 'res': '$408binary_multiply.138'}), (410, {'lhs': '$394binary_multiply.131', 'rhs': '$408binary_multiply.138', 'res': '$410binary_subtract.139'}), (412, {'res': '$normal_vec412.140'}), (414, {'res': '$i414.141'}), (416, {'res': '$j416.142'}), (418, {'res': '$const418.143'}), (420, {'items': ['$i414.141', '$j416.142', '$const418.143'], 'res': '$420build_tuple.144'}), (422, {'target': '$normal_vec412.140', 'index': '$420build_tuple.144', 'value': '$410binary_subtract.139'}), (424, {'res': '$sv0424.145'}), (426, {'res': '$const426.146'}), (428, {'index': '$const426.146', 'target': '$sv0424.145', 'res': '$428binary_subscr.147'}), (430, {'res': '$sv1430.148'}), (432, {'res': '$const432.149'}), (434, {'index': '$const432.149', 'target': '$sv1430.148', 'res': '$434binary_subscr.150'}), (436, {'lhs': '$428binary_subscr.147', 'rhs': '$434binary_subscr.150', 'res': '$436binary_multiply.151'}), (438, {'res': '$sv0438.152'}), (440, {'res': '$const440.153'}), (442, {'index': '$const440.153', 'target': '$sv0438.152', 'res': '$442binary_subscr.154'}), (444, {'res': '$sv1444.155'}), (446, {'res': '$const446.156'}), (448, {'index': '$const446.156', 'target': '$sv1444.155', 'res': '$448binary_subscr.157'}), (450, {'lhs': '$442binary_subscr.154', 'rhs': '$448binary_subscr.157', 'res': '$450binary_multiply.158'}), (452, {'lhs': '$436binary_multiply.151', 'rhs': '$450binary_multiply.158', 'res': '$452binary_subtract.159'}), (454, {'res': '$normal_vec454.160'}), (456, {'res': '$i456.161'}), (458, {'res': '$j458.162'}), (460, {'res': '$const460.163'}), (462, {'items': ['$i456.161', '$j458.162', '$const460.163'], 'res': '$462build_tuple.164'}), (464, {'target': '$normal_vec454.160', 'index': '$462build_tuple.164', 'value': '$452binary_subtract.159'}), (466, {'res': '$surfaces466.165'}), (468, {'res': '$i468.166'}), (470, {'res': '$j470.167'}), (472, {'res': '$const472.168'}), (474, {'res': '$const474.169'}), (476, {'items': ['$i468.166', '$j470.167', '$const472.168', '$const474.169'], 'res': '$476build_tuple.170'}), (478, {'index': '$476build_tuple.170', 'target': '$surfaces466.165', 'res': '$478binary_subscr.171'}), (480, {'value': '$478binary_subscr.171', 'res': '$480unary_negative.172'}), (482, {'res': '$normal_vec482.173'}), (484, {'res': '$i484.174'}), (486, {'res': '$j486.175'}), (488, {'res': '$const488.176'}), (490, {'items': ['$i484.174', '$j486.175', '$const488.176'], 'res': '$490build_tuple.177'}), (492, {'index': '$490build_tuple.177', 'target': '$normal_vec482.173', 'res': '$492binary_subscr.178'}), (494, {'lhs': '$480unary_negative.172', 'rhs': '$492binary_subscr.178', 'res': '$494binary_multiply.179'}), (496, {'res': '$surfaces496.180'}), (498, {'res': '$i498.181'}), (500, {'res': '$j500.182'}), (502, {'res': '$const502.183'}), (504, {'res': '$const504.184'}), (506, {'items': ['$i498.181', '$j500.182', '$const502.183', '$const504.184'], 'res': '$506build_tuple.185'}), (508, {'index': '$506build_tuple.185', 'target': '$surfaces496.180', 'res': '$508binary_subscr.186'}), (510, {'res': '$normal_vec510.187'}), (512, {'res': '$i512.188'}), (514, {'res': '$j514.189'}), (516, {'res': '$const516.190'}), (518, {'items': ['$i512.188', '$j514.189', '$const516.190'], 'res': '$518build_tuple.191'}), (520, {'index': '$518build_tuple.191', 'target': '$normal_vec510.187', 'res': '$520binary_subscr.192'}), (522, {'lhs': '$508binary_subscr.186', 'rhs': '$520binary_subscr.192', 'res': '$522binary_multiply.193'}), (524, {'lhs': '$494binary_multiply.179', 'rhs': '$522binary_multiply.193', 'res': '$524binary_subtract.194'}), (526, {'res': '$surfaces526.195'}), (528, {'res': '$i528.196'}), (530, {'res': '$j530.197'}), (532, {'res': '$const532.198'}), (534, {'res': '$const534.199'}), (536, {'items': ['$i528.196', '$j530.197', '$const532.198', '$const534.199'], 'res': '$536build_tuple.200'}), (538, {'index': '$536build_tuple.200', 'target': '$surfaces526.195', 'res': '$538binary_subscr.201'}), (540, {'res': '$normal_vec540.202'}), (542, {'res': '$i542.203'}), (544, {'res': '$j544.204'}), (546, {'res': '$const546.205'}), (548, {'items': ['$i542.203', '$j544.204', '$const546.205'], 'res': '$548build_tuple.206'}), (550, {'index': '$548build_tuple.206', 'target': '$normal_vec540.202', 'res': '$550binary_subscr.207'}), (552, {'lhs': '$538binary_subscr.201', 'rhs': '$550binary_subscr.207', 'res': '$552binary_multiply.208'}), (554, {'lhs': '$524binary_subtract.194', 'rhs': '$552binary_multiply.208', 'res': '$554binary_subtract.209'}), (556, {'res': '$d556.210'}), (558, {'res': '$i558.211'}), (560, {'res': '$j560.212'}), (562, {'items': ['$i558.211', '$j560.212'], 'res': '$562build_tuple.213'}), (564, {'target': '$d556.210', 'index': '$562build_tuple.213', 'value': '$554binary_subtract.209'}), (566, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi122.0', '$phi122.1')})
2022-05-06 22:35:57,040 block_infos State(pc_initial=568 nstack_initial=1):
AdaptBlockInfo(insts=((568, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ('$phi568.0',)})
2022-05-06 22:35:57,040 block_infos State(pc_initial=570 nstack_initial=0):
AdaptBlockInfo(insts=((570, {'res': '$normal_vec570.0'}), (572, {'res': '$d572.1'}), (574, {'items': ['$normal_vec570.0', '$d572.1'], 'res': '$574build_tuple.2'}), (576, {'retval': '$574build_tuple.2', 'castval': '$576return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,067 label 0:
    surfaces = arg(0, name=surfaces)         ['surfaces']
    $4load_attr.1 = getattr(value=surfaces, attr=shape) ['$4load_attr.1', 'surfaces']
    $const6.2 = const(int, 0)                ['$const6.2']
    num_polygon = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'num_polygon']
    $14load_attr.5 = getattr(value=surfaces, attr=shape) ['$14load_attr.5', 'surfaces']
    $const16.6 = const(int, 1)               ['$const16.6']
    max_num_surfaces = getitem(value=$14load_attr.5, index=$const16.6, fn=<built-in function getitem>) ['$14load_attr.5', '$const16.6', 'max_num_surfaces']
    $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$22load_global.8']
    $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros) ['$22load_global.8', '$24load_attr.9']
    $const30.12 = const(int, 3)              ['$const30.12']
    $32build_tuple.13 = build_tuple(items=[Var(num_polygon, geometry.py:354), Var(max_num_surfaces, geometry.py:355), Var($const30.12, geometry.py:356)]) ['$32build_tuple.13', '$const30.12', 'max_num_surfaces', 'num_polygon']
    $36load_attr.15 = getattr(value=surfaces, attr=dtype) ['$36load_attr.15', 'surfaces']
    normal_vec = call $24load_attr.9($32build_tuple.13, func=$24load_attr.9, args=[Var($32build_tuple.13, geometry.py:356)], kws=[('dtype', Var($36load_attr.15, geometry.py:356))], vararg=None, target=None) ['$24load_attr.9', '$32build_tuple.13', '$36load_attr.15', 'normal_vec']
    $44load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$44load_global.18']
    $46load_attr.19 = getattr(value=$44load_global.18, attr=zeros) ['$44load_global.18', '$46load_attr.19']
    $52build_tuple.22 = build_tuple(items=[Var(num_polygon, geometry.py:354), Var(max_num_surfaces, geometry.py:355)]) ['$52build_tuple.22', 'max_num_surfaces', 'num_polygon']
    $56load_attr.24 = getattr(value=surfaces, attr=dtype) ['$56load_attr.24', 'surfaces']
    d = call $46load_attr.19($52build_tuple.22, func=$46load_attr.19, args=[Var($52build_tuple.22, geometry.py:357)], kws=[('dtype', Var($56load_attr.24, geometry.py:357))], vararg=None, target=None) ['$46load_attr.19', '$52build_tuple.22', '$56load_attr.24', 'd']
    $const_0 = const(int, 0)                 ['$const_0']
    $const_0.1 = const(int, 0)               ['$const_0.1']
    $const_0.2 = const(int, 0)               ['$const_0.2']
    $const66.28 = build_tuple(items=[Var($const_0, geometry.py:358), Var($const_0.1, geometry.py:358), Var($const_0.2, geometry.py:358)]) ['$const66.28', '$const_0', '$const_0.1', '$const_0.2']
    $68binary_subscr.29 = getitem(value=surfaces, index=$const66.28, fn=<built-in function getitem>) ['$68binary_subscr.29', '$const66.28', 'surfaces']
    $const_0.3 = const(int, 0)               ['$const_0.3']
    $const_0.4 = const(int, 0)               ['$const_0.4']
    $const_1 = const(int, 1)                 ['$const_1']
    $const72.31 = build_tuple(items=[Var($const_0.3, geometry.py:358), Var($const_0.4, geometry.py:358), Var($const_1, geometry.py:358)]) ['$const72.31', '$const_0.3', '$const_0.4', '$const_1']
    $74binary_subscr.32 = getitem(value=surfaces, index=$const72.31, fn=<built-in function getitem>) ['$74binary_subscr.32', '$const72.31', 'surfaces']
    sv0 = $68binary_subscr.29 - $74binary_subscr.32 ['$68binary_subscr.29', '$74binary_subscr.32', 'sv0']
    $const_0.5 = const(int, 0)               ['$const_0.5']
    $const_0.6 = const(int, 0)               ['$const_0.6']
    $const_0.7 = const(int, 0)               ['$const_0.7']
    $const82.35 = build_tuple(items=[Var($const_0.5, geometry.py:359), Var($const_0.6, geometry.py:359), Var($const_0.7, geometry.py:359)]) ['$const82.35', '$const_0.5', '$const_0.6', '$const_0.7']
    $84binary_subscr.36 = getitem(value=surfaces, index=$const82.35, fn=<built-in function getitem>) ['$84binary_subscr.36', '$const82.35', 'surfaces']
    $const_0.8 = const(int, 0)               ['$const_0.8']
    $const_0.9 = const(int, 0)               ['$const_0.9']
    $const_1.1 = const(int, 1)               ['$const_1.1']
    $const88.38 = build_tuple(items=[Var($const_0.8, geometry.py:359), Var($const_0.9, geometry.py:359), Var($const_1.1, geometry.py:359)]) ['$const88.38', '$const_0.8', '$const_0.9', '$const_1.1']
    $90binary_subscr.39 = getitem(value=surfaces, index=$const88.38, fn=<built-in function getitem>) ['$90binary_subscr.39', '$const88.38', 'surfaces']
    sv1 = $84binary_subscr.36 - $90binary_subscr.39 ['$84binary_subscr.36', '$90binary_subscr.39', 'sv1']
    $96load_global.41 = global(range: <class 'range'>) ['$96load_global.41']
    $100call_function.43 = call $96load_global.41(num_polygon, func=$96load_global.41, args=[Var(num_polygon, geometry.py:354)], kws=(), vararg=None, target=None) ['$100call_function.43', '$96load_global.41', 'num_polygon']
    $102get_iter.44 = getiter(value=$100call_function.43) ['$100call_function.43', '$102get_iter.44']
    $phi104.0 = $102get_iter.44              ['$102get_iter.44', '$phi104.0']
    jump 104                                 []
label 104:
    $104for_iter.1 = iternext(value=$phi104.0) ['$104for_iter.1', '$phi104.0']
    $104for_iter.2 = pair_first(value=$104for_iter.1) ['$104for_iter.1', '$104for_iter.2']
    $104for_iter.3 = pair_second(value=$104for_iter.1) ['$104for_iter.1', '$104for_iter.3']
    $phi108.1 = $104for_iter.2               ['$104for_iter.2', '$phi108.1']
    branch $104for_iter.3, 108, 570          ['$104for_iter.3']
label 108:
    i = $phi108.1                            ['$phi108.1', 'i']
    $110load_global.2 = global(range: <class 'range'>) ['$110load_global.2']
    $114call_function.4 = call $110load_global.2(max_num_surfaces, func=$110load_global.2, args=[Var(max_num_surfaces, geometry.py:355)], kws=(), vararg=None, target=None) ['$110load_global.2', '$114call_function.4', 'max_num_surfaces']
    $116get_iter.5 = getiter(value=$114call_function.4) ['$114call_function.4', '$116get_iter.5']
    $phi118.1 = $116get_iter.5               ['$116get_iter.5', '$phi118.1']
    jump 118                                 []
label 118:
    $118for_iter.2 = iternext(value=$phi118.1) ['$118for_iter.2', '$phi118.1']
    $118for_iter.3 = pair_first(value=$118for_iter.2) ['$118for_iter.2', '$118for_iter.3']
    $118for_iter.4 = pair_second(value=$118for_iter.2) ['$118for_iter.2', '$118for_iter.4']
    $phi122.2 = $118for_iter.3               ['$118for_iter.3', '$phi122.2']
    branch $118for_iter.4, 122, 568          ['$118for_iter.4']
label 122:
    j = $phi122.2                            ['$phi122.2', 'j']
    $const130.6 = const(int, 0)              ['$const130.6']
    $const132.7 = const(int, 0)              ['$const132.7']
    $134build_tuple.8 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const130.6, geometry.py:362), Var($const132.7, geometry.py:362)]) ['$134build_tuple.8', '$const130.6', '$const132.7', 'i', 'j']
    $136binary_subscr.9 = getitem(value=surfaces, index=$134build_tuple.8, fn=<built-in function getitem>) ['$134build_tuple.8', '$136binary_subscr.9', 'surfaces']
    $const144.13 = const(int, 1)             ['$const144.13']
    $const146.14 = const(int, 0)             ['$const146.14']
    $148build_tuple.15 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const144.13, geometry.py:362), Var($const146.14, geometry.py:362)]) ['$148build_tuple.15', '$const144.13', '$const146.14', 'i', 'j']
    $150binary_subscr.16 = getitem(value=surfaces, index=$148build_tuple.15, fn=<built-in function getitem>) ['$148build_tuple.15', '$150binary_subscr.16', 'surfaces']
    $152binary_subtract.17 = $136binary_subscr.9 - $150binary_subscr.16 ['$136binary_subscr.9', '$150binary_subscr.16', '$152binary_subtract.17']
    $const156.19 = const(int, 0)             ['$const156.19']
    sv0[$const156.19] = $152binary_subtract.17 ['$152binary_subtract.17', '$const156.19', 'sv0']
    $const166.23 = const(int, 0)             ['$const166.23']
    $const168.24 = const(int, 1)             ['$const168.24']
    $170build_tuple.25 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const166.23, geometry.py:363), Var($const168.24, geometry.py:363)]) ['$170build_tuple.25', '$const166.23', '$const168.24', 'i', 'j']
    $172binary_subscr.26 = getitem(value=surfaces, index=$170build_tuple.25, fn=<built-in function getitem>) ['$170build_tuple.25', '$172binary_subscr.26', 'surfaces']
    $const180.30 = const(int, 1)             ['$const180.30']
    $const182.31 = const(int, 1)             ['$const182.31']
    $184build_tuple.32 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const180.30, geometry.py:363), Var($const182.31, geometry.py:363)]) ['$184build_tuple.32', '$const180.30', '$const182.31', 'i', 'j']
    $186binary_subscr.33 = getitem(value=surfaces, index=$184build_tuple.32, fn=<built-in function getitem>) ['$184build_tuple.32', '$186binary_subscr.33', 'surfaces']
    $188binary_subtract.34 = $172binary_subscr.26 - $186binary_subscr.33 ['$172binary_subscr.26', '$186binary_subscr.33', '$188binary_subtract.34']
    $const192.36 = const(int, 1)             ['$const192.36']
    sv0[$const192.36] = $188binary_subtract.34 ['$188binary_subtract.34', '$const192.36', 'sv0']
    $const202.40 = const(int, 0)             ['$const202.40']
    $const204.41 = const(int, 2)             ['$const204.41']
    $206build_tuple.42 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const202.40, geometry.py:364), Var($const204.41, geometry.py:364)]) ['$206build_tuple.42', '$const202.40', '$const204.41', 'i', 'j']
    $208binary_subscr.43 = getitem(value=surfaces, index=$206build_tuple.42, fn=<built-in function getitem>) ['$206build_tuple.42', '$208binary_subscr.43', 'surfaces']
    $const216.47 = const(int, 1)             ['$const216.47']
    $const218.48 = const(int, 2)             ['$const218.48']
    $220build_tuple.49 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const216.47, geometry.py:364), Var($const218.48, geometry.py:364)]) ['$220build_tuple.49', '$const216.47', '$const218.48', 'i', 'j']
    $222binary_subscr.50 = getitem(value=surfaces, index=$220build_tuple.49, fn=<built-in function getitem>) ['$220build_tuple.49', '$222binary_subscr.50', 'surfaces']
    $224binary_subtract.51 = $208binary_subscr.43 - $222binary_subscr.50 ['$208binary_subscr.43', '$222binary_subscr.50', '$224binary_subtract.51']
    $const228.53 = const(int, 2)             ['$const228.53']
    sv0[$const228.53] = $224binary_subtract.51 ['$224binary_subtract.51', '$const228.53', 'sv0']
    $const238.57 = const(int, 1)             ['$const238.57']
    $const240.58 = const(int, 0)             ['$const240.58']
    $242build_tuple.59 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const238.57, geometry.py:365), Var($const240.58, geometry.py:365)]) ['$242build_tuple.59', '$const238.57', '$const240.58', 'i', 'j']
    $244binary_subscr.60 = getitem(value=surfaces, index=$242build_tuple.59, fn=<built-in function getitem>) ['$242build_tuple.59', '$244binary_subscr.60', 'surfaces']
    $const252.64 = const(int, 2)             ['$const252.64']
    $const254.65 = const(int, 0)             ['$const254.65']
    $256build_tuple.66 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const252.64, geometry.py:365), Var($const254.65, geometry.py:365)]) ['$256build_tuple.66', '$const252.64', '$const254.65', 'i', 'j']
    $258binary_subscr.67 = getitem(value=surfaces, index=$256build_tuple.66, fn=<built-in function getitem>) ['$256build_tuple.66', '$258binary_subscr.67', 'surfaces']
    $260binary_subtract.68 = $244binary_subscr.60 - $258binary_subscr.67 ['$244binary_subscr.60', '$258binary_subscr.67', '$260binary_subtract.68']
    $const264.70 = const(int, 0)             ['$const264.70']
    sv1[$const264.70] = $260binary_subtract.68 ['$260binary_subtract.68', '$const264.70', 'sv1']
    $const274.74 = const(int, 1)             ['$const274.74']
    $const276.75 = const(int, 1)             ['$const276.75']
    $278build_tuple.76 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const274.74, geometry.py:366), Var($const276.75, geometry.py:366)]) ['$278build_tuple.76', '$const274.74', '$const276.75', 'i', 'j']
    $280binary_subscr.77 = getitem(value=surfaces, index=$278build_tuple.76, fn=<built-in function getitem>) ['$278build_tuple.76', '$280binary_subscr.77', 'surfaces']
    $const288.81 = const(int, 2)             ['$const288.81']
    $const290.82 = const(int, 1)             ['$const290.82']
    $292build_tuple.83 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const288.81, geometry.py:366), Var($const290.82, geometry.py:366)]) ['$292build_tuple.83', '$const288.81', '$const290.82', 'i', 'j']
    $294binary_subscr.84 = getitem(value=surfaces, index=$292build_tuple.83, fn=<built-in function getitem>) ['$292build_tuple.83', '$294binary_subscr.84', 'surfaces']
    $296binary_subtract.85 = $280binary_subscr.77 - $294binary_subscr.84 ['$280binary_subscr.77', '$294binary_subscr.84', '$296binary_subtract.85']
    $const300.87 = const(int, 1)             ['$const300.87']
    sv1[$const300.87] = $296binary_subtract.85 ['$296binary_subtract.85', '$const300.87', 'sv1']
    $const310.91 = const(int, 1)             ['$const310.91']
    $const312.92 = const(int, 2)             ['$const312.92']
    $314build_tuple.93 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const310.91, geometry.py:367), Var($const312.92, geometry.py:367)]) ['$314build_tuple.93', '$const310.91', '$const312.92', 'i', 'j']
    $316binary_subscr.94 = getitem(value=surfaces, index=$314build_tuple.93, fn=<built-in function getitem>) ['$314build_tuple.93', '$316binary_subscr.94', 'surfaces']
    $const324.98 = const(int, 2)             ['$const324.98']
    $const326.99 = const(int, 2)             ['$const326.99']
    $328build_tuple.100 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const324.98, geometry.py:367), Var($const326.99, geometry.py:367)]) ['$328build_tuple.100', '$const324.98', '$const326.99', 'i', 'j']
    $330binary_subscr.101 = getitem(value=surfaces, index=$328build_tuple.100, fn=<built-in function getitem>) ['$328build_tuple.100', '$330binary_subscr.101', 'surfaces']
    $332binary_subtract.102 = $316binary_subscr.94 - $330binary_subscr.101 ['$316binary_subscr.94', '$330binary_subscr.101', '$332binary_subtract.102']
    $const336.104 = const(int, 2)            ['$const336.104']
    sv1[$const336.104] = $332binary_subtract.102 ['$332binary_subtract.102', '$const336.104', 'sv1']
    $const342.106 = const(int, 1)            ['$const342.106']
    $344binary_subscr.107 = getitem(value=sv0, index=$const342.106, fn=<built-in function getitem>) ['$344binary_subscr.107', '$const342.106', 'sv0']
    $const348.109 = const(int, 2)            ['$const348.109']
    $350binary_subscr.110 = getitem(value=sv1, index=$const348.109, fn=<built-in function getitem>) ['$350binary_subscr.110', '$const348.109', 'sv1']
    $352binary_multiply.111 = $344binary_subscr.107 * $350binary_subscr.110 ['$344binary_subscr.107', '$350binary_subscr.110', '$352binary_multiply.111']
    $const356.113 = const(int, 2)            ['$const356.113']
    $358binary_subscr.114 = getitem(value=sv0, index=$const356.113, fn=<built-in function getitem>) ['$358binary_subscr.114', '$const356.113', 'sv0']
    $const362.116 = const(int, 1)            ['$const362.116']
    $364binary_subscr.117 = getitem(value=sv1, index=$const362.116, fn=<built-in function getitem>) ['$364binary_subscr.117', '$const362.116', 'sv1']
    $366binary_multiply.118 = $358binary_subscr.114 * $364binary_subscr.117 ['$358binary_subscr.114', '$364binary_subscr.117', '$366binary_multiply.118']
    $368binary_subtract.119 = $352binary_multiply.111 - $366binary_multiply.118 ['$352binary_multiply.111', '$366binary_multiply.118', '$368binary_subtract.119']
    $const376.123 = const(int, 0)            ['$const376.123']
    $378build_tuple.124 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const376.123, geometry.py:368)]) ['$378build_tuple.124', '$const376.123', 'i', 'j']
    normal_vec[$378build_tuple.124] = $368binary_subtract.119 ['$368binary_subtract.119', '$378build_tuple.124', 'normal_vec']
    $const384.126 = const(int, 2)            ['$const384.126']
    $386binary_subscr.127 = getitem(value=sv0, index=$const384.126, fn=<built-in function getitem>) ['$386binary_subscr.127', '$const384.126', 'sv0']
    $const390.129 = const(int, 0)            ['$const390.129']
    $392binary_subscr.130 = getitem(value=sv1, index=$const390.129, fn=<built-in function getitem>) ['$392binary_subscr.130', '$const390.129', 'sv1']
    $394binary_multiply.131 = $386binary_subscr.127 * $392binary_subscr.130 ['$386binary_subscr.127', '$392binary_subscr.130', '$394binary_multiply.131']
    $const398.133 = const(int, 0)            ['$const398.133']
    $400binary_subscr.134 = getitem(value=sv0, index=$const398.133, fn=<built-in function getitem>) ['$400binary_subscr.134', '$const398.133', 'sv0']
    $const404.136 = const(int, 2)            ['$const404.136']
    $406binary_subscr.137 = getitem(value=sv1, index=$const404.136, fn=<built-in function getitem>) ['$406binary_subscr.137', '$const404.136', 'sv1']
    $408binary_multiply.138 = $400binary_subscr.134 * $406binary_subscr.137 ['$400binary_subscr.134', '$406binary_subscr.137', '$408binary_multiply.138']
    $410binary_subtract.139 = $394binary_multiply.131 - $408binary_multiply.138 ['$394binary_multiply.131', '$408binary_multiply.138', '$410binary_subtract.139']
    $const418.143 = const(int, 1)            ['$const418.143']
    $420build_tuple.144 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const418.143, geometry.py:369)]) ['$420build_tuple.144', '$const418.143', 'i', 'j']
    normal_vec[$420build_tuple.144] = $410binary_subtract.139 ['$410binary_subtract.139', '$420build_tuple.144', 'normal_vec']
    $const426.146 = const(int, 0)            ['$const426.146']
    $428binary_subscr.147 = getitem(value=sv0, index=$const426.146, fn=<built-in function getitem>) ['$428binary_subscr.147', '$const426.146', 'sv0']
    $const432.149 = const(int, 1)            ['$const432.149']
    $434binary_subscr.150 = getitem(value=sv1, index=$const432.149, fn=<built-in function getitem>) ['$434binary_subscr.150', '$const432.149', 'sv1']
    $436binary_multiply.151 = $428binary_subscr.147 * $434binary_subscr.150 ['$428binary_subscr.147', '$434binary_subscr.150', '$436binary_multiply.151']
    $const440.153 = const(int, 1)            ['$const440.153']
    $442binary_subscr.154 = getitem(value=sv0, index=$const440.153, fn=<built-in function getitem>) ['$442binary_subscr.154', '$const440.153', 'sv0']
    $const446.156 = const(int, 0)            ['$const446.156']
    $448binary_subscr.157 = getitem(value=sv1, index=$const446.156, fn=<built-in function getitem>) ['$448binary_subscr.157', '$const446.156', 'sv1']
    $450binary_multiply.158 = $442binary_subscr.154 * $448binary_subscr.157 ['$442binary_subscr.154', '$448binary_subscr.157', '$450binary_multiply.158']
    $452binary_subtract.159 = $436binary_multiply.151 - $450binary_multiply.158 ['$436binary_multiply.151', '$450binary_multiply.158', '$452binary_subtract.159']
    $const460.163 = const(int, 2)            ['$const460.163']
    $462build_tuple.164 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const460.163, geometry.py:370)]) ['$462build_tuple.164', '$const460.163', 'i', 'j']
    normal_vec[$462build_tuple.164] = $452binary_subtract.159 ['$452binary_subtract.159', '$462build_tuple.164', 'normal_vec']
    $const472.168 = const(int, 0)            ['$const472.168']
    $const474.169 = const(int, 0)            ['$const474.169']
    $476build_tuple.170 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const472.168, geometry.py:373), Var($const474.169, geometry.py:373)]) ['$476build_tuple.170', '$const472.168', '$const474.169', 'i', 'j']
    $478binary_subscr.171 = getitem(value=surfaces, index=$476build_tuple.170, fn=<built-in function getitem>) ['$476build_tuple.170', '$478binary_subscr.171', 'surfaces']
    $480unary_negative.172 = unary(fn=<built-in function neg>, value=$478binary_subscr.171) ['$478binary_subscr.171', '$480unary_negative.172']
    $const488.176 = const(int, 0)            ['$const488.176']
    $490build_tuple.177 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const488.176, geometry.py:373)]) ['$490build_tuple.177', '$const488.176', 'i', 'j']
    $492binary_subscr.178 = getitem(value=normal_vec, index=$490build_tuple.177, fn=<built-in function getitem>) ['$490build_tuple.177', '$492binary_subscr.178', 'normal_vec']
    $494binary_multiply.179 = $480unary_negative.172 * $492binary_subscr.178 ['$480unary_negative.172', '$492binary_subscr.178', '$494binary_multiply.179']
    $const502.183 = const(int, 0)            ['$const502.183']
    $const504.184 = const(int, 1)            ['$const504.184']
    $506build_tuple.185 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const502.183, geometry.py:374), Var($const504.184, geometry.py:374)]) ['$506build_tuple.185', '$const502.183', '$const504.184', 'i', 'j']
    $508binary_subscr.186 = getitem(value=surfaces, index=$506build_tuple.185, fn=<built-in function getitem>) ['$506build_tuple.185', '$508binary_subscr.186', 'surfaces']
    $const516.190 = const(int, 1)            ['$const516.190']
    $518build_tuple.191 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const516.190, geometry.py:374)]) ['$518build_tuple.191', '$const516.190', 'i', 'j']
    $520binary_subscr.192 = getitem(value=normal_vec, index=$518build_tuple.191, fn=<built-in function getitem>) ['$518build_tuple.191', '$520binary_subscr.192', 'normal_vec']
    $522binary_multiply.193 = $508binary_subscr.186 * $520binary_subscr.192 ['$508binary_subscr.186', '$520binary_subscr.192', '$522binary_multiply.193']
    $524binary_subtract.194 = $494binary_multiply.179 - $522binary_multiply.193 ['$494binary_multiply.179', '$522binary_multiply.193', '$524binary_subtract.194']
    $const532.198 = const(int, 0)            ['$const532.198']
    $const534.199 = const(int, 2)            ['$const534.199']
    $536build_tuple.200 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const532.198, geometry.py:375), Var($const534.199, geometry.py:375)]) ['$536build_tuple.200', '$const532.198', '$const534.199', 'i', 'j']
    $538binary_subscr.201 = getitem(value=surfaces, index=$536build_tuple.200, fn=<built-in function getitem>) ['$536build_tuple.200', '$538binary_subscr.201', 'surfaces']
    $const546.205 = const(int, 2)            ['$const546.205']
    $548build_tuple.206 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const546.205, geometry.py:375)]) ['$548build_tuple.206', '$const546.205', 'i', 'j']
    $550binary_subscr.207 = getitem(value=normal_vec, index=$548build_tuple.206, fn=<built-in function getitem>) ['$548build_tuple.206', '$550binary_subscr.207', 'normal_vec']
    $552binary_multiply.208 = $538binary_subscr.201 * $550binary_subscr.207 ['$538binary_subscr.201', '$550binary_subscr.207', '$552binary_multiply.208']
    $554binary_subtract.209 = $524binary_subtract.194 - $552binary_multiply.208 ['$524binary_subtract.194', '$552binary_multiply.208', '$554binary_subtract.209']
    $562build_tuple.213 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361)]) ['$562build_tuple.213', 'i', 'j']
    d[$562build_tuple.213] = $554binary_subtract.209 ['$554binary_subtract.209', '$562build_tuple.213', 'd']
    jump 118                                 []
label 568:
    jump 104                                 []
label 570:
    $574build_tuple.2 = build_tuple(items=[Var(normal_vec, geometry.py:356), Var(d, geometry.py:357)]) ['$574build_tuple.2', 'd', 'normal_vec']
    $576return_value.3 = cast(value=$574build_tuple.2) ['$574build_tuple.2', '$576return_value.3']
    return $576return_value.3                ['$576return_value.3']

2022-05-06 22:35:57,148 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,148 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,148 on stmt: surfaces = arg(0, name=surfaces)
2022-05-06 22:35:57,149 on stmt: $4load_attr.1 = getattr(value=surfaces, attr=shape)
2022-05-06 22:35:57,149 on stmt: $const6.2 = const(int, 0)
2022-05-06 22:35:57,149 on stmt: num_polygon = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
2022-05-06 22:35:57,150 on stmt: $14load_attr.5 = getattr(value=surfaces, attr=shape)
2022-05-06 22:35:57,150 on stmt: $const16.6 = const(int, 1)
2022-05-06 22:35:57,150 on stmt: max_num_surfaces = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
2022-05-06 22:35:57,150 on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:57,150 on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
2022-05-06 22:35:57,150 on stmt: $const30.12 = const(int, 3)
2022-05-06 22:35:57,150 on stmt: $32build_tuple.13 = build_tuple(items=[Var(num_polygon, geometry.py:354), Var(max_num_surfaces, geometry.py:355), Var($const30.12, geometry.py:356)])
2022-05-06 22:35:57,150 on stmt: $36load_attr.15 = getattr(value=surfaces, attr=dtype)
2022-05-06 22:35:57,150 on stmt: normal_vec = call $24load_attr.9($32build_tuple.13, func=$24load_attr.9, args=[Var($32build_tuple.13, geometry.py:356)], kws=[('dtype', Var($36load_attr.15, geometry.py:356))], vararg=None, target=None)
2022-05-06 22:35:57,151 on stmt: $44load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:57,151 on stmt: $46load_attr.19 = getattr(value=$44load_global.18, attr=zeros)
2022-05-06 22:35:57,151 on stmt: $52build_tuple.22 = build_tuple(items=[Var(num_polygon, geometry.py:354), Var(max_num_surfaces, geometry.py:355)])
2022-05-06 22:35:57,151 on stmt: $56load_attr.24 = getattr(value=surfaces, attr=dtype)
2022-05-06 22:35:57,151 on stmt: d = call $46load_attr.19($52build_tuple.22, func=$46load_attr.19, args=[Var($52build_tuple.22, geometry.py:357)], kws=[('dtype', Var($56load_attr.24, geometry.py:357))], vararg=None, target=None)
2022-05-06 22:35:57,151 on stmt: $const_0 = const(int, 0)
2022-05-06 22:35:57,151 on stmt: $const_0.1 = const(int, 0)
2022-05-06 22:35:57,151 on stmt: $const_0.2 = const(int, 0)
2022-05-06 22:35:57,152 on stmt: $const66.28 = build_tuple(items=[Var($const_0, geometry.py:358), Var($const_0.1, geometry.py:358), Var($const_0.2, geometry.py:358)])
2022-05-06 22:35:57,152 on stmt: $68binary_subscr.29 = static_getitem(value=surfaces, index=(0, 0, 0), index_var=$const66.28, fn=<built-in function getitem>)
2022-05-06 22:35:57,152 on stmt: $const_0.3 = const(int, 0)
2022-05-06 22:35:57,152 on stmt: $const_0.4 = const(int, 0)
2022-05-06 22:35:57,152 on stmt: $const_1 = const(int, 1)
2022-05-06 22:35:57,152 on stmt: $const72.31 = build_tuple(items=[Var($const_0.3, geometry.py:358), Var($const_0.4, geometry.py:358), Var($const_1, geometry.py:358)])
2022-05-06 22:35:57,152 on stmt: $74binary_subscr.32 = static_getitem(value=surfaces, index=(0, 0, 1), index_var=$const72.31, fn=<built-in function getitem>)
2022-05-06 22:35:57,152 on stmt: sv0 = $68binary_subscr.29 - $74binary_subscr.32
2022-05-06 22:35:57,153 on stmt: $const_0.5 = const(int, 0)
2022-05-06 22:35:57,153 on stmt: $const_0.6 = const(int, 0)
2022-05-06 22:35:57,153 on stmt: $const_0.7 = const(int, 0)
2022-05-06 22:35:57,153 on stmt: $const82.35 = build_tuple(items=[Var($const_0.5, geometry.py:359), Var($const_0.6, geometry.py:359), Var($const_0.7, geometry.py:359)])
2022-05-06 22:35:57,153 on stmt: $84binary_subscr.36 = static_getitem(value=surfaces, index=(0, 0, 0), index_var=$const82.35, fn=<built-in function getitem>)
2022-05-06 22:35:57,153 on stmt: $const_0.8 = const(int, 0)
2022-05-06 22:35:57,153 on stmt: $const_0.9 = const(int, 0)
2022-05-06 22:35:57,153 on stmt: $const_1.1 = const(int, 1)
2022-05-06 22:35:57,153 on stmt: $const88.38 = build_tuple(items=[Var($const_0.8, geometry.py:359), Var($const_0.9, geometry.py:359), Var($const_1.1, geometry.py:359)])
2022-05-06 22:35:57,154 on stmt: $90binary_subscr.39 = static_getitem(value=surfaces, index=(0, 0, 1), index_var=$const88.38, fn=<built-in function getitem>)
2022-05-06 22:35:57,154 on stmt: sv1 = $84binary_subscr.36 - $90binary_subscr.39
2022-05-06 22:35:57,154 on stmt: $96load_global.41 = global(range: <class 'range'>)
2022-05-06 22:35:57,154 on stmt: $100call_function.43 = call $96load_global.41(num_polygon, func=$96load_global.41, args=[Var(num_polygon, geometry.py:354)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,154 on stmt: $102get_iter.44 = getiter(value=$100call_function.43)
2022-05-06 22:35:57,154 on stmt: $phi104.0 = $102get_iter.44
2022-05-06 22:35:57,154 on stmt: jump 104
2022-05-06 22:35:57,154 ==== SSA block analysis pass on 104
2022-05-06 22:35:57,154 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,155 on stmt: $104for_iter.1 = iternext(value=$phi104.0)
2022-05-06 22:35:57,155 on stmt: $104for_iter.2 = pair_first(value=$104for_iter.1)
2022-05-06 22:35:57,155 on stmt: $104for_iter.3 = pair_second(value=$104for_iter.1)
2022-05-06 22:35:57,155 on stmt: $phi108.1 = $104for_iter.2
2022-05-06 22:35:57,155 on stmt: branch $104for_iter.3, 108, 570
2022-05-06 22:35:57,155 ==== SSA block analysis pass on 108
2022-05-06 22:35:57,155 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,155 on stmt: i = $phi108.1
2022-05-06 22:35:57,155 on stmt: $110load_global.2 = global(range: <class 'range'>)
2022-05-06 22:35:57,156 on stmt: $114call_function.4 = call $110load_global.2(max_num_surfaces, func=$110load_global.2, args=[Var(max_num_surfaces, geometry.py:355)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,156 on stmt: $116get_iter.5 = getiter(value=$114call_function.4)
2022-05-06 22:35:57,156 on stmt: $phi118.1 = $116get_iter.5
2022-05-06 22:35:57,156 on stmt: jump 118
2022-05-06 22:35:57,156 ==== SSA block analysis pass on 118
2022-05-06 22:35:57,156 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,156 on stmt: $118for_iter.2 = iternext(value=$phi118.1)
2022-05-06 22:35:57,157 on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
2022-05-06 22:35:57,157 on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
2022-05-06 22:35:57,157 on stmt: $phi122.2 = $118for_iter.3
2022-05-06 22:35:57,157 on stmt: branch $118for_iter.4, 122, 568
2022-05-06 22:35:57,157 ==== SSA block analysis pass on 122
2022-05-06 22:35:57,157 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,157 on stmt: j = $phi122.2
2022-05-06 22:35:57,157 on stmt: $const130.6 = const(int, 0)
2022-05-06 22:35:57,157 on stmt: $const132.7 = const(int, 0)
2022-05-06 22:35:57,158 on stmt: $134build_tuple.8 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const130.6, geometry.py:362), Var($const132.7, geometry.py:362)])
2022-05-06 22:35:57,158 on stmt: $136binary_subscr.9 = getitem(value=surfaces, index=$134build_tuple.8, fn=<built-in function getitem>)
2022-05-06 22:35:57,158 on stmt: $const144.13 = const(int, 1)
2022-05-06 22:35:57,158 on stmt: $const146.14 = const(int, 0)
2022-05-06 22:35:57,158 on stmt: $148build_tuple.15 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const144.13, geometry.py:362), Var($const146.14, geometry.py:362)])
2022-05-06 22:35:57,158 on stmt: $150binary_subscr.16 = getitem(value=surfaces, index=$148build_tuple.15, fn=<built-in function getitem>)
2022-05-06 22:35:57,158 on stmt: $152binary_subtract.17 = $136binary_subscr.9 - $150binary_subscr.16
2022-05-06 22:35:57,158 on stmt: $const156.19 = const(int, 0)
2022-05-06 22:35:57,159 on stmt: sv0[0] = $152binary_subtract.17
2022-05-06 22:35:57,159 on stmt: $const166.23 = const(int, 0)
2022-05-06 22:35:57,159 on stmt: $const168.24 = const(int, 1)
2022-05-06 22:35:57,159 on stmt: $170build_tuple.25 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const166.23, geometry.py:363), Var($const168.24, geometry.py:363)])
2022-05-06 22:35:57,159 on stmt: $172binary_subscr.26 = getitem(value=surfaces, index=$170build_tuple.25, fn=<built-in function getitem>)
2022-05-06 22:35:57,159 on stmt: $const180.30 = const(int, 1)
2022-05-06 22:35:57,159 on stmt: $const182.31 = const(int, 1)
2022-05-06 22:35:57,159 on stmt: $184build_tuple.32 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const180.30, geometry.py:363), Var($const182.31, geometry.py:363)])
2022-05-06 22:35:57,160 on stmt: $186binary_subscr.33 = getitem(value=surfaces, index=$184build_tuple.32, fn=<built-in function getitem>)
2022-05-06 22:35:57,160 on stmt: $188binary_subtract.34 = $172binary_subscr.26 - $186binary_subscr.33
2022-05-06 22:35:57,160 on stmt: $const192.36 = const(int, 1)
2022-05-06 22:35:57,160 on stmt: sv0[1] = $188binary_subtract.34
2022-05-06 22:35:57,160 on stmt: $const202.40 = const(int, 0)
2022-05-06 22:35:57,160 on stmt: $const204.41 = const(int, 2)
2022-05-06 22:35:57,160 on stmt: $206build_tuple.42 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const202.40, geometry.py:364), Var($const204.41, geometry.py:364)])
2022-05-06 22:35:57,160 on stmt: $208binary_subscr.43 = getitem(value=surfaces, index=$206build_tuple.42, fn=<built-in function getitem>)
2022-05-06 22:35:57,161 on stmt: $const216.47 = const(int, 1)
2022-05-06 22:35:57,161 on stmt: $const218.48 = const(int, 2)
2022-05-06 22:35:57,161 on stmt: $220build_tuple.49 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const216.47, geometry.py:364), Var($const218.48, geometry.py:364)])
2022-05-06 22:35:57,161 on stmt: $222binary_subscr.50 = getitem(value=surfaces, index=$220build_tuple.49, fn=<built-in function getitem>)
2022-05-06 22:35:57,161 on stmt: $224binary_subtract.51 = $208binary_subscr.43 - $222binary_subscr.50
2022-05-06 22:35:57,161 on stmt: $const228.53 = const(int, 2)
2022-05-06 22:35:57,161 on stmt: sv0[2] = $224binary_subtract.51
2022-05-06 22:35:57,161 on stmt: $const238.57 = const(int, 1)
2022-05-06 22:35:57,161 on stmt: $const240.58 = const(int, 0)
2022-05-06 22:35:57,162 on stmt: $242build_tuple.59 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const238.57, geometry.py:365), Var($const240.58, geometry.py:365)])
2022-05-06 22:35:57,162 on stmt: $244binary_subscr.60 = getitem(value=surfaces, index=$242build_tuple.59, fn=<built-in function getitem>)
2022-05-06 22:35:57,162 on stmt: $const252.64 = const(int, 2)
2022-05-06 22:35:57,162 on stmt: $const254.65 = const(int, 0)
2022-05-06 22:35:57,162 on stmt: $256build_tuple.66 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const252.64, geometry.py:365), Var($const254.65, geometry.py:365)])
2022-05-06 22:35:57,162 on stmt: $258binary_subscr.67 = getitem(value=surfaces, index=$256build_tuple.66, fn=<built-in function getitem>)
2022-05-06 22:35:57,162 on stmt: $260binary_subtract.68 = $244binary_subscr.60 - $258binary_subscr.67
2022-05-06 22:35:57,163 on stmt: $const264.70 = const(int, 0)
2022-05-06 22:35:57,163 on stmt: sv1[0] = $260binary_subtract.68
2022-05-06 22:35:57,163 on stmt: $const274.74 = const(int, 1)
2022-05-06 22:35:57,163 on stmt: $const276.75 = const(int, 1)
2022-05-06 22:35:57,163 on stmt: $278build_tuple.76 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const274.74, geometry.py:366), Var($const276.75, geometry.py:366)])
2022-05-06 22:35:57,163 on stmt: $280binary_subscr.77 = getitem(value=surfaces, index=$278build_tuple.76, fn=<built-in function getitem>)
2022-05-06 22:35:57,163 on stmt: $const288.81 = const(int, 2)
2022-05-06 22:35:57,163 on stmt: $const290.82 = const(int, 1)
2022-05-06 22:35:57,163 on stmt: $292build_tuple.83 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const288.81, geometry.py:366), Var($const290.82, geometry.py:366)])
2022-05-06 22:35:57,164 on stmt: $294binary_subscr.84 = getitem(value=surfaces, index=$292build_tuple.83, fn=<built-in function getitem>)
2022-05-06 22:35:57,164 on stmt: $296binary_subtract.85 = $280binary_subscr.77 - $294binary_subscr.84
2022-05-06 22:35:57,164 on stmt: $const300.87 = const(int, 1)
2022-05-06 22:35:57,164 on stmt: sv1[1] = $296binary_subtract.85
2022-05-06 22:35:57,164 on stmt: $const310.91 = const(int, 1)
2022-05-06 22:35:57,164 on stmt: $const312.92 = const(int, 2)
2022-05-06 22:35:57,164 on stmt: $314build_tuple.93 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const310.91, geometry.py:367), Var($const312.92, geometry.py:367)])
2022-05-06 22:35:57,164 on stmt: $316binary_subscr.94 = getitem(value=surfaces, index=$314build_tuple.93, fn=<built-in function getitem>)
2022-05-06 22:35:57,164 on stmt: $const324.98 = const(int, 2)
2022-05-06 22:35:57,164 on stmt: $const326.99 = const(int, 2)
2022-05-06 22:35:57,165 on stmt: $328build_tuple.100 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const324.98, geometry.py:367), Var($const326.99, geometry.py:367)])
2022-05-06 22:35:57,165 on stmt: $330binary_subscr.101 = getitem(value=surfaces, index=$328build_tuple.100, fn=<built-in function getitem>)
2022-05-06 22:35:57,165 on stmt: $332binary_subtract.102 = $316binary_subscr.94 - $330binary_subscr.101
2022-05-06 22:35:57,165 on stmt: $const336.104 = const(int, 2)
2022-05-06 22:35:57,165 on stmt: sv1[2] = $332binary_subtract.102
2022-05-06 22:35:57,165 on stmt: $const342.106 = const(int, 1)
2022-05-06 22:35:57,165 on stmt: $344binary_subscr.107 = static_getitem(value=sv0, index=1, index_var=$const342.106, fn=<built-in function getitem>)
2022-05-06 22:35:57,166 on stmt: $const348.109 = const(int, 2)
2022-05-06 22:35:57,166 on stmt: $350binary_subscr.110 = static_getitem(value=sv1, index=2, index_var=$const348.109, fn=<built-in function getitem>)
2022-05-06 22:35:57,166 on stmt: $352binary_multiply.111 = $344binary_subscr.107 * $350binary_subscr.110
2022-05-06 22:35:57,166 on stmt: $const356.113 = const(int, 2)
2022-05-06 22:35:57,166 on stmt: $358binary_subscr.114 = static_getitem(value=sv0, index=2, index_var=$const356.113, fn=<built-in function getitem>)
2022-05-06 22:35:57,166 on stmt: $const362.116 = const(int, 1)
2022-05-06 22:35:57,166 on stmt: $364binary_subscr.117 = static_getitem(value=sv1, index=1, index_var=$const362.116, fn=<built-in function getitem>)
2022-05-06 22:35:57,166 on stmt: $366binary_multiply.118 = $358binary_subscr.114 * $364binary_subscr.117
2022-05-06 22:35:57,166 on stmt: $368binary_subtract.119 = $352binary_multiply.111 - $366binary_multiply.118
2022-05-06 22:35:57,167 on stmt: $const376.123 = const(int, 0)
2022-05-06 22:35:57,167 on stmt: $378build_tuple.124 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const376.123, geometry.py:368)])
2022-05-06 22:35:57,167 on stmt: normal_vec[$378build_tuple.124] = $368binary_subtract.119
2022-05-06 22:35:57,167 on stmt: $const384.126 = const(int, 2)
2022-05-06 22:35:57,167 on stmt: $386binary_subscr.127 = static_getitem(value=sv0, index=2, index_var=$const384.126, fn=<built-in function getitem>)
2022-05-06 22:35:57,167 on stmt: $const390.129 = const(int, 0)
2022-05-06 22:35:57,167 on stmt: $392binary_subscr.130 = static_getitem(value=sv1, index=0, index_var=$const390.129, fn=<built-in function getitem>)
2022-05-06 22:35:57,167 on stmt: $394binary_multiply.131 = $386binary_subscr.127 * $392binary_subscr.130
2022-05-06 22:35:57,168 on stmt: $const398.133 = const(int, 0)
2022-05-06 22:35:57,168 on stmt: $400binary_subscr.134 = static_getitem(value=sv0, index=0, index_var=$const398.133, fn=<built-in function getitem>)
2022-05-06 22:35:57,168 on stmt: $const404.136 = const(int, 2)
2022-05-06 22:35:57,168 on stmt: $406binary_subscr.137 = static_getitem(value=sv1, index=2, index_var=$const404.136, fn=<built-in function getitem>)
2022-05-06 22:35:57,168 on stmt: $408binary_multiply.138 = $400binary_subscr.134 * $406binary_subscr.137
2022-05-06 22:35:57,168 on stmt: $410binary_subtract.139 = $394binary_multiply.131 - $408binary_multiply.138
2022-05-06 22:35:57,168 on stmt: $const418.143 = const(int, 1)
2022-05-06 22:35:57,168 on stmt: $420build_tuple.144 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const418.143, geometry.py:369)])
2022-05-06 22:35:57,169 on stmt: normal_vec[$420build_tuple.144] = $410binary_subtract.139
2022-05-06 22:35:57,169 on stmt: $const426.146 = const(int, 0)
2022-05-06 22:35:57,169 on stmt: $428binary_subscr.147 = static_getitem(value=sv0, index=0, index_var=$const426.146, fn=<built-in function getitem>)
2022-05-06 22:35:57,169 on stmt: $const432.149 = const(int, 1)
2022-05-06 22:35:57,169 on stmt: $434binary_subscr.150 = static_getitem(value=sv1, index=1, index_var=$const432.149, fn=<built-in function getitem>)
2022-05-06 22:35:57,169 on stmt: $436binary_multiply.151 = $428binary_subscr.147 * $434binary_subscr.150
2022-05-06 22:35:57,169 on stmt: $const440.153 = const(int, 1)
2022-05-06 22:35:57,169 on stmt: $442binary_subscr.154 = static_getitem(value=sv0, index=1, index_var=$const440.153, fn=<built-in function getitem>)
2022-05-06 22:35:57,169 on stmt: $const446.156 = const(int, 0)
2022-05-06 22:35:57,169 on stmt: $448binary_subscr.157 = static_getitem(value=sv1, index=0, index_var=$const446.156, fn=<built-in function getitem>)
2022-05-06 22:35:57,170 on stmt: $450binary_multiply.158 = $442binary_subscr.154 * $448binary_subscr.157
2022-05-06 22:35:57,170 on stmt: $452binary_subtract.159 = $436binary_multiply.151 - $450binary_multiply.158
2022-05-06 22:35:57,170 on stmt: $const460.163 = const(int, 2)
2022-05-06 22:35:57,170 on stmt: $462build_tuple.164 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const460.163, geometry.py:370)])
2022-05-06 22:35:57,170 on stmt: normal_vec[$462build_tuple.164] = $452binary_subtract.159
2022-05-06 22:35:57,170 on stmt: $const472.168 = const(int, 0)
2022-05-06 22:35:57,170 on stmt: $const474.169 = const(int, 0)
2022-05-06 22:35:57,170 on stmt: $476build_tuple.170 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const472.168, geometry.py:373), Var($const474.169, geometry.py:373)])
2022-05-06 22:35:57,170 on stmt: $478binary_subscr.171 = getitem(value=surfaces, index=$476build_tuple.170, fn=<built-in function getitem>)
2022-05-06 22:35:57,171 on stmt: $480unary_negative.172 = unary(fn=<built-in function neg>, value=$478binary_subscr.171)
2022-05-06 22:35:57,171 on stmt: $const488.176 = const(int, 0)
2022-05-06 22:35:57,171 on stmt: $490build_tuple.177 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const488.176, geometry.py:373)])
2022-05-06 22:35:57,171 on stmt: $492binary_subscr.178 = getitem(value=normal_vec, index=$490build_tuple.177, fn=<built-in function getitem>)
2022-05-06 22:35:57,171 on stmt: $494binary_multiply.179 = $480unary_negative.172 * $492binary_subscr.178
2022-05-06 22:35:57,171 on stmt: $const502.183 = const(int, 0)
2022-05-06 22:35:57,171 on stmt: $const504.184 = const(int, 1)
2022-05-06 22:35:57,171 on stmt: $506build_tuple.185 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const502.183, geometry.py:374), Var($const504.184, geometry.py:374)])
2022-05-06 22:35:57,172 on stmt: $508binary_subscr.186 = getitem(value=surfaces, index=$506build_tuple.185, fn=<built-in function getitem>)
2022-05-06 22:35:57,172 on stmt: $const516.190 = const(int, 1)
2022-05-06 22:35:57,172 on stmt: $518build_tuple.191 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const516.190, geometry.py:374)])
2022-05-06 22:35:57,172 on stmt: $520binary_subscr.192 = getitem(value=normal_vec, index=$518build_tuple.191, fn=<built-in function getitem>)
2022-05-06 22:35:57,172 on stmt: $522binary_multiply.193 = $508binary_subscr.186 * $520binary_subscr.192
2022-05-06 22:35:57,172 on stmt: $524binary_subtract.194 = $494binary_multiply.179 - $522binary_multiply.193
2022-05-06 22:35:57,172 on stmt: $const532.198 = const(int, 0)
2022-05-06 22:35:57,172 on stmt: $const534.199 = const(int, 2)
2022-05-06 22:35:57,172 on stmt: $536build_tuple.200 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const532.198, geometry.py:375), Var($const534.199, geometry.py:375)])
2022-05-06 22:35:57,173 on stmt: $538binary_subscr.201 = getitem(value=surfaces, index=$536build_tuple.200, fn=<built-in function getitem>)
2022-05-06 22:35:57,173 on stmt: $const546.205 = const(int, 2)
2022-05-06 22:35:57,173 on stmt: $548build_tuple.206 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361), Var($const546.205, geometry.py:375)])
2022-05-06 22:35:57,173 on stmt: $550binary_subscr.207 = getitem(value=normal_vec, index=$548build_tuple.206, fn=<built-in function getitem>)
2022-05-06 22:35:57,174 on stmt: $552binary_multiply.208 = $538binary_subscr.201 * $550binary_subscr.207
2022-05-06 22:35:57,174 on stmt: $554binary_subtract.209 = $524binary_subtract.194 - $552binary_multiply.208
2022-05-06 22:35:57,174 on stmt: $562build_tuple.213 = build_tuple(items=[Var(i, geometry.py:360), Var(j, geometry.py:361)])
2022-05-06 22:35:57,174 on stmt: d[$562build_tuple.213] = $554binary_subtract.209
2022-05-06 22:35:57,174 on stmt: jump 118
2022-05-06 22:35:57,174 ==== SSA block analysis pass on 568
2022-05-06 22:35:57,175 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,175 on stmt: jump 104
2022-05-06 22:35:57,175 ==== SSA block analysis pass on 570
2022-05-06 22:35:57,175 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625629C70>
2022-05-06 22:35:57,175 on stmt: $574build_tuple.2 = build_tuple(items=[Var(normal_vec, geometry.py:356), Var(d, geometry.py:357)])
2022-05-06 22:35:57,175 on stmt: $576return_value.3 = cast(value=$574build_tuple.2)
2022-05-06 22:35:57,175 on stmt: return $576return_value.3
2022-05-06 22:35:57,186 defs defaultdict(<class 'list'>,
            {'$100call_function.43': [<numba.core.ir.Assign object at 0x0000021625609190>],
             '$102get_iter.44': [<numba.core.ir.Assign object at 0x00000216256092B0>],
             '$104for_iter.1': [<numba.core.ir.Assign object at 0x00000216256033A0>],
             '$104for_iter.2': [<numba.core.ir.Assign object at 0x0000021625605280>],
             '$104for_iter.3': [<numba.core.ir.Assign object at 0x0000021625607460>],
             '$110load_global.2': [<numba.core.ir.Assign object at 0x00000216256095B0>],
             '$114call_function.4': [<numba.core.ir.Assign object at 0x00000216256098B0>],
             '$116get_iter.5': [<numba.core.ir.Assign object at 0x00000216256099D0>],
             '$118for_iter.2': [<numba.core.ir.Assign object at 0x0000021625609D00>],
             '$118for_iter.3': [<numba.core.ir.Assign object at 0x0000021625609E20>],
             '$118for_iter.4': [<numba.core.ir.Assign object at 0x0000021625609F40>],
             '$134build_tuple.8': [<numba.core.ir.Assign object at 0x0000021625610A60>],
             '$136binary_subscr.9': [<numba.core.ir.Assign object at 0x0000021625610BE0>],
             '$148build_tuple.15': [<numba.core.ir.Assign object at 0x0000021625612400>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x00000216255A5730>],
             '$150binary_subscr.16': [<numba.core.ir.Assign object at 0x0000021625612580>],
             '$152binary_subtract.17': [<numba.core.ir.Assign object at 0x0000021625612700>],
             '$170build_tuple.25': [<numba.core.ir.Assign object at 0x0000021625614280>],
             '$172binary_subscr.26': [<numba.core.ir.Assign object at 0x0000021625614400>],
             '$184build_tuple.32': [<numba.core.ir.Assign object at 0x0000021625614BE0>],
             '$186binary_subscr.33': [<numba.core.ir.Assign object at 0x0000021625614D60>],
             '$188binary_subtract.34': [<numba.core.ir.Assign object at 0x0000021625614EE0>],
             '$206build_tuple.42': [<numba.core.ir.Assign object at 0x0000021625616A60>],
             '$208binary_subscr.43': [<numba.core.ir.Assign object at 0x0000021625616BE0>],
             '$220build_tuple.49': [<numba.core.ir.Assign object at 0x0000021625618400>],
             '$222binary_subscr.50': [<numba.core.ir.Assign object at 0x0000021625618580>],
             '$224binary_subtract.51': [<numba.core.ir.Assign object at 0x0000021625618700>],
             '$22load_global.8': [<numba.core.ir.Assign object at 0x00000216255A5CD0>],
             '$242build_tuple.59': [<numba.core.ir.Assign object at 0x0000021625619280>],
             '$244binary_subscr.60': [<numba.core.ir.Assign object at 0x0000021625619400>],
             '$24load_attr.9': [<numba.core.ir.Assign object at 0x00000216255A5E50>],
             '$256build_tuple.66': [<numba.core.ir.Assign object at 0x0000021625619BE0>],
             '$258binary_subscr.67': [<numba.core.ir.Assign object at 0x0000021625619D60>],
             '$260binary_subtract.68': [<numba.core.ir.Assign object at 0x0000021625619EE0>],
             '$278build_tuple.76': [<numba.core.ir.Assign object at 0x000002162561BA60>],
             '$280binary_subscr.77': [<numba.core.ir.Assign object at 0x000002162561BBE0>],
             '$292build_tuple.83': [<numba.core.ir.Assign object at 0x000002162561E400>],
             '$294binary_subscr.84': [<numba.core.ir.Assign object at 0x000002162561E580>],
             '$296binary_subtract.85': [<numba.core.ir.Assign object at 0x000002162561E700>],
             '$314build_tuple.93': [<numba.core.ir.Assign object at 0x0000021625621280>],
             '$316binary_subscr.94': [<numba.core.ir.Assign object at 0x0000021625621400>],
             '$328build_tuple.100': [<numba.core.ir.Assign object at 0x0000021625621BE0>],
             '$32build_tuple.13': [<numba.core.ir.Assign object at 0x00000216255FF400>],
             '$330binary_subscr.101': [<numba.core.ir.Assign object at 0x0000021625621D60>],
             '$332binary_subtract.102': [<numba.core.ir.Assign object at 0x0000021625621EE0>],
             '$344binary_subscr.107': [<numba.core.ir.Assign object at 0x00000216256764C0>],
             '$350binary_subscr.110': [<numba.core.ir.Assign object at 0x0000021625676580>],
             '$352binary_multiply.111': [<numba.core.ir.Assign object at 0x0000021625623C40>],
             '$358binary_subscr.114': [<numba.core.ir.Assign object at 0x0000021625669EE0>],
             '$364binary_subscr.117': [<numba.core.ir.Assign object at 0x0000021625669F40>],
             '$366binary_multiply.118': [<numba.core.ir.Assign object at 0x0000021625625640>],
             '$368binary_subtract.119': [<numba.core.ir.Assign object at 0x00000216256257C0>],
             '$36load_attr.15': [<numba.core.ir.Assign object at 0x00000216255FF670>],
             '$378build_tuple.124': [<numba.core.ir.Assign object at 0x0000021625625E20>],
             '$386binary_subscr.127': [<numba.core.ir.Assign object at 0x0000021625669F70>],
             '$392binary_subscr.130': [<numba.core.ir.Assign object at 0x0000021625669A00>],
             '$394binary_multiply.131': [<numba.core.ir.Assign object at 0x00000216256278E0>],
             '$400binary_subscr.134': [<numba.core.ir.Assign object at 0x0000021625669C70>],
             '$406binary_subscr.137': [<numba.core.ir.Assign object at 0x0000021625669BB0>],
             '$408binary_multiply.138': [<numba.core.ir.Assign object at 0x00000216256292E0>],
             '$410binary_subtract.139': [<numba.core.ir.Assign object at 0x0000021625629460>],
             '$420build_tuple.144': [<numba.core.ir.Assign object at 0x0000021625629AC0>],
             '$428binary_subscr.147': [<numba.core.ir.Assign object at 0x0000021625669910>],
             '$434binary_subscr.150': [<numba.core.ir.Assign object at 0x0000021625669940>],
             '$436binary_multiply.151': [<numba.core.ir.Assign object at 0x000002162562B580>],
             '$442binary_subscr.154': [<numba.core.ir.Assign object at 0x0000021625669880>],
             '$448binary_subscr.157': [<numba.core.ir.Assign object at 0x00000216256698B0>],
             '$44load_global.18': [<numba.core.ir.Assign object at 0x00000216255FFC70>],
             '$450binary_multiply.158': [<numba.core.ir.Assign object at 0x000002162562BF40>],
             '$452binary_subtract.159': [<numba.core.ir.Assign object at 0x000002162562D100>],
             '$462build_tuple.164': [<numba.core.ir.Assign object at 0x000002162562D760>],
             '$46load_attr.19': [<numba.core.ir.Assign object at 0x00000216255FFDF0>],
             '$476build_tuple.170': [<numba.core.ir.Assign object at 0x000002162562F040>],
             '$478binary_subscr.171': [<numba.core.ir.Assign object at 0x000002162562F1C0>],
             '$480unary_negative.172': [<numba.core.ir.Assign object at 0x000002162562F310>],
             '$490build_tuple.177': [<numba.core.ir.Assign object at 0x000002162562F9A0>],
             '$492binary_subscr.178': [<numba.core.ir.Assign object at 0x000002162562FB20>],
             '$494binary_multiply.179': [<numba.core.ir.Assign object at 0x000002162562FCA0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x00000216255A5130>],
             '$506build_tuple.185': [<numba.core.ir.Assign object at 0x00000216256324C0>],
             '$508binary_subscr.186': [<numba.core.ir.Assign object at 0x0000021625632640>],
             '$518build_tuple.191': [<numba.core.ir.Assign object at 0x0000021625632CA0>],
             '$520binary_subscr.192': [<numba.core.ir.Assign object at 0x0000021625632E20>],
             '$522binary_multiply.193': [<numba.core.ir.Assign object at 0x0000021625632FA0>],
             '$524binary_subtract.194': [<numba.core.ir.Assign object at 0x0000021625633160>],
             '$52build_tuple.22': [<numba.core.ir.Assign object at 0x0000021625603220>],
             '$536build_tuple.200': [<numba.core.ir.Assign object at 0x0000021625633940>],
             '$538binary_subscr.201': [<numba.core.ir.Assign object at 0x0000021625633AC0>],
             '$548build_tuple.206': [<numba.core.ir.Assign object at 0x0000021625636160>],
             '$550binary_subscr.207': [<numba.core.ir.Assign object at 0x00000216256362E0>],
             '$552binary_multiply.208': [<numba.core.ir.Assign object at 0x0000021625636460>],
             '$554binary_subtract.209': [<numba.core.ir.Assign object at 0x00000216256365E0>],
             '$562build_tuple.213': [<numba.core.ir.Assign object at 0x0000021625636AC0>],
             '$56load_attr.24': [<numba.core.ir.Assign object at 0x0000021625603490>],
             '$574build_tuple.2': [<numba.core.ir.Assign object at 0x0000021625616520>],
             '$576return_value.3': [<numba.core.ir.Assign object at 0x0000021625616F10>],
             '$68binary_subscr.29': [<numba.core.ir.Assign object at 0x000002162566D2E0>],
             '$74binary_subscr.32': [<numba.core.ir.Assign object at 0x000002162566D490>],
             '$84binary_subscr.36': [<numba.core.ir.Assign object at 0x000002162566D280>],
             '$90binary_subscr.39': [<numba.core.ir.Assign object at 0x000002162566D2B0>],
             '$96load_global.41': [<numba.core.ir.Assign object at 0x0000021625607E50>],
             '$const130.6': [<numba.core.ir.Assign object at 0x0000021625610730>],
             '$const132.7': [<numba.core.ir.Assign object at 0x00000216256108B0>],
             '$const144.13': [<numba.core.ir.Assign object at 0x00000216256120D0>],
             '$const146.14': [<numba.core.ir.Assign object at 0x0000021625612250>],
             '$const156.19': [<numba.core.ir.Assign object at 0x0000021625612970>],
             '$const16.6': [<numba.core.ir.Assign object at 0x00000216255A58B0>],
             '$const166.23': [<numba.core.ir.Assign object at 0x0000021625612F10>],
             '$const168.24': [<numba.core.ir.Assign object at 0x00000216256140D0>],
             '$const180.30': [<numba.core.ir.Assign object at 0x00000216256148B0>],
             '$const182.31': [<numba.core.ir.Assign object at 0x0000021625614A30>],
             '$const192.36': [<numba.core.ir.Assign object at 0x0000021625616190>],
             '$const202.40': [<numba.core.ir.Assign object at 0x0000021625616730>],
             '$const204.41': [<numba.core.ir.Assign object at 0x00000216256168B0>],
             '$const216.47': [<numba.core.ir.Assign object at 0x00000216256180D0>],
             '$const218.48': [<numba.core.ir.Assign object at 0x0000021625618250>],
             '$const228.53': [<numba.core.ir.Assign object at 0x0000021625618970>],
             '$const238.57': [<numba.core.ir.Assign object at 0x0000021625618F10>],
             '$const240.58': [<numba.core.ir.Assign object at 0x00000216256190D0>],
             '$const252.64': [<numba.core.ir.Assign object at 0x00000216256198B0>],
             '$const254.65': [<numba.core.ir.Assign object at 0x0000021625619A30>],
             '$const264.70': [<numba.core.ir.Assign object at 0x000002162561B190>],
             '$const274.74': [<numba.core.ir.Assign object at 0x000002162561B730>],
             '$const276.75': [<numba.core.ir.Assign object at 0x000002162561B8B0>],
             '$const288.81': [<numba.core.ir.Assign object at 0x000002162561E0D0>],
             '$const290.82': [<numba.core.ir.Assign object at 0x000002162561E250>],
             '$const30.12': [<numba.core.ir.Assign object at 0x00000216255FF250>],
             '$const300.87': [<numba.core.ir.Assign object at 0x000002162561E970>],
             '$const310.91': [<numba.core.ir.Assign object at 0x000002162561EF10>],
             '$const312.92': [<numba.core.ir.Assign object at 0x00000216256210D0>],
             '$const324.98': [<numba.core.ir.Assign object at 0x00000216256218B0>],
             '$const326.99': [<numba.core.ir.Assign object at 0x0000021625621A30>],
             '$const336.104': [<numba.core.ir.Assign object at 0x0000021625623190>],
             '$const342.106': [<numba.core.ir.Assign object at 0x00000216256234F0>],
             '$const348.109': [<numba.core.ir.Assign object at 0x0000021625623910>],
             '$const356.113': [<numba.core.ir.Assign object at 0x0000021625623EB0>],
             '$const362.116': [<numba.core.ir.Assign object at 0x0000021625625310>],
             '$const376.123': [<numba.core.ir.Assign object at 0x0000021625625C70>],
             '$const384.126': [<numba.core.ir.Assign object at 0x0000021625627190>],
             '$const390.129': [<numba.core.ir.Assign object at 0x00000216256275B0>],
             '$const398.133': [<numba.core.ir.Assign object at 0x0000021625627B50>],
             '$const404.136': [<numba.core.ir.Assign object at 0x0000021625627F70>],
             '$const418.143': [<numba.core.ir.Assign object at 0x0000021625629910>],
             '$const426.146': [<numba.core.ir.Assign object at 0x0000021625629DF0>],
             '$const432.149': [<numba.core.ir.Assign object at 0x000002162562B250>],
             '$const440.153': [<numba.core.ir.Assign object at 0x000002162562B7F0>],
             '$const446.156': [<numba.core.ir.Assign object at 0x000002162562BC10>],
             '$const460.163': [<numba.core.ir.Assign object at 0x000002162562D5B0>],
             '$const472.168': [<numba.core.ir.Assign object at 0x000002162562DCD0>],
             '$const474.169': [<numba.core.ir.Assign object at 0x000002162562DE50>],
             '$const488.176': [<numba.core.ir.Assign object at 0x000002162562F7F0>],
             '$const502.183': [<numba.core.ir.Assign object at 0x0000021625632190>],
             '$const504.184': [<numba.core.ir.Assign object at 0x0000021625632310>],
             '$const516.190': [<numba.core.ir.Assign object at 0x0000021625632AF0>],
             '$const532.198': [<numba.core.ir.Assign object at 0x0000021625633610>],
             '$const534.199': [<numba.core.ir.Assign object at 0x0000021625633790>],
             '$const546.205': [<numba.core.ir.Assign object at 0x0000021625633F70>],
             '$const6.2': [<numba.core.ir.Assign object at 0x00000216255A51F0>],
             '$const66.28': [<numba.core.ir.Assign object at 0x0000021625603F10>],
             '$const72.31': [<numba.core.ir.Assign object at 0x00000216256056D0>],
             '$const82.35': [<numba.core.ir.Assign object at 0x0000021625607130>],
             '$const88.38': [<numba.core.ir.Assign object at 0x00000216256078B0>],
             '$const_0': [<numba.core.ir.Assign object at 0x0000021625603BE0>],
             '$const_0.1': [<numba.core.ir.Assign object at 0x0000021625603D00>],
             '$const_0.2': [<numba.core.ir.Assign object at 0x0000021625603E20>],
             '$const_0.3': [<numba.core.ir.Assign object at 0x00000216256053A0>],
             '$const_0.4': [<numba.core.ir.Assign object at 0x00000216256054C0>],
             '$const_0.5': [<numba.core.ir.Assign object at 0x0000021625605DC0>],
             '$const_0.6': [<numba.core.ir.Assign object at 0x0000021625605EE0>],
             '$const_0.7': [<numba.core.ir.Assign object at 0x0000021625607040>],
             '$const_0.8': [<numba.core.ir.Assign object at 0x0000021625607580>],
             '$const_0.9': [<numba.core.ir.Assign object at 0x00000216256076A0>],
             '$const_1': [<numba.core.ir.Assign object at 0x00000216256055E0>],
             '$const_1.1': [<numba.core.ir.Assign object at 0x00000216256077C0>],
             '$phi104.0': [<numba.core.ir.Assign object at 0x00000216255A5520>],
             '$phi108.1': [<numba.core.ir.Assign object at 0x00000216255FFFA0>],
             '$phi118.1': [<numba.core.ir.Assign object at 0x00000216256096D0>],
             '$phi122.2': [<numba.core.ir.Assign object at 0x0000021625609C40>],
             'd': [<numba.core.ir.Assign object at 0x0000021625603910>],
             'i': [<numba.core.ir.Assign object at 0x0000021625609430>],
             'j': [<numba.core.ir.Assign object at 0x0000021625610250>],
             'max_num_surfaces': [<numba.core.ir.Assign object at 0x000002162566D4F0>],
             'normal_vec': [<numba.core.ir.Assign object at 0x00000216255FFAF0>],
             'num_polygon': [<numba.core.ir.Assign object at 0x000002162566D640>],
             'surfaces': [<numba.core.ir.Assign object at 0x000002162377A310>],
             'sv0': [<numba.core.ir.Assign object at 0x0000021625605A00>],
             'sv1': [<numba.core.ir.Assign object at 0x0000021625607BE0>]})
2022-05-06 22:35:57,186 SSA violators set()
2022-05-06 22:35:57,230 bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:57,230 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,230 stack: []
2022-05-06 22:35:57,231 dispatch pc=0, inst=NOP(arg=None, lineno=3)
2022-05-06 22:35:57,231 stack []
2022-05-06 22:35:57,231 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
2022-05-06 22:35:57,231 stack []
2022-05-06 22:35:57,231 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
2022-05-06 22:35:57,232 stack ['$2load_global.0']
2022-05-06 22:35:57,232 dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
2022-05-06 22:35:57,232 stack ['$2load_global.0', '$tmp04.1']
2022-05-06 22:35:57,232 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
2022-05-06 22:35:57,233 stack ['$2load_global.0', '$tmp04.1', '$dtype6.2']
2022-05-06 22:35:57,233 dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:57,233 stack ['$8call_function.3']
2022-05-06 22:35:57,233 end state. edges=[]
2022-05-06 22:35:57,233 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,234 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:57,234 defmap: {}
2022-05-06 22:35:57,234 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,234 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,235 keep phismap: {}
2022-05-06 22:35:57,235 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,235 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,235 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$dtype6.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$dtype6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,237 label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'dtype', 'tmp0']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2022-05-06 22:35:57,243 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,244 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216256E6A30>
2022-05-06 22:35:57,244 on stmt: tmp0 = arg(0, name=tmp0)
2022-05-06 22:35:57,244 on stmt: dtype = arg(1, name=dtype)
2022-05-06 22:35:57,244 on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
2022-05-06 22:35:57,245 on stmt: $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,245 on stmt: $10return_value.4 = cast(value=$8call_function.3)
2022-05-06 22:35:57,245 on stmt: return $10return_value.4
2022-05-06 22:35:57,246 defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x00000216256EF730>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x00000216256EF1F0>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x00000216256EF610>],
             'dtype': [<numba.core.ir.Assign object at 0x00000216256EF070>],
             'tmp0': [<numba.core.ir.Assign object at 0x00000216256E63D0>]})
2022-05-06 22:35:57,246 SSA violators set()
2022-05-06 22:35:57,270 bytecode dump:
>          0	NOP(arg=None, lineno=3543)
           2	LOAD_FAST(arg=0, lineno=3543)
           4	LOAD_METHOD(arg=0, lineno=3543)
           6	LOAD_FAST(arg=1, lineno=3543)
           8	LOAD_FAST(arg=2, lineno=3543)
          10	CALL_METHOD(arg=2, lineno=3543)
          12	RETURN_VALUE(arg=None, lineno=3543)
2022-05-06 22:35:57,271 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,271 stack: []
2022-05-06 22:35:57,271 dispatch pc=0, inst=NOP(arg=None, lineno=3543)
2022-05-06 22:35:57,271 stack []
2022-05-06 22:35:57,271 dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3543)
2022-05-06 22:35:57,271 stack []
2022-05-06 22:35:57,271 dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=3543)
2022-05-06 22:35:57,271 stack ['$arrtype2.0']
2022-05-06 22:35:57,271 dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3543)
2022-05-06 22:35:57,272 stack ['$4load_method.1']
2022-05-06 22:35:57,272 dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3543)
2022-05-06 22:35:57,272 stack ['$4load_method.1', '$size6.2']
2022-05-06 22:35:57,272 dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3543)
2022-05-06 22:35:57,272 stack ['$4load_method.1', '$size6.2', '$align8.3']
2022-05-06 22:35:57,272 dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=3543)
2022-05-06 22:35:57,272 stack ['$10call_method.4']
2022-05-06 22:35:57,272 end state. edges=[]
2022-05-06 22:35:57,272 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,273 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:57,273 defmap: {}
2022-05-06 22:35:57,273 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,273 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,273 keep phismap: {}
2022-05-06 22:35:57,273 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,273 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,273 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,274 label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3543), Var(align, arrayobj.py:3543)], kws=(), vararg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2022-05-06 22:35:57,282 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,282 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625758FA0>
2022-05-06 22:35:57,282 on stmt: arrtype = arg(0, name=arrtype)
2022-05-06 22:35:57,283 on stmt: size = arg(1, name=size)
2022-05-06 22:35:57,283 on stmt: align = arg(2, name=align)
2022-05-06 22:35:57,283 on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
2022-05-06 22:35:57,283 on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3543), Var(align, arrayobj.py:3543)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,283 on stmt: $12return_value.5 = cast(value=$10call_method.4)
2022-05-06 22:35:57,283 on stmt: return $12return_value.5
2022-05-06 22:35:57,284 defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x0000021625758310>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x0000021625758400>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x0000021625750E80>],
             'align': [<numba.core.ir.Assign object at 0x0000021625750BE0>],
             'arrtype': [<numba.core.ir.Assign object at 0x0000021625750100>],
             'size': [<numba.core.ir.Assign object at 0x0000021625750160>]})
2022-05-06 22:35:57,284 SSA violators set()
2022-05-06 22:35:57,288 bytecode dump:
>          0	NOP(arg=None, lineno=3536)
           2	LOAD_GLOBAL(arg=0, lineno=3536)
           4	LOAD_FAST(arg=1, lineno=3536)
           6	LOAD_FAST(arg=2, lineno=3536)
           8	CALL_FUNCTION(arg=2, lineno=3536)
          10	RETURN_VALUE(arg=None, lineno=3536)
2022-05-06 22:35:57,289 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,289 stack: []
2022-05-06 22:35:57,289 dispatch pc=0, inst=NOP(arg=None, lineno=3536)
2022-05-06 22:35:57,289 stack []
2022-05-06 22:35:57,289 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3536)
2022-05-06 22:35:57,289 stack []
2022-05-06 22:35:57,289 dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=3536)
2022-05-06 22:35:57,289 stack ['$2load_global.0']
2022-05-06 22:35:57,289 dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=3536)
2022-05-06 22:35:57,290 stack ['$2load_global.0', '$allocsize4.1']
2022-05-06 22:35:57,290 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3536)
2022-05-06 22:35:57,290 stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
2022-05-06 22:35:57,290 dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3536)
2022-05-06 22:35:57,290 stack ['$8call_function.3']
2022-05-06 22:35:57,290 end state. edges=[]
2022-05-06 22:35:57,290 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,290 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:57,290 defmap: {}
2022-05-06 22:35:57,291 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,291 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,291 keep phismap: {}
2022-05-06 22:35:57,291 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,291 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,291 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,292 label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:3536), Var(align, arrayobj.py:3536)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2022-05-06 22:35:57,295 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,295 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216257CD640>
2022-05-06 22:35:57,296 on stmt: cls = arg(0, name=cls)
2022-05-06 22:35:57,296 on stmt: allocsize = arg(1, name=allocsize)
2022-05-06 22:35:57,296 on stmt: align = arg(2, name=align)
2022-05-06 22:35:57,296 on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2022-05-06 22:35:57,296 on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:3536), Var(align, arrayobj.py:3536)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,296 on stmt: $10return_value.4 = cast(value=$8call_function.3)
2022-05-06 22:35:57,296 on stmt: return $10return_value.4
2022-05-06 22:35:57,297 defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x0000021625D32E80>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x0000021625D32940>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x0000021625D32D60>],
             'align': [<numba.core.ir.Assign object at 0x0000021625D327C0>],
             'allocsize': [<numba.core.ir.Assign object at 0x0000021625D32070>],
             'cls': [<numba.core.ir.Assign object at 0x0000021625D32190>]})
2022-05-06 22:35:57,297 SSA violators set()
2022-05-06 22:35:57,429 bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:57,430 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,430 stack: []
2022-05-06 22:35:57,430 dispatch pc=0, inst=NOP(arg=None, lineno=3)
2022-05-06 22:35:57,430 stack []
2022-05-06 22:35:57,430 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
2022-05-06 22:35:57,431 stack []
2022-05-06 22:35:57,431 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
2022-05-06 22:35:57,431 stack ['$2load_global.0']
2022-05-06 22:35:57,431 dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
2022-05-06 22:35:57,431 stack ['$2load_global.0', '$tmp04.1']
2022-05-06 22:35:57,432 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
2022-05-06 22:35:57,432 stack ['$2load_global.0', '$tmp04.1', '$dtype6.2']
2022-05-06 22:35:57,432 dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:57,432 stack ['$8call_function.3']
2022-05-06 22:35:57,433 end state. edges=[]
2022-05-06 22:35:57,433 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,433 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:57,433 defmap: {}
2022-05-06 22:35:57,434 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,434 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,434 keep phismap: {}
2022-05-06 22:35:57,434 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,434 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,435 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$dtype6.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$dtype6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,436 label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'dtype', 'tmp0']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2022-05-06 22:35:57,443 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,443 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625DC96D0>
2022-05-06 22:35:57,444 on stmt: tmp0 = arg(0, name=tmp0)
2022-05-06 22:35:57,444 on stmt: dtype = arg(1, name=dtype)
2022-05-06 22:35:57,444 on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
2022-05-06 22:35:57,444 on stmt: $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None)
2022-05-06 22:35:57,444 on stmt: $10return_value.4 = cast(value=$8call_function.3)
2022-05-06 22:35:57,444 on stmt: return $10return_value.4
2022-05-06 22:35:57,445 defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x0000021625DCA3A0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x0000021625DC9E20>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x0000021625DCA280>],
             'dtype': [<numba.core.ir.Assign object at 0x0000021625DC9430>],
             'tmp0': [<numba.core.ir.Assign object at 0x0000021625DC93D0>]})
2022-05-06 22:35:57,445 SSA violators set()
2022-05-06 22:35:57,761 bytecode dump:
>          0	NOP(arg=None, lineno=358)
           2	LOAD_FAST(arg=0, lineno=358)
           4	LOAD_FAST(arg=1, lineno=358)
           6	BINARY_SUBTRACT(arg=None, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
2022-05-06 22:35:57,762 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,762 stack: []
2022-05-06 22:35:57,762 dispatch pc=0, inst=NOP(arg=None, lineno=358)
2022-05-06 22:35:57,762 stack []
2022-05-06 22:35:57,762 dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=358)
2022-05-06 22:35:57,762 stack []
2022-05-06 22:35:57,762 dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=358)
2022-05-06 22:35:57,762 stack ['$_68binary_subscr_29_12.0']
2022-05-06 22:35:57,763 dispatch pc=6, inst=BINARY_SUBTRACT(arg=None, lineno=1)
2022-05-06 22:35:57,763 stack ['$_68binary_subscr_29_12.0', '$_74binary_subscr_32_14.1']
2022-05-06 22:35:57,763 dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
2022-05-06 22:35:57,763 stack ['$6binary_subtract.2']
2022-05-06 22:35:57,763 end state. edges=[]
2022-05-06 22:35:57,763 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,763 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:57,763 defmap: {}
2022-05-06 22:35:57,763 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,764 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,764 keep phismap: {}
2022-05-06 22:35:57,764 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,764 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,764 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$_68binary_subscr_29_12.0'}), (4, {'res': '$_74binary_subscr_32_14.1'}), (6, {'lhs': '$_68binary_subscr_29_12.0', 'rhs': '$_74binary_subscr_32_14.1', 'res': '$6binary_subtract.2'}), (8, {'retval': '$6binary_subtract.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,765 label 0:
    _68binary_subscr_29_1 = arg(0, name=_68binary_subscr_29_1) ['_68binary_subscr_29_1']
    _74binary_subscr_32_1 = arg(1, name=_74binary_subscr_32_1) ['_74binary_subscr_32_1']
    $6binary_subtract.2 = _68binary_subscr_29_1 - _74binary_subscr_32_1 ['$6binary_subtract.2', '_68binary_subscr_29_1', '_74binary_subscr_32_1']
    $8return_value.3 = cast(value=$6binary_subtract.2) ['$6binary_subtract.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2022-05-06 22:35:57,768 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,768 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47B50>
2022-05-06 22:35:57,768 on stmt: _68binary_subscr_29_1 = arg(0, name=_68binary_subscr_29_1)
2022-05-06 22:35:57,768 on stmt: _74binary_subscr_32_1 = arg(1, name=_74binary_subscr_32_1)
2022-05-06 22:35:57,768 on stmt: $6binary_subtract.2 = _68binary_subscr_29_1 - _74binary_subscr_32_1
2022-05-06 22:35:57,768 on stmt: $8return_value.3 = cast(value=$6binary_subtract.2)
2022-05-06 22:35:57,768 on stmt: return $8return_value.3
2022-05-06 22:35:57,769 defs defaultdict(<class 'list'>,
            {'$6binary_subtract.2': [<numba.core.ir.Assign object at 0x0000021625E3DB80>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x0000021625E3DF70>],
             '_68binary_subscr_29_1': [<numba.core.ir.Assign object at 0x0000021625E47310>],
             '_74binary_subscr_32_1': [<numba.core.ir.Assign object at 0x0000021625E47370>]})
2022-05-06 22:35:57,769 SSA violators set()
2022-05-06 22:35:57,800 bytecode dump:
>          0	NOP(arg=None, lineno=205)
           2	LOAD_FAST(arg=0, lineno=205)
           4	LOAD_FAST(arg=2, lineno=205)
           6	COMPARE_OP(arg=4, lineno=205)
           8	POP_JUMP_IF_FALSE(arg=14, lineno=205)
          10	LOAD_CONST(arg=1, lineno=208)
          12	RETURN_VALUE(arg=None, lineno=208)
>         14	LOAD_CONST(arg=1, lineno=210)
          16	STORE_FAST(arg=4, lineno=210)
          18	LOAD_FAST(arg=2, lineno=211)
          20	LOAD_FAST(arg=0, lineno=211)
          22	BINARY_SUBTRACT(arg=None, lineno=211)
          24	STORE_FAST(arg=5, lineno=211)
>         26	LOAD_FAST(arg=4, lineno=212)
          28	LOAD_FAST(arg=0, lineno=212)
          30	COMPARE_OP(arg=0, lineno=212)
          32	POP_JUMP_IF_FALSE(arg=120, lineno=212)
          34	LOAD_FAST(arg=1, lineno=213)
          36	LOAD_FAST(arg=4, lineno=213)
          38	BINARY_SUBSCR(arg=None, lineno=213)
          40	STORE_FAST(arg=6, lineno=213)
          42	LOAD_FAST(arg=3, lineno=214)
          44	LOAD_FAST(arg=5, lineno=214)
          46	BINARY_SUBSCR(arg=None, lineno=214)
          48	STORE_FAST(arg=7, lineno=214)
          50	LOAD_FAST(arg=7, lineno=217)
          52	LOAD_CONST(arg=2, lineno=217)
          54	COMPARE_OP(arg=3, lineno=217)
          56	POP_JUMP_IF_FALSE(arg=86, lineno=217)
          58	LOAD_FAST(arg=6, lineno=221)
          60	LOAD_FAST(arg=7, lineno=221)
          62	COMPARE_OP(arg=3, lineno=221)
          64	POP_JUMP_IF_FALSE(arg=102, lineno=221)
          66	LOAD_FAST(arg=6, lineno=221)
          68	LOAD_CONST(arg=2, lineno=221)
          70	COMPARE_OP(arg=3, lineno=221)
          72	POP_JUMP_IF_FALSE(arg=102, lineno=221)
          74	LOAD_FAST(arg=5, lineno=222)
          76	LOAD_CONST(arg=2, lineno=222)
          78	BINARY_ADD(arg=None, lineno=222)
          80	UNARY_NEGATIVE(arg=None, lineno=222)
          82	RETURN_VALUE(arg=None, lineno=222)
          84	JUMP_FORWARD(arg=16, lineno=222)
>         86	LOAD_FAST(arg=6, lineno=223)
          88	LOAD_CONST(arg=2, lineno=223)
          90	COMPARE_OP(arg=3, lineno=223)
          92	POP_JUMP_IF_FALSE(arg=102, lineno=223)
          94	LOAD_FAST(arg=6, lineno=225)
          96	LOAD_FAST(arg=3, lineno=225)
          98	LOAD_FAST(arg=5, lineno=225)
         100	STORE_SUBSCR(arg=None, lineno=225)
>        102	LOAD_FAST(arg=4, lineno=226)
         104	LOAD_CONST(arg=2, lineno=226)
         106	INPLACE_ADD(arg=None, lineno=226)
         108	STORE_FAST(arg=4, lineno=226)
         110	LOAD_FAST(arg=5, lineno=227)
         112	LOAD_CONST(arg=2, lineno=227)
         114	INPLACE_ADD(arg=None, lineno=227)
         116	STORE_FAST(arg=5, lineno=227)
         118	JUMP_ABSOLUTE(arg=26, lineno=227)
>        120	LOAD_FAST(arg=5, lineno=228)
         122	RETURN_VALUE(arg=None, lineno=228)
2022-05-06 22:35:57,801 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:57,801 stack: []
2022-05-06 22:35:57,801 dispatch pc=0, inst=NOP(arg=None, lineno=205)
2022-05-06 22:35:57,801 stack []
2022-05-06 22:35:57,801 dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=205)
2022-05-06 22:35:57,801 stack []
2022-05-06 22:35:57,801 dispatch pc=4, inst=LOAD_FAST(arg=2, lineno=205)
2022-05-06 22:35:57,801 stack ['$src_ndim2.0']
2022-05-06 22:35:57,801 dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=205)
2022-05-06 22:35:57,802 stack ['$src_ndim2.0', '$dest_ndim4.1']
2022-05-06 22:35:57,802 dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=14, lineno=205)
2022-05-06 22:35:57,802 stack ['$6compare_op.2']
2022-05-06 22:35:57,802 end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,802 pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
2022-05-06 22:35:57,802 stack: []
2022-05-06 22:35:57,802 dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=208)
2022-05-06 22:35:57,802 stack []
2022-05-06 22:35:57,802 dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=208)
2022-05-06 22:35:57,802 stack ['$const10.0']
2022-05-06 22:35:57,803 end state. edges=[]
2022-05-06 22:35:57,803 pending: deque([State(pc_initial=14 nstack_initial=0)])
2022-05-06 22:35:57,803 stack: []
2022-05-06 22:35:57,803 dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=210)
2022-05-06 22:35:57,803 stack []
2022-05-06 22:35:57,803 dispatch pc=16, inst=STORE_FAST(arg=4, lineno=210)
2022-05-06 22:35:57,803 stack ['$const14.0']
2022-05-06 22:35:57,803 dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=211)
2022-05-06 22:35:57,803 stack []
2022-05-06 22:35:57,803 dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=211)
2022-05-06 22:35:57,804 stack ['$dest_ndim18.1']
2022-05-06 22:35:57,804 dispatch pc=22, inst=BINARY_SUBTRACT(arg=None, lineno=211)
2022-05-06 22:35:57,804 stack ['$dest_ndim18.1', '$src_ndim20.2']
2022-05-06 22:35:57,804 dispatch pc=24, inst=STORE_FAST(arg=5, lineno=211)
2022-05-06 22:35:57,804 stack ['$22binary_subtract.3']
2022-05-06 22:35:57,804 end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,804 pending: deque([State(pc_initial=26 nstack_initial=0)])
2022-05-06 22:35:57,804 stack: []
2022-05-06 22:35:57,804 dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=212)
2022-05-06 22:35:57,805 stack []
2022-05-06 22:35:57,805 dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=212)
2022-05-06 22:35:57,805 stack ['$src_index26.0']
2022-05-06 22:35:57,805 dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=212)
2022-05-06 22:35:57,805 stack ['$src_index26.0', '$src_ndim28.1']
2022-05-06 22:35:57,805 dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=120, lineno=212)
2022-05-06 22:35:57,805 stack ['$30compare_op.2']
2022-05-06 22:35:57,805 end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=120, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,805 pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
2022-05-06 22:35:57,805 stack: []
2022-05-06 22:35:57,806 dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=213)
2022-05-06 22:35:57,806 stack []
2022-05-06 22:35:57,806 dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=213)
2022-05-06 22:35:57,806 stack ['$src_shape34.0']
2022-05-06 22:35:57,806 dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=213)
2022-05-06 22:35:57,806 stack ['$src_shape34.0', '$src_index36.1']
2022-05-06 22:35:57,806 dispatch pc=40, inst=STORE_FAST(arg=6, lineno=213)
2022-05-06 22:35:57,806 stack ['$38binary_subscr.2']
2022-05-06 22:35:57,806 dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=214)
2022-05-06 22:35:57,807 stack []
2022-05-06 22:35:57,807 dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=214)
2022-05-06 22:35:57,807 stack ['$dest_shape42.3']
2022-05-06 22:35:57,807 dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=214)
2022-05-06 22:35:57,807 stack ['$dest_shape42.3', '$dest_index44.4']
2022-05-06 22:35:57,807 dispatch pc=48, inst=STORE_FAST(arg=7, lineno=214)
2022-05-06 22:35:57,807 stack ['$46binary_subscr.5']
2022-05-06 22:35:57,807 dispatch pc=50, inst=LOAD_FAST(arg=7, lineno=217)
2022-05-06 22:35:57,808 stack []
2022-05-06 22:35:57,808 dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=217)
2022-05-06 22:35:57,808 stack ['$dest_dim_size50.6']
2022-05-06 22:35:57,808 dispatch pc=54, inst=COMPARE_OP(arg=3, lineno=217)
2022-05-06 22:35:57,808 stack ['$dest_dim_size50.6', '$const52.7']
2022-05-06 22:35:57,808 dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=86, lineno=217)
2022-05-06 22:35:57,808 stack ['$54compare_op.8']
2022-05-06 22:35:57,808 end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,808 pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2022-05-06 22:35:57,808 stack: []
2022-05-06 22:35:57,809 dispatch pc=120, inst=LOAD_FAST(arg=5, lineno=228)
2022-05-06 22:35:57,809 stack []
2022-05-06 22:35:57,809 dispatch pc=122, inst=RETURN_VALUE(arg=None, lineno=228)
2022-05-06 22:35:57,809 stack ['$dest_index120.0']
2022-05-06 22:35:57,809 end state. edges=[]
2022-05-06 22:35:57,809 pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2022-05-06 22:35:57,809 stack: []
2022-05-06 22:35:57,809 dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=221)
2022-05-06 22:35:57,809 stack []
2022-05-06 22:35:57,810 dispatch pc=60, inst=LOAD_FAST(arg=7, lineno=221)
2022-05-06 22:35:57,810 stack ['$src_dim_size58.0']
2022-05-06 22:35:57,810 dispatch pc=62, inst=COMPARE_OP(arg=3, lineno=221)
2022-05-06 22:35:57,810 stack ['$src_dim_size58.0', '$dest_dim_size60.1']
2022-05-06 22:35:57,810 dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=102, lineno=221)
2022-05-06 22:35:57,810 stack ['$62compare_op.2']
2022-05-06 22:35:57,810 end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,810 pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=66 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,810 stack: []
2022-05-06 22:35:57,811 dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=223)
2022-05-06 22:35:57,811 stack []
2022-05-06 22:35:57,811 dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=223)
2022-05-06 22:35:57,811 stack ['$src_dim_size86.0']
2022-05-06 22:35:57,811 dispatch pc=90, inst=COMPARE_OP(arg=3, lineno=223)
2022-05-06 22:35:57,811 stack ['$src_dim_size86.0', '$const88.1']
2022-05-06 22:35:57,811 dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=102, lineno=223)
2022-05-06 22:35:57,811 stack ['$90compare_op.2']
2022-05-06 22:35:57,811 end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,812 pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,812 stack: []
2022-05-06 22:35:57,812 dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=221)
2022-05-06 22:35:57,812 stack []
2022-05-06 22:35:57,812 dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=221)
2022-05-06 22:35:57,812 stack ['$src_dim_size66.0']
2022-05-06 22:35:57,812 dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=221)
2022-05-06 22:35:57,812 stack ['$src_dim_size66.0', '$const68.1']
2022-05-06 22:35:57,812 dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=102, lineno=221)
2022-05-06 22:35:57,812 stack ['$70compare_op.2']
2022-05-06 22:35:57,813 end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,813 pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,813 stack: []
2022-05-06 22:35:57,813 dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=226)
2022-05-06 22:35:57,813 stack []
2022-05-06 22:35:57,813 dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=226)
2022-05-06 22:35:57,813 stack ['$src_index102.0']
2022-05-06 22:35:57,813 dispatch pc=106, inst=INPLACE_ADD(arg=None, lineno=226)
2022-05-06 22:35:57,813 stack ['$src_index102.0', '$const104.1']
2022-05-06 22:35:57,813 dispatch pc=108, inst=STORE_FAST(arg=4, lineno=226)
2022-05-06 22:35:57,814 stack ['$106inplace_add.2']
2022-05-06 22:35:57,814 dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=227)
2022-05-06 22:35:57,814 stack []
2022-05-06 22:35:57,814 dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=227)
2022-05-06 22:35:57,814 stack ['$dest_index110.3']
2022-05-06 22:35:57,814 dispatch pc=114, inst=INPLACE_ADD(arg=None, lineno=227)
2022-05-06 22:35:57,814 stack ['$dest_index110.3', '$const112.4']
2022-05-06 22:35:57,814 dispatch pc=116, inst=STORE_FAST(arg=5, lineno=227)
2022-05-06 22:35:57,814 stack ['$114inplace_add.5']
2022-05-06 22:35:57,815 dispatch pc=118, inst=JUMP_ABSOLUTE(arg=26, lineno=227)
2022-05-06 22:35:57,815 stack []
2022-05-06 22:35:57,815 end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,815 pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
2022-05-06 22:35:57,815 stack: []
2022-05-06 22:35:57,815 dispatch pc=94, inst=LOAD_FAST(arg=6, lineno=225)
2022-05-06 22:35:57,815 stack []
2022-05-06 22:35:57,815 dispatch pc=96, inst=LOAD_FAST(arg=3, lineno=225)
2022-05-06 22:35:57,815 stack ['$src_dim_size94.0']
2022-05-06 22:35:57,816 dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=225)
2022-05-06 22:35:57,816 stack ['$src_dim_size94.0', '$dest_shape96.1']
2022-05-06 22:35:57,816 dispatch pc=100, inst=STORE_SUBSCR(arg=None, lineno=225)
2022-05-06 22:35:57,816 stack ['$src_dim_size94.0', '$dest_shape96.1', '$dest_index98.2']
2022-05-06 22:35:57,816 end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0)]
2022-05-06 22:35:57,816 pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,816 pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,816 stack: []
2022-05-06 22:35:57,816 dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=222)
2022-05-06 22:35:57,816 stack []
2022-05-06 22:35:57,817 dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=222)
2022-05-06 22:35:57,817 stack ['$dest_index74.0']
2022-05-06 22:35:57,817 dispatch pc=78, inst=BINARY_ADD(arg=None, lineno=222)
2022-05-06 22:35:57,817 stack ['$dest_index74.0', '$const76.1']
2022-05-06 22:35:57,817 dispatch pc=80, inst=UNARY_NEGATIVE(arg=None, lineno=222)
2022-05-06 22:35:57,817 stack ['$78binary_add.2']
2022-05-06 22:35:57,817 dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=222)
2022-05-06 22:35:57,817 stack ['$80unary_negative.3']
2022-05-06 22:35:57,817 end state. edges=[]
2022-05-06 22:35:57,818 pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,818 pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,818 pending: deque([State(pc_initial=102 nstack_initial=0)])
2022-05-06 22:35:57,818 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:57,818 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set()})
2022-05-06 22:35:57,819 defmap: {}
2022-05-06 22:35:57,819 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,819 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:57,819 keep phismap: {}
2022-05-06 22:35:57,819 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:57,819 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:57,819 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$src_ndim2.0'}), (4, {'res': '$dest_ndim4.1'}), (6, {'lhs': '$src_ndim2.0', 'rhs': '$dest_ndim4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0'}), (12, {'retval': '$const10.0', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,820 block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$const14.0'}), (16, {'value': '$const14.0'}), (18, {'res': '$dest_ndim18.1'}), (20, {'res': '$src_ndim20.2'}), (22, {'lhs': '$dest_ndim18.1', 'rhs': '$src_ndim20.2', 'res': '$22binary_subtract.3'}), (24, {'value': '$22binary_subtract.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$src_index26.0'}), (28, {'res': '$src_ndim28.1'}), (30, {'lhs': '$src_index26.0', 'rhs': '$src_ndim28.1', 'res': '$30compare_op.2'}), (32, {'pred': '$30compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 120: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$src_shape34.0'}), (36, {'res': '$src_index36.1'}), (38, {'index': '$src_index36.1', 'target': '$src_shape34.0', 'res': '$38binary_subscr.2'}), (40, {'value': '$38binary_subscr.2'}), (42, {'res': '$dest_shape42.3'}), (44, {'res': '$dest_index44.4'}), (46, {'index': '$dest_index44.4', 'target': '$dest_shape42.3', 'res': '$46binary_subscr.5'}), (48, {'value': '$46binary_subscr.5'}), (50, {'res': '$dest_dim_size50.6'}), (52, {'res': '$const52.7'}), (54, {'lhs': '$dest_dim_size50.6', 'rhs': '$const52.7', 'res': '$54compare_op.8'}), (56, {'pred': '$54compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 86: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$src_dim_size58.0'}), (60, {'res': '$dest_dim_size60.1'}), (62, {'lhs': '$src_dim_size58.0', 'rhs': '$dest_dim_size60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 102: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$src_dim_size66.0'}), (68, {'res': '$const68.1'}), (70, {'lhs': '$src_dim_size66.0', 'rhs': '$const68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 102: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$dest_index74.0'}), (76, {'res': '$const76.1'}), (78, {'lhs': '$dest_index74.0', 'rhs': '$const76.1', 'res': '$78binary_add.2'}), (80, {'value': '$78binary_add.2', 'res': '$80unary_negative.3'}), (82, {'retval': '$80unary_negative.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,820 block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$src_dim_size86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$src_dim_size86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 102: ()})
2022-05-06 22:35:57,820 block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$src_dim_size94.0'}), (96, {'res': '$dest_shape96.1'}), (98, {'res': '$dest_index98.2'}), (100, {'target': '$dest_shape96.1', 'index': '$dest_index98.2', 'value': '$src_dim_size94.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ()})
2022-05-06 22:35:57,821 block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$src_index102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$src_index102.0', 'rhs': '$const104.1', 'res': '$106inplace_add.2'}), (108, {'value': '$106inplace_add.2'}), (110, {'res': '$dest_index110.3'}), (112, {'res': '$const112.4'}), (114, {'lhs': '$dest_index110.3', 'rhs': '$const112.4', 'res': '$114inplace_add.5'}), (116, {'value': '$114inplace_add.5'}), (118, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ()})
2022-05-06 22:35:57,821 block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$dest_index120.0'}), (122, {'retval': '$dest_index120.0', 'castval': '$122return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:57,826 label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $6compare_op.2 = src_ndim > dest_ndim    ['$6compare_op.2', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0 = const(int, 0)               ['$const10.0']
    $12return_value.1 = cast(value=$const10.0) ['$12return_value.1', '$const10.0']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    jump 26                                  []
label 26:
    $30compare_op.2 = src_index < src_ndim   ['$30compare_op.2', 'src_index', 'src_ndim']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 120                  ['$32pred']
label 34:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const52.7 = const(int, 1)               ['$const52.7']
    $54compare_op.8 = dest_dim_size != $const52.7 ['$54compare_op.8', '$const52.7', 'dest_dim_size']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None) ['$54compare_op.8', '$56pred', 'bool56']
    branch $56pred, 58, 86                   ['$56pred']
label 58:
    $62compare_op.2 = src_dim_size != dest_dim_size ['$62compare_op.2', 'dest_dim_size', 'src_dim_size']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 102                  ['$64pred']
label 66:
    $const68.1 = const(int, 1)               ['$const68.1']
    $70compare_op.2 = src_dim_size != $const68.1 ['$70compare_op.2', '$const68.1', 'src_dim_size']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 102                  ['$72pred']
label 74:
    $const76.1 = const(int, 1)               ['$const76.1']
    $78binary_add.2 = dest_index + $const76.1 ['$78binary_add.2', '$const76.1', 'dest_index']
    $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2) ['$78binary_add.2', '$80unary_negative.3']
    $82return_value.4 = cast(value=$80unary_negative.3) ['$80unary_negative.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']
label 86:
    $const88.1 = const(int, 1)               ['$const88.1']
    $90compare_op.2 = src_dim_size != $const88.1 ['$90compare_op.2', '$const88.1', 'src_dim_size']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 102                  ['$92pred']
label 94:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 102                                 []
label 102:
    $const104.1 = const(int, 1)              ['$const104.1']
    $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined) ['$106inplace_add.2', '$const104.1', 'src_index']
    src_index = $106inplace_add.2            ['$106inplace_add.2', 'src_index']
    $const112.4 = const(int, 1)              ['$const112.4']
    $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined) ['$114inplace_add.5', '$const112.4', 'dest_index']
    dest_index = $114inplace_add.5           ['$114inplace_add.5', 'dest_index']
    jump 26                                  []
label 120:
    $122return_value.1 = cast(value=dest_index) ['$122return_value.1', 'dest_index']
    return $122return_value.1                ['$122return_value.1']

2022-05-06 22:35:57,844 ==== SSA block analysis pass on 0
2022-05-06 22:35:57,845 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,845 on stmt: src_ndim = arg(0, name=src_ndim)
2022-05-06 22:35:57,845 on stmt: src_shape = arg(1, name=src_shape)
2022-05-06 22:35:57,845 on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-05-06 22:35:57,845 on stmt: dest_shape = arg(3, name=dest_shape)
2022-05-06 22:35:57,845 on stmt: $6compare_op.2 = src_ndim > dest_ndim
2022-05-06 22:35:57,845 on stmt: bool8 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,845 on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,845 on stmt: branch $8pred, 10, 14
2022-05-06 22:35:57,845 ==== SSA block analysis pass on 10
2022-05-06 22:35:57,846 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,846 on stmt: $const10.0 = const(int, 0)
2022-05-06 22:35:57,846 on stmt: $12return_value.1 = cast(value=$const10.0)
2022-05-06 22:35:57,846 on stmt: return $12return_value.1
2022-05-06 22:35:57,846 ==== SSA block analysis pass on 14
2022-05-06 22:35:57,846 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,846 on stmt: src_index = const(int, 0)
2022-05-06 22:35:57,846 on stmt: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,846 on stmt: jump 26
2022-05-06 22:35:57,846 ==== SSA block analysis pass on 26
2022-05-06 22:35:57,847 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,847 on stmt: $30compare_op.2 = src_index < src_ndim
2022-05-06 22:35:57,847 on stmt: bool32 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,847 on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,847 on stmt: branch $32pred, 34, 120
2022-05-06 22:35:57,847 ==== SSA block analysis pass on 34
2022-05-06 22:35:57,847 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,847 on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,847 on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,848 on stmt: $const52.7 = const(int, 1)
2022-05-06 22:35:57,848 on stmt: $54compare_op.8 = dest_dim_size != $const52.7
2022-05-06 22:35:57,848 on stmt: bool56 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,848 on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,848 on stmt: branch $56pred, 58, 86
2022-05-06 22:35:57,848 ==== SSA block analysis pass on 58
2022-05-06 22:35:57,848 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,848 on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
2022-05-06 22:35:57,848 on stmt: bool64 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,848 on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,849 on stmt: branch $64pred, 66, 102
2022-05-06 22:35:57,849 ==== SSA block analysis pass on 66
2022-05-06 22:35:57,849 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,849 on stmt: $const68.1 = const(int, 1)
2022-05-06 22:35:57,849 on stmt: $70compare_op.2 = src_dim_size != $const68.1
2022-05-06 22:35:57,849 on stmt: bool72 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,849 on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,849 on stmt: branch $72pred, 74, 102
2022-05-06 22:35:57,849 ==== SSA block analysis pass on 74
2022-05-06 22:35:57,849 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,850 on stmt: $const76.1 = const(int, 1)
2022-05-06 22:35:57,850 on stmt: $78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,850 on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
2022-05-06 22:35:57,850 on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
2022-05-06 22:35:57,850 on stmt: return $82return_value.4
2022-05-06 22:35:57,850 ==== SSA block analysis pass on 86
2022-05-06 22:35:57,850 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,850 on stmt: $const88.1 = const(int, 1)
2022-05-06 22:35:57,850 on stmt: $90compare_op.2 = src_dim_size != $const88.1
2022-05-06 22:35:57,850 on stmt: bool92 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,851 on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,851 on stmt: branch $92pred, 94, 102
2022-05-06 22:35:57,851 ==== SSA block analysis pass on 94
2022-05-06 22:35:57,851 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,851 on stmt: dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,851 on stmt: jump 102
2022-05-06 22:35:57,851 ==== SSA block analysis pass on 102
2022-05-06 22:35:57,851 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,851 on stmt: $const104.1 = const(int, 1)
2022-05-06 22:35:57,851 on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,852 on stmt: src_index = $106inplace_add.2
2022-05-06 22:35:57,852 on stmt: $const112.4 = const(int, 1)
2022-05-06 22:35:57,852 on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,853 on stmt: dest_index = $114inplace_add.5
2022-05-06 22:35:57,853 on stmt: jump 26
2022-05-06 22:35:57,853 ==== SSA block analysis pass on 120
2022-05-06 22:35:57,853 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625E47190>
2022-05-06 22:35:57,853 on stmt: $122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,853 on stmt: return $122return_value.1
2022-05-06 22:35:57,855 defs defaultdict(<class 'list'>,
            {'$106inplace_add.2': [<numba.core.ir.Assign object at 0x0000021625E73070>],
             '$114inplace_add.5': [<numba.core.ir.Assign object at 0x0000021625E73550>],
             '$122return_value.1': [<numba.core.ir.Assign object at 0x0000021625E73940>],
             '$12return_value.1': [<numba.core.ir.Assign object at 0x0000021625E5F400>],
             '$30compare_op.2': [<numba.core.ir.Assign object at 0x0000021625E513D0>],
             '$32pred': [<numba.core.ir.Assign object at 0x0000021625E5FA00>],
             '$54compare_op.8': [<numba.core.ir.Assign object at 0x0000021625E6C8B0>],
             '$56pred': [<numba.core.ir.Assign object at 0x0000021625E6CB20>],
             '$62compare_op.2': [<numba.core.ir.Assign object at 0x0000021625E6CD90>],
             '$64pred': [<numba.core.ir.Assign object at 0x0000021625E6E040>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x0000021625E5CDF0>],
             '$70compare_op.2': [<numba.core.ir.Assign object at 0x0000021625E6E4F0>],
             '$72pred': [<numba.core.ir.Assign object at 0x0000021625E6E760>],
             '$78binary_add.2': [<numba.core.ir.Assign object at 0x0000021625E6EC70>],
             '$80unary_negative.3': [<numba.core.ir.Assign object at 0x0000021625E6EDC0>],
             '$82return_value.4': [<numba.core.ir.Assign object at 0x0000021625E6EF40>],
             '$8pred': [<numba.core.ir.Assign object at 0x0000021625E5F0A0>],
             '$90compare_op.2': [<numba.core.ir.Assign object at 0x0000021625E70490>],
             '$92pred': [<numba.core.ir.Assign object at 0x0000021625E70700>],
             '$const10.0': [<numba.core.ir.Assign object at 0x0000021625E5F280>],
             '$const104.1': [<numba.core.ir.Assign object at 0x0000021625E70E80>],
             '$const112.4': [<numba.core.ir.Assign object at 0x0000021625E733A0>],
             '$const52.7': [<numba.core.ir.Assign object at 0x0000021625E6C700>],
             '$const68.1': [<numba.core.ir.Assign object at 0x0000021625E6E340>],
             '$const76.1': [<numba.core.ir.Assign object at 0x0000021625E6EAC0>],
             '$const88.1': [<numba.core.ir.Assign object at 0x0000021625E702E0>],
             'bool32': [<numba.core.ir.Assign object at 0x0000021625E5F8E0>],
             'bool56': [<numba.core.ir.Assign object at 0x0000021625E6CA00>],
             'bool64': [<numba.core.ir.Assign object at 0x0000021625E6CEE0>],
             'bool72': [<numba.core.ir.Assign object at 0x0000021625E6E640>],
             'bool8': [<numba.core.ir.Assign object at 0x0000021625E5CF40>],
             'bool92': [<numba.core.ir.Assign object at 0x0000021625E705E0>],
             'dest_dim_size': [<numba.core.ir.Assign object at 0x0000021625E6C370>],
             'dest_index': [<numba.core.ir.Assign object at 0x0000021625E47FD0>,
                            <numba.core.ir.Assign object at 0x0000021625E73610>],
             'dest_ndim': [<numba.core.ir.Assign object at 0x0000021625E5C8E0>],
             'dest_shape': [<numba.core.ir.Assign object at 0x0000021625E5CA00>],
             'src_dim_size': [<numba.core.ir.Assign object at 0x0000021625E5FE50>],
             'src_index': [<numba.core.ir.Assign object at 0x0000021625E5F6A0>,
                           <numba.core.ir.Assign object at 0x0000021625E73130>],
             'src_ndim': [<numba.core.ir.Assign object at 0x0000021625E5C4C0>],
             'src_shape': [<numba.core.ir.Assign object at 0x0000021625E5C7C0>]})
2022-05-06 22:35:57,855 SSA violators {'src_index', 'dest_index'}
2022-05-06 22:35:57,855 Fix SSA violator on var src_index
2022-05-06 22:35:57,855 ==== SSA block rewrite pass on 0
2022-05-06 22:35:57,855 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,856 on stmt: src_ndim = arg(0, name=src_ndim)
2022-05-06 22:35:57,856 on stmt: src_shape = arg(1, name=src_shape)
2022-05-06 22:35:57,856 on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-05-06 22:35:57,856 on stmt: dest_shape = arg(3, name=dest_shape)
2022-05-06 22:35:57,856 on stmt: $6compare_op.2 = src_ndim > dest_ndim
2022-05-06 22:35:57,856 on stmt: bool8 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,856 on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,856 on stmt: branch $8pred, 10, 14
2022-05-06 22:35:57,857 ==== SSA block rewrite pass on 10
2022-05-06 22:35:57,857 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,857 on stmt: $const10.0 = const(int, 0)
2022-05-06 22:35:57,857 on stmt: $12return_value.1 = cast(value=$const10.0)
2022-05-06 22:35:57,857 on stmt: return $12return_value.1
2022-05-06 22:35:57,857 ==== SSA block rewrite pass on 14
2022-05-06 22:35:57,857 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,857 on stmt: src_index = const(int, 0)
2022-05-06 22:35:57,857 first assign: src_index
2022-05-06 22:35:57,858 replaced with: src_index = const(int, 0)
2022-05-06 22:35:57,858 on stmt: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,858 on stmt: jump 26
2022-05-06 22:35:57,858 ==== SSA block rewrite pass on 26
2022-05-06 22:35:57,858 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,858 on stmt: $30compare_op.2 = src_index < src_ndim
2022-05-06 22:35:57,858 on stmt: bool32 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,858 on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,858 on stmt: branch $32pred, 34, 120
2022-05-06 22:35:57,858 ==== SSA block rewrite pass on 34
2022-05-06 22:35:57,859 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,859 on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,859 on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,859 on stmt: $const52.7 = const(int, 1)
2022-05-06 22:35:57,859 on stmt: $54compare_op.8 = dest_dim_size != $const52.7
2022-05-06 22:35:57,859 on stmt: bool56 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,859 on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,859 on stmt: branch $56pred, 58, 86
2022-05-06 22:35:57,859 ==== SSA block rewrite pass on 58
2022-05-06 22:35:57,859 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,860 on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
2022-05-06 22:35:57,860 on stmt: bool64 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,860 on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,860 on stmt: branch $64pred, 66, 102
2022-05-06 22:35:57,860 ==== SSA block rewrite pass on 66
2022-05-06 22:35:57,860 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,860 on stmt: $const68.1 = const(int, 1)
2022-05-06 22:35:57,860 on stmt: $70compare_op.2 = src_dim_size != $const68.1
2022-05-06 22:35:57,860 on stmt: bool72 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,860 on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,861 on stmt: branch $72pred, 74, 102
2022-05-06 22:35:57,861 ==== SSA block rewrite pass on 74
2022-05-06 22:35:57,861 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,861 on stmt: $const76.1 = const(int, 1)
2022-05-06 22:35:57,861 on stmt: $78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,861 on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
2022-05-06 22:35:57,861 on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
2022-05-06 22:35:57,861 on stmt: return $82return_value.4
2022-05-06 22:35:57,861 ==== SSA block rewrite pass on 86
2022-05-06 22:35:57,861 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,862 on stmt: $const88.1 = const(int, 1)
2022-05-06 22:35:57,862 on stmt: $90compare_op.2 = src_dim_size != $const88.1
2022-05-06 22:35:57,862 on stmt: bool92 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,862 on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,862 on stmt: branch $92pred, 94, 102
2022-05-06 22:35:57,862 ==== SSA block rewrite pass on 94
2022-05-06 22:35:57,862 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,862 on stmt: dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,863 on stmt: jump 102
2022-05-06 22:35:57,863 ==== SSA block rewrite pass on 102
2022-05-06 22:35:57,863 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,863 on stmt: $const104.1 = const(int, 1)
2022-05-06 22:35:57,863 on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,863 on stmt: src_index = $106inplace_add.2
2022-05-06 22:35:57,863 replaced with: src_index.1 = $106inplace_add.2
2022-05-06 22:35:57,863 on stmt: $const112.4 = const(int, 1)
2022-05-06 22:35:57,863 on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,863 on stmt: dest_index = $114inplace_add.5
2022-05-06 22:35:57,864 on stmt: jump 26
2022-05-06 22:35:57,864 ==== SSA block rewrite pass on 120
2022-05-06 22:35:57,864 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625E47040>
2022-05-06 22:35:57,864 on stmt: $122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,864 on stmt: return $122return_value.1
2022-05-06 22:35:57,864 Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x0000021625E51040>],
             102: [<numba.core.ir.Assign object at 0x0000021625DE90D0>]})
2022-05-06 22:35:57,864 ==== SSA block rewrite pass on 0
2022-05-06 22:35:57,864 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,865 on stmt: src_ndim = arg(0, name=src_ndim)
2022-05-06 22:35:57,865 on stmt: src_shape = arg(1, name=src_shape)
2022-05-06 22:35:57,865 on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-05-06 22:35:57,865 on stmt: dest_shape = arg(3, name=dest_shape)
2022-05-06 22:35:57,865 on stmt: $6compare_op.2 = src_ndim > dest_ndim
2022-05-06 22:35:57,865 on stmt: bool8 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,865 on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,865 on stmt: branch $8pred, 10, 14
2022-05-06 22:35:57,865 ==== SSA block rewrite pass on 10
2022-05-06 22:35:57,866 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,866 on stmt: $const10.0 = const(int, 0)
2022-05-06 22:35:57,866 on stmt: $12return_value.1 = cast(value=$const10.0)
2022-05-06 22:35:57,866 on stmt: return $12return_value.1
2022-05-06 22:35:57,866 ==== SSA block rewrite pass on 14
2022-05-06 22:35:57,866 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,866 on stmt: src_index = const(int, 0)
2022-05-06 22:35:57,866 on stmt: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,866 on stmt: jump 26
2022-05-06 22:35:57,866 ==== SSA block rewrite pass on 26
2022-05-06 22:35:57,867 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,867 on stmt: $30compare_op.2 = src_index < src_ndim
2022-05-06 22:35:57,867 find_def var='src_index' stmt=$30compare_op.2 = src_index < src_ndim
2022-05-06 22:35:57,867 find_def_from_top label 26
2022-05-06 22:35:57,867 insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 26
2022-05-06 22:35:57,867 find_def_from_bottom label 102
2022-05-06 22:35:57,867 incoming_def src_index.1 = $106inplace_add.2
2022-05-06 22:35:57,867 find_def_from_bottom label 14
2022-05-06 22:35:57,867 incoming_def src_index = const(int, 0)
2022-05-06 22:35:57,868 replaced with: $30compare_op.2 = src_index.2 < src_ndim
2022-05-06 22:35:57,868 on stmt: bool32 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,868 on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,868 on stmt: branch $32pred, 34, 120
2022-05-06 22:35:57,868 ==== SSA block rewrite pass on 34
2022-05-06 22:35:57,868 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,868 on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,868 find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,868 find_def_from_top label 34
2022-05-06 22:35:57,869 idom 26 from label 34
2022-05-06 22:35:57,869 find_def_from_bottom label 26
2022-05-06 22:35:57,869 replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-05-06 22:35:57,869 on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,869 on stmt: $const52.7 = const(int, 1)
2022-05-06 22:35:57,869 on stmt: $54compare_op.8 = dest_dim_size != $const52.7
2022-05-06 22:35:57,869 on stmt: bool56 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,869 on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,870 on stmt: branch $56pred, 58, 86
2022-05-06 22:35:57,870 ==== SSA block rewrite pass on 58
2022-05-06 22:35:57,870 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,870 on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
2022-05-06 22:35:57,870 on stmt: bool64 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,870 on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,870 on stmt: branch $64pred, 66, 102
2022-05-06 22:35:57,870 ==== SSA block rewrite pass on 66
2022-05-06 22:35:57,870 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,871 on stmt: $const68.1 = const(int, 1)
2022-05-06 22:35:57,871 on stmt: $70compare_op.2 = src_dim_size != $const68.1
2022-05-06 22:35:57,871 on stmt: bool72 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,871 on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,871 on stmt: branch $72pred, 74, 102
2022-05-06 22:35:57,871 ==== SSA block rewrite pass on 74
2022-05-06 22:35:57,871 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,871 on stmt: $const76.1 = const(int, 1)
2022-05-06 22:35:57,872 on stmt: $78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,872 on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
2022-05-06 22:35:57,872 on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
2022-05-06 22:35:57,872 on stmt: return $82return_value.4
2022-05-06 22:35:57,872 ==== SSA block rewrite pass on 86
2022-05-06 22:35:57,872 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,872 on stmt: $const88.1 = const(int, 1)
2022-05-06 22:35:57,872 on stmt: $90compare_op.2 = src_dim_size != $const88.1
2022-05-06 22:35:57,872 on stmt: bool92 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,873 on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,873 on stmt: branch $92pred, 94, 102
2022-05-06 22:35:57,873 ==== SSA block rewrite pass on 94
2022-05-06 22:35:57,873 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,873 on stmt: dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,873 on stmt: jump 102
2022-05-06 22:35:57,873 ==== SSA block rewrite pass on 102
2022-05-06 22:35:57,873 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,873 on stmt: $const104.1 = const(int, 1)
2022-05-06 22:35:57,874 on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,874 find_def var='src_index' stmt=$106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,874 find_def_from_top label 102
2022-05-06 22:35:57,874 idom 34 from label 102
2022-05-06 22:35:57,874 find_def_from_bottom label 34
2022-05-06 22:35:57,874 find_def_from_top label 34
2022-05-06 22:35:57,874 idom 26 from label 34
2022-05-06 22:35:57,874 find_def_from_bottom label 26
2022-05-06 22:35:57,875 replaced with: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,875 on stmt: src_index.1 = $106inplace_add.2
2022-05-06 22:35:57,875 on stmt: $const112.4 = const(int, 1)
2022-05-06 22:35:57,875 on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,875 on stmt: dest_index = $114inplace_add.5
2022-05-06 22:35:57,875 on stmt: jump 26
2022-05-06 22:35:57,875 ==== SSA block rewrite pass on 120
2022-05-06 22:35:57,875 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E47040>
2022-05-06 22:35:57,875 on stmt: $122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,876 on stmt: return $122return_value.1
2022-05-06 22:35:57,876 Fix SSA violator on var dest_index
2022-05-06 22:35:57,876 ==== SSA block rewrite pass on 0
2022-05-06 22:35:57,876 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,876 on stmt: src_ndim = arg(0, name=src_ndim)
2022-05-06 22:35:57,876 on stmt: src_shape = arg(1, name=src_shape)
2022-05-06 22:35:57,876 on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-05-06 22:35:57,876 on stmt: dest_shape = arg(3, name=dest_shape)
2022-05-06 22:35:57,876 on stmt: $6compare_op.2 = src_ndim > dest_ndim
2022-05-06 22:35:57,876 on stmt: bool8 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,877 on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,877 on stmt: branch $8pred, 10, 14
2022-05-06 22:35:57,877 ==== SSA block rewrite pass on 10
2022-05-06 22:35:57,877 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,877 on stmt: $const10.0 = const(int, 0)
2022-05-06 22:35:57,877 on stmt: $12return_value.1 = cast(value=$const10.0)
2022-05-06 22:35:57,877 on stmt: return $12return_value.1
2022-05-06 22:35:57,877 ==== SSA block rewrite pass on 14
2022-05-06 22:35:57,877 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,878 on stmt: src_index = const(int, 0)
2022-05-06 22:35:57,878 on stmt: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,878 first assign: dest_index
2022-05-06 22:35:57,878 replaced with: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,878 on stmt: jump 26
2022-05-06 22:35:57,878 ==== SSA block rewrite pass on 26
2022-05-06 22:35:57,878 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,878 on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:226), Var(src_index, npyimpl.py:210)], incoming_blocks=[102, 14])
2022-05-06 22:35:57,879 on stmt: $30compare_op.2 = src_index.2 < src_ndim
2022-05-06 22:35:57,879 on stmt: bool32 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,879 on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,879 on stmt: branch $32pred, 34, 120
2022-05-06 22:35:57,879 ==== SSA block rewrite pass on 34
2022-05-06 22:35:57,879 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,879 on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-05-06 22:35:57,879 on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,879 on stmt: $const52.7 = const(int, 1)
2022-05-06 22:35:57,879 on stmt: $54compare_op.8 = dest_dim_size != $const52.7
2022-05-06 22:35:57,880 on stmt: bool56 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,880 on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,880 on stmt: branch $56pred, 58, 86
2022-05-06 22:35:57,880 ==== SSA block rewrite pass on 58
2022-05-06 22:35:57,880 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,880 on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
2022-05-06 22:35:57,880 on stmt: bool64 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,880 on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,880 on stmt: branch $64pred, 66, 102
2022-05-06 22:35:57,880 ==== SSA block rewrite pass on 66
2022-05-06 22:35:57,881 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,881 on stmt: $const68.1 = const(int, 1)
2022-05-06 22:35:57,881 on stmt: $70compare_op.2 = src_dim_size != $const68.1
2022-05-06 22:35:57,881 on stmt: bool72 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,881 on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,881 on stmt: branch $72pred, 74, 102
2022-05-06 22:35:57,881 ==== SSA block rewrite pass on 74
2022-05-06 22:35:57,881 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,881 on stmt: $const76.1 = const(int, 1)
2022-05-06 22:35:57,881 on stmt: $78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,881 on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
2022-05-06 22:35:57,882 on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
2022-05-06 22:35:57,882 on stmt: return $82return_value.4
2022-05-06 22:35:57,882 ==== SSA block rewrite pass on 86
2022-05-06 22:35:57,882 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,882 on stmt: $const88.1 = const(int, 1)
2022-05-06 22:35:57,882 on stmt: $90compare_op.2 = src_dim_size != $const88.1
2022-05-06 22:35:57,882 on stmt: bool92 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,882 on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,882 on stmt: branch $92pred, 94, 102
2022-05-06 22:35:57,882 ==== SSA block rewrite pass on 94
2022-05-06 22:35:57,883 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,883 on stmt: dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,883 on stmt: jump 102
2022-05-06 22:35:57,883 ==== SSA block rewrite pass on 102
2022-05-06 22:35:57,883 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,883 on stmt: $const104.1 = const(int, 1)
2022-05-06 22:35:57,883 on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,883 on stmt: src_index.1 = $106inplace_add.2
2022-05-06 22:35:57,883 on stmt: $const112.4 = const(int, 1)
2022-05-06 22:35:57,883 on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,884 on stmt: dest_index = $114inplace_add.5
2022-05-06 22:35:57,884 replaced with: dest_index.1 = $114inplace_add.5
2022-05-06 22:35:57,884 on stmt: jump 26
2022-05-06 22:35:57,884 ==== SSA block rewrite pass on 120
2022-05-06 22:35:57,884 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DBBCD0>
2022-05-06 22:35:57,884 on stmt: $122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,884 on stmt: return $122return_value.1
2022-05-06 22:35:57,884 Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x0000021625E10610>],
             102: [<numba.core.ir.Assign object at 0x0000021625E4C880>]})
2022-05-06 22:35:57,884 ==== SSA block rewrite pass on 0
2022-05-06 22:35:57,885 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,885 on stmt: src_ndim = arg(0, name=src_ndim)
2022-05-06 22:35:57,885 on stmt: src_shape = arg(1, name=src_shape)
2022-05-06 22:35:57,885 on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-05-06 22:35:57,885 on stmt: dest_shape = arg(3, name=dest_shape)
2022-05-06 22:35:57,885 on stmt: $6compare_op.2 = src_ndim > dest_ndim
2022-05-06 22:35:57,885 on stmt: bool8 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,885 on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,885 on stmt: branch $8pred, 10, 14
2022-05-06 22:35:57,885 ==== SSA block rewrite pass on 10
2022-05-06 22:35:57,886 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,886 on stmt: $const10.0 = const(int, 0)
2022-05-06 22:35:57,886 on stmt: $12return_value.1 = cast(value=$const10.0)
2022-05-06 22:35:57,886 on stmt: return $12return_value.1
2022-05-06 22:35:57,886 ==== SSA block rewrite pass on 14
2022-05-06 22:35:57,886 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,886 on stmt: src_index = const(int, 0)
2022-05-06 22:35:57,886 on stmt: dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,886 on stmt: jump 26
2022-05-06 22:35:57,886 ==== SSA block rewrite pass on 26
2022-05-06 22:35:57,886 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,887 on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:226), Var(src_index, npyimpl.py:210)], incoming_blocks=[102, 14])
2022-05-06 22:35:57,887 on stmt: $30compare_op.2 = src_index.2 < src_ndim
2022-05-06 22:35:57,887 on stmt: bool32 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,887 on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,887 on stmt: branch $32pred, 34, 120
2022-05-06 22:35:57,887 ==== SSA block rewrite pass on 34
2022-05-06 22:35:57,887 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,887 on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-05-06 22:35:57,887 on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,888 find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-05-06 22:35:57,888 find_def_from_top label 34
2022-05-06 22:35:57,888 idom 26 from label 34
2022-05-06 22:35:57,888 find_def_from_bottom label 26
2022-05-06 22:35:57,888 find_def_from_top label 26
2022-05-06 22:35:57,888 insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 26
2022-05-06 22:35:57,888 find_def_from_bottom label 102
2022-05-06 22:35:57,888 incoming_def dest_index.1 = $114inplace_add.5
2022-05-06 22:35:57,888 find_def_from_bottom label 14
2022-05-06 22:35:57,888 incoming_def dest_index = dest_ndim - src_ndim
2022-05-06 22:35:57,889 replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2022-05-06 22:35:57,889 on stmt: $const52.7 = const(int, 1)
2022-05-06 22:35:57,889 on stmt: $54compare_op.8 = dest_dim_size != $const52.7
2022-05-06 22:35:57,889 on stmt: bool56 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,889 on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,889 on stmt: branch $56pred, 58, 86
2022-05-06 22:35:57,889 ==== SSA block rewrite pass on 58
2022-05-06 22:35:57,889 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,889 on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
2022-05-06 22:35:57,890 on stmt: bool64 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,890 on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,890 on stmt: branch $64pred, 66, 102
2022-05-06 22:35:57,890 ==== SSA block rewrite pass on 66
2022-05-06 22:35:57,890 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,891 on stmt: $const68.1 = const(int, 1)
2022-05-06 22:35:57,891 on stmt: $70compare_op.2 = src_dim_size != $const68.1
2022-05-06 22:35:57,891 on stmt: bool72 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,891 on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,892 on stmt: branch $72pred, 74, 102
2022-05-06 22:35:57,892 ==== SSA block rewrite pass on 74
2022-05-06 22:35:57,892 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,892 on stmt: $const76.1 = const(int, 1)
2022-05-06 22:35:57,892 on stmt: $78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,893 find_def var='dest_index' stmt=$78binary_add.2 = dest_index + $const76.1
2022-05-06 22:35:57,893 find_def_from_top label 74
2022-05-06 22:35:57,893 idom 66 from label 74
2022-05-06 22:35:57,893 find_def_from_bottom label 66
2022-05-06 22:35:57,893 find_def_from_top label 66
2022-05-06 22:35:57,894 idom 58 from label 66
2022-05-06 22:35:57,894 find_def_from_bottom label 58
2022-05-06 22:35:57,894 find_def_from_top label 58
2022-05-06 22:35:57,894 idom 34 from label 58
2022-05-06 22:35:57,894 find_def_from_bottom label 34
2022-05-06 22:35:57,894 find_def_from_top label 34
2022-05-06 22:35:57,894 idom 26 from label 34
2022-05-06 22:35:57,894 find_def_from_bottom label 26
2022-05-06 22:35:57,895 replaced with: $78binary_add.2 = dest_index.2 + $const76.1
2022-05-06 22:35:57,895 on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
2022-05-06 22:35:57,895 on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
2022-05-06 22:35:57,895 on stmt: return $82return_value.4
2022-05-06 22:35:57,895 ==== SSA block rewrite pass on 86
2022-05-06 22:35:57,895 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,895 on stmt: $const88.1 = const(int, 1)
2022-05-06 22:35:57,895 on stmt: $90compare_op.2 = src_dim_size != $const88.1
2022-05-06 22:35:57,895 on stmt: bool92 = global(bool: <class 'bool'>)
2022-05-06 22:35:57,896 on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
2022-05-06 22:35:57,896 on stmt: branch $92pred, 94, 102
2022-05-06 22:35:57,896 ==== SSA block rewrite pass on 94
2022-05-06 22:35:57,896 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,896 on stmt: dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,896 find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
2022-05-06 22:35:57,896 find_def_from_top label 94
2022-05-06 22:35:57,896 idom 86 from label 94
2022-05-06 22:35:57,896 find_def_from_bottom label 86
2022-05-06 22:35:57,896 find_def_from_top label 86
2022-05-06 22:35:57,897 idom 34 from label 86
2022-05-06 22:35:57,897 find_def_from_bottom label 34
2022-05-06 22:35:57,897 find_def_from_top label 34
2022-05-06 22:35:57,897 idom 26 from label 34
2022-05-06 22:35:57,897 find_def_from_bottom label 26
2022-05-06 22:35:57,897 replaced with: dest_shape[dest_index.2] = src_dim_size
2022-05-06 22:35:57,897 on stmt: jump 102
2022-05-06 22:35:57,897 ==== SSA block rewrite pass on 102
2022-05-06 22:35:57,897 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,897 on stmt: $const104.1 = const(int, 1)
2022-05-06 22:35:57,898 on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,898 on stmt: src_index.1 = $106inplace_add.2
2022-05-06 22:35:57,898 on stmt: $const112.4 = const(int, 1)
2022-05-06 22:35:57,898 on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,898 find_def var='dest_index' stmt=$114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,898 find_def_from_top label 102
2022-05-06 22:35:57,898 idom 34 from label 102
2022-05-06 22:35:57,898 find_def_from_bottom label 34
2022-05-06 22:35:57,898 find_def_from_top label 34
2022-05-06 22:35:57,898 idom 26 from label 34
2022-05-06 22:35:57,899 find_def_from_bottom label 26
2022-05-06 22:35:57,899 replaced with: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
2022-05-06 22:35:57,899 on stmt: dest_index.1 = $114inplace_add.5
2022-05-06 22:35:57,899 on stmt: jump 26
2022-05-06 22:35:57,899 ==== SSA block rewrite pass on 120
2022-05-06 22:35:57,899 Running <numba.core.ssa._FixSSAVars object at 0x0000021625E4C580>
2022-05-06 22:35:57,899 on stmt: $122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,899 find_def var='dest_index' stmt=$122return_value.1 = cast(value=dest_index)
2022-05-06 22:35:57,899 find_def_from_top label 120
2022-05-06 22:35:57,899 idom 26 from label 120
2022-05-06 22:35:57,900 find_def_from_bottom label 26
2022-05-06 22:35:57,900 replaced with: $122return_value.1 = cast(value=dest_index.2)
2022-05-06 22:35:57,900 on stmt: return $122return_value.1
2022-05-06 22:35:58,102 bytecode dump:
>          0	NOP(arg=None, lineno=359)
           2	LOAD_FAST(arg=0, lineno=359)
           4	LOAD_FAST(arg=1, lineno=359)
           6	BINARY_SUBTRACT(arg=None, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
2022-05-06 22:35:58,103 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:58,103 stack: []
2022-05-06 22:35:58,103 dispatch pc=0, inst=NOP(arg=None, lineno=359)
2022-05-06 22:35:58,103 stack []
2022-05-06 22:35:58,103 dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=359)
2022-05-06 22:35:58,103 stack []
2022-05-06 22:35:58,103 dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=359)
2022-05-06 22:35:58,103 stack ['$_84binary_subscr_36_12.0']
2022-05-06 22:35:58,104 dispatch pc=6, inst=BINARY_SUBTRACT(arg=None, lineno=1)
2022-05-06 22:35:58,104 stack ['$_84binary_subscr_36_12.0', '$_90binary_subscr_39_14.1']
2022-05-06 22:35:58,104 dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
2022-05-06 22:35:58,104 stack ['$6binary_subtract.2']
2022-05-06 22:35:58,104 end state. edges=[]
2022-05-06 22:35:58,104 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:58,104 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:58,104 defmap: {}
2022-05-06 22:35:58,104 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:58,105 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:58,105 keep phismap: {}
2022-05-06 22:35:58,105 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:58,105 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:58,105 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$_84binary_subscr_36_12.0'}), (4, {'res': '$_90binary_subscr_39_14.1'}), (6, {'lhs': '$_84binary_subscr_36_12.0', 'rhs': '$_90binary_subscr_39_14.1', 'res': '$6binary_subtract.2'}), (8, {'retval': '$6binary_subtract.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:58,106 label 0:
    _84binary_subscr_36_1 = arg(0, name=_84binary_subscr_36_1) ['_84binary_subscr_36_1']
    _90binary_subscr_39_1 = arg(1, name=_90binary_subscr_39_1) ['_90binary_subscr_39_1']
    $6binary_subtract.2 = _84binary_subscr_36_1 - _90binary_subscr_39_1 ['$6binary_subtract.2', '_84binary_subscr_36_1', '_90binary_subscr_39_1']
    $8return_value.3 = cast(value=$6binary_subtract.2) ['$6binary_subtract.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2022-05-06 22:35:58,109 ==== SSA block analysis pass on 0
2022-05-06 22:35:58,109 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021625F10970>
2022-05-06 22:35:58,109 on stmt: _84binary_subscr_36_1 = arg(0, name=_84binary_subscr_36_1)
2022-05-06 22:35:58,109 on stmt: _90binary_subscr_39_1 = arg(1, name=_90binary_subscr_39_1)
2022-05-06 22:35:58,109 on stmt: $6binary_subtract.2 = _84binary_subscr_36_1 - _90binary_subscr_39_1
2022-05-06 22:35:58,109 on stmt: $8return_value.3 = cast(value=$6binary_subtract.2)
2022-05-06 22:35:58,109 on stmt: return $8return_value.3
2022-05-06 22:35:58,110 defs defaultdict(<class 'list'>,
            {'$6binary_subtract.2': [<numba.core.ir.Assign object at 0x0000021625F14520>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x0000021625F14670>],
             '_84binary_subscr_36_1': [<numba.core.ir.Assign object at 0x0000021625F10100>],
             '_90binary_subscr_39_1': [<numba.core.ir.Assign object at 0x0000021625F10460>]})
2022-05-06 22:35:58,110 SSA violators set()
2022-05-06 22:35:58,780 bytecode dump:
>          0	NOP(arg=None, lineno=257)
           2	LOAD_FAST(arg=1, lineno=257)
           4	LOAD_ATTR(arg=0, lineno=257)
           6	LOAD_CONST(arg=1, lineno=257)
           8	LOAD_CONST(arg=2, lineno=257)
          10	BUILD_SLICE(arg=2, lineno=257)
          12	BINARY_SUBSCR(arg=None, lineno=257)
          14	UNPACK_SEQUENCE(arg=2, lineno=257)
          16	STORE_FAST(arg=5, lineno=257)
          18	STORE_FAST(arg=6, lineno=257)
          20	LOAD_FAST(arg=0, lineno=258)
          22	LOAD_ATTR(arg=0, lineno=258)
          24	LOAD_CONST(arg=3, lineno=258)
          26	BINARY_SUBSCR(arg=None, lineno=258)
          28	STORE_FAST(arg=7, lineno=258)
          30	LOAD_FAST(arg=1, lineno=259)
          32	LOAD_ATTR(arg=0, lineno=259)
          34	LOAD_CONST(arg=3, lineno=259)
          36	BINARY_SUBSCR(arg=None, lineno=259)
          38	STORE_FAST(arg=8, lineno=259)
          40	LOAD_GLOBAL(arg=1, lineno=260)
          42	LOAD_ATTR(arg=2, lineno=260)
          44	LOAD_FAST(arg=7, lineno=260)
          46	LOAD_FAST(arg=8, lineno=260)
          48	BUILD_TUPLE(arg=2, lineno=260)
          50	LOAD_GLOBAL(arg=1, lineno=260)
          52	LOAD_ATTR(arg=3, lineno=260)
          54	LOAD_CONST(arg=4, lineno=260)
          56	CALL_FUNCTION_KW(arg=2, lineno=260)
          58	STORE_FAST(arg=9, lineno=260)
          60	LOAD_CONST(arg=5, lineno=261)
          62	STORE_FAST(arg=10, lineno=261)
          64	LOAD_GLOBAL(arg=4, lineno=262)
          66	LOAD_FAST(arg=7, lineno=262)
          68	CALL_FUNCTION(arg=1, lineno=262)
          70	GET_ITER(arg=None, lineno=262)
>         72	FOR_ITER(arg=162, lineno=262)
          74	STORE_FAST(arg=11, lineno=262)
          76	LOAD_GLOBAL(arg=4, lineno=263)
          78	LOAD_FAST(arg=8, lineno=263)
          80	CALL_FUNCTION(arg=1, lineno=263)
          82	GET_ITER(arg=None, lineno=263)
>         84	FOR_ITER(arg=148, lineno=263)
          86	STORE_FAST(arg=12, lineno=263)
          88	LOAD_GLOBAL(arg=4, lineno=264)
          90	LOAD_FAST(arg=5, lineno=264)
          92	CALL_FUNCTION(arg=1, lineno=264)
          94	GET_ITER(arg=None, lineno=264)
>         96	FOR_ITER(arg=134, lineno=264)
          98	STORE_FAST(arg=13, lineno=264)
         100	LOAD_FAST(arg=13, lineno=265)
         102	LOAD_FAST(arg=4, lineno=265)
         104	LOAD_FAST(arg=12, lineno=265)
         106	BINARY_SUBSCR(arg=None, lineno=265)
         108	COMPARE_OP(arg=4, lineno=265)
         110	POP_JUMP_IF_FALSE(arg=116, lineno=265)
         112	POP_TOP(arg=None, lineno=266)
         114	JUMP_ABSOLUTE(arg=84, lineno=266)
>        116	LOAD_FAST(arg=0, lineno=268)
         118	LOAD_FAST(arg=11, lineno=268)
         120	LOAD_CONST(arg=3, lineno=268)
         122	BUILD_TUPLE(arg=2, lineno=268)
         124	BINARY_SUBSCR(arg=None, lineno=268)
         126	LOAD_FAST(arg=2, lineno=268)
         128	LOAD_FAST(arg=12, lineno=268)
         130	LOAD_FAST(arg=13, lineno=268)
         132	LOAD_CONST(arg=3, lineno=268)
         134	BUILD_TUPLE(arg=3, lineno=268)
         136	BINARY_SUBSCR(arg=None, lineno=268)
         138	BINARY_MULTIPLY(arg=None, lineno=268)
         140	LOAD_FAST(arg=0, lineno=269)
         142	LOAD_FAST(arg=11, lineno=269)
         144	LOAD_CONST(arg=1, lineno=269)
         146	BUILD_TUPLE(arg=2, lineno=269)
         148	BINARY_SUBSCR(arg=None, lineno=269)
         150	LOAD_FAST(arg=2, lineno=269)
         152	LOAD_FAST(arg=12, lineno=269)
         154	LOAD_FAST(arg=13, lineno=269)
         156	LOAD_CONST(arg=1, lineno=269)
         158	BUILD_TUPLE(arg=3, lineno=269)
         160	BINARY_SUBSCR(arg=None, lineno=269)
         162	BINARY_MULTIPLY(arg=None, lineno=269)
         164	BINARY_ADD(arg=None, lineno=268)
         166	LOAD_FAST(arg=0, lineno=270)
         168	LOAD_FAST(arg=11, lineno=270)
         170	LOAD_CONST(arg=6, lineno=270)
         172	BUILD_TUPLE(arg=2, lineno=270)
         174	BINARY_SUBSCR(arg=None, lineno=270)
         176	LOAD_FAST(arg=2, lineno=270)
         178	LOAD_FAST(arg=12, lineno=270)
         180	LOAD_FAST(arg=13, lineno=270)
         182	LOAD_CONST(arg=6, lineno=270)
         184	BUILD_TUPLE(arg=3, lineno=270)
         186	BINARY_SUBSCR(arg=None, lineno=270)
         188	BINARY_MULTIPLY(arg=None, lineno=270)
         190	BINARY_ADD(arg=None, lineno=268)
         192	LOAD_FAST(arg=3, lineno=271)
         194	LOAD_FAST(arg=12, lineno=271)
         196	LOAD_FAST(arg=13, lineno=271)
         198	BUILD_TUPLE(arg=2, lineno=271)
         200	BINARY_SUBSCR(arg=None, lineno=271)
         202	BINARY_ADD(arg=None, lineno=268)
         204	STORE_FAST(arg=10, lineno=267)
         206	LOAD_FAST(arg=10, lineno=273)
         208	LOAD_CONST(arg=3, lineno=273)
         210	COMPARE_OP(arg=5, lineno=273)
         212	POP_JUMP_IF_FALSE(arg=96, lineno=273)
         214	LOAD_CONST(arg=7, lineno=274)
         216	LOAD_FAST(arg=9, lineno=274)
         218	LOAD_FAST(arg=11, lineno=274)
         220	LOAD_FAST(arg=12, lineno=274)
         222	BUILD_TUPLE(arg=2, lineno=274)
         224	STORE_SUBSCR(arg=None, lineno=274)
         226	POP_TOP(arg=None, lineno=275)
         228	JUMP_ABSOLUTE(arg=84, lineno=275)
         230	JUMP_ABSOLUTE(arg=96, lineno=275)
>        232	JUMP_ABSOLUTE(arg=84, lineno=275)
>        234	JUMP_ABSOLUTE(arg=72, lineno=275)
>        236	LOAD_FAST(arg=9, lineno=276)
         238	RETURN_VALUE(arg=None, lineno=276)
2022-05-06 22:35:58,780 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:58,781 stack: []
2022-05-06 22:35:58,781 dispatch pc=0, inst=NOP(arg=None, lineno=257)
2022-05-06 22:35:58,781 stack []
2022-05-06 22:35:58,781 dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=257)
2022-05-06 22:35:58,781 stack []
2022-05-06 22:35:58,781 dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=257)
2022-05-06 22:35:58,781 stack ['$polygon_surfaces2.0']
2022-05-06 22:35:58,781 dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=257)
2022-05-06 22:35:58,781 stack ['$4load_attr.1']
2022-05-06 22:35:58,782 dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=257)
2022-05-06 22:35:58,782 stack ['$4load_attr.1', '$const6.2']
2022-05-06 22:35:58,782 dispatch pc=10, inst=BUILD_SLICE(arg=2, lineno=257)
2022-05-06 22:35:58,782 stack ['$4load_attr.1', '$const6.2', '$const8.3']
2022-05-06 22:35:58,782 dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=257)
2022-05-06 22:35:58,782 stack ['$4load_attr.1', '$10build_slice.5']
2022-05-06 22:35:58,782 dispatch pc=14, inst=UNPACK_SEQUENCE(arg=2, lineno=257)
2022-05-06 22:35:58,782 stack ['$12binary_subscr.6']
2022-05-06 22:35:58,782 dispatch pc=16, inst=STORE_FAST(arg=5, lineno=257)
2022-05-06 22:35:58,783 stack ['$14unpack_sequence.8', '$14unpack_sequence.7']
2022-05-06 22:35:58,783 dispatch pc=18, inst=STORE_FAST(arg=6, lineno=257)
2022-05-06 22:35:58,783 stack ['$14unpack_sequence.8']
2022-05-06 22:35:58,783 dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=258)
2022-05-06 22:35:58,783 stack []
2022-05-06 22:35:58,784 dispatch pc=22, inst=LOAD_ATTR(arg=0, lineno=258)
2022-05-06 22:35:58,784 stack ['$points20.10']
2022-05-06 22:35:58,784 dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=258)
2022-05-06 22:35:58,784 stack ['$22load_attr.11']
2022-05-06 22:35:58,784 dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=258)
2022-05-06 22:35:58,784 stack ['$22load_attr.11', '$const24.12']
2022-05-06 22:35:58,784 dispatch pc=28, inst=STORE_FAST(arg=7, lineno=258)
2022-05-06 22:35:58,784 stack ['$26binary_subscr.13']
2022-05-06 22:35:58,784 dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=259)
2022-05-06 22:35:58,785 stack []
2022-05-06 22:35:58,785 dispatch pc=32, inst=LOAD_ATTR(arg=0, lineno=259)
2022-05-06 22:35:58,785 stack ['$polygon_surfaces30.14']
2022-05-06 22:35:58,785 dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=259)
2022-05-06 22:35:58,785 stack ['$32load_attr.15']
2022-05-06 22:35:58,785 dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=259)
2022-05-06 22:35:58,785 stack ['$32load_attr.15', '$const34.16']
2022-05-06 22:35:58,785 dispatch pc=38, inst=STORE_FAST(arg=8, lineno=259)
2022-05-06 22:35:58,785 stack ['$36binary_subscr.17']
2022-05-06 22:35:58,786 dispatch pc=40, inst=LOAD_GLOBAL(arg=1, lineno=260)
2022-05-06 22:35:58,786 stack []
2022-05-06 22:35:58,786 dispatch pc=42, inst=LOAD_ATTR(arg=2, lineno=260)
2022-05-06 22:35:58,786 stack ['$40load_global.18']
2022-05-06 22:35:58,786 dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=260)
2022-05-06 22:35:58,786 stack ['$42load_attr.19']
2022-05-06 22:35:58,786 dispatch pc=46, inst=LOAD_FAST(arg=8, lineno=260)
2022-05-06 22:35:58,786 stack ['$42load_attr.19', '$num_points44.20']
2022-05-06 22:35:58,786 dispatch pc=48, inst=BUILD_TUPLE(arg=2, lineno=260)
2022-05-06 22:35:58,787 stack ['$42load_attr.19', '$num_points44.20', '$num_polygons46.21']
2022-05-06 22:35:58,787 dispatch pc=50, inst=LOAD_GLOBAL(arg=1, lineno=260)
2022-05-06 22:35:58,787 stack ['$42load_attr.19', '$48build_tuple.22']
2022-05-06 22:35:58,787 dispatch pc=52, inst=LOAD_ATTR(arg=3, lineno=260)
2022-05-06 22:35:58,787 stack ['$42load_attr.19', '$48build_tuple.22', '$50load_global.23']
2022-05-06 22:35:58,787 dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=260)
2022-05-06 22:35:58,787 stack ['$42load_attr.19', '$48build_tuple.22', '$52load_attr.24']
2022-05-06 22:35:58,787 dispatch pc=56, inst=CALL_FUNCTION_KW(arg=2, lineno=260)
2022-05-06 22:35:58,787 stack ['$42load_attr.19', '$48build_tuple.22', '$52load_attr.24', '$const54.25']
2022-05-06 22:35:58,788 dispatch pc=58, inst=STORE_FAST(arg=9, lineno=260)
2022-05-06 22:35:58,788 stack ['$56call_function_kw.26']
2022-05-06 22:35:58,788 dispatch pc=60, inst=LOAD_CONST(arg=5, lineno=261)
2022-05-06 22:35:58,788 stack []
2022-05-06 22:35:58,788 dispatch pc=62, inst=STORE_FAST(arg=10, lineno=261)
2022-05-06 22:35:58,788 stack ['$const60.27']
2022-05-06 22:35:58,788 dispatch pc=64, inst=LOAD_GLOBAL(arg=4, lineno=262)
2022-05-06 22:35:58,788 stack []
2022-05-06 22:35:58,789 dispatch pc=66, inst=LOAD_FAST(arg=7, lineno=262)
2022-05-06 22:35:58,789 stack ['$64load_global.28']
2022-05-06 22:35:58,789 dispatch pc=68, inst=CALL_FUNCTION(arg=1, lineno=262)
2022-05-06 22:35:58,789 stack ['$64load_global.28', '$num_points66.29']
2022-05-06 22:35:58,789 dispatch pc=70, inst=GET_ITER(arg=None, lineno=262)
2022-05-06 22:35:58,789 stack ['$68call_function.30']
2022-05-06 22:35:58,789 end state. edges=[Edge(pc=72, stack=('$70get_iter.31',), blockstack=(), npush=0)]
2022-05-06 22:35:58,789 pending: deque([State(pc_initial=72 nstack_initial=1)])
2022-05-06 22:35:58,789 stack: ['$phi72.0']
2022-05-06 22:35:58,790 dispatch pc=72, inst=FOR_ITER(arg=162, lineno=262)
2022-05-06 22:35:58,790 stack ['$phi72.0']
2022-05-06 22:35:58,790 end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=('$phi72.0', '$72for_iter.2'), blockstack=(), npush=0)]
2022-05-06 22:35:58,790 pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=74 nstack_initial=2)])
2022-05-06 22:35:58,790 stack: []
2022-05-06 22:35:58,790 dispatch pc=236, inst=LOAD_FAST(arg=9, lineno=276)
2022-05-06 22:35:58,790 stack []
2022-05-06 22:35:58,791 dispatch pc=238, inst=RETURN_VALUE(arg=None, lineno=276)
2022-05-06 22:35:58,791 stack ['$ret236.0']
2022-05-06 22:35:58,791 end state. edges=[]
2022-05-06 22:35:58,791 pending: deque([State(pc_initial=74 nstack_initial=2)])
2022-05-06 22:35:58,791 stack: ['$phi74.0', '$phi74.1']
2022-05-06 22:35:58,791 dispatch pc=74, inst=STORE_FAST(arg=11, lineno=262)
2022-05-06 22:35:58,791 stack ['$phi74.0', '$phi74.1']
2022-05-06 22:35:58,791 dispatch pc=76, inst=LOAD_GLOBAL(arg=4, lineno=263)
2022-05-06 22:35:58,791 stack ['$phi74.0']
2022-05-06 22:35:58,792 dispatch pc=78, inst=LOAD_FAST(arg=8, lineno=263)
2022-05-06 22:35:58,792 stack ['$phi74.0', '$76load_global.2']
2022-05-06 22:35:58,792 dispatch pc=80, inst=CALL_FUNCTION(arg=1, lineno=263)
2022-05-06 22:35:58,792 stack ['$phi74.0', '$76load_global.2', '$num_polygons78.3']
2022-05-06 22:35:58,792 dispatch pc=82, inst=GET_ITER(arg=None, lineno=263)
2022-05-06 22:35:58,792 stack ['$phi74.0', '$80call_function.4']
2022-05-06 22:35:58,792 end state. edges=[Edge(pc=84, stack=('$phi74.0', '$82get_iter.5'), blockstack=(), npush=0)]
2022-05-06 22:35:58,792 pending: deque([State(pc_initial=84 nstack_initial=2)])
2022-05-06 22:35:58,792 stack: ['$phi84.0', '$phi84.1']
2022-05-06 22:35:58,792 dispatch pc=84, inst=FOR_ITER(arg=148, lineno=263)
2022-05-06 22:35:58,793 stack ['$phi84.0', '$phi84.1']
2022-05-06 22:35:58,793 end state. edges=[Edge(pc=234, stack=('$phi84.0',), blockstack=(), npush=0), Edge(pc=86, stack=('$phi84.0', '$phi84.1', '$84for_iter.3'), blockstack=(), npush=0)]
2022-05-06 22:35:58,793 pending: deque([State(pc_initial=234 nstack_initial=1), State(pc_initial=86 nstack_initial=3)])
2022-05-06 22:35:58,793 stack: ['$phi234.0']
2022-05-06 22:35:58,793 dispatch pc=234, inst=JUMP_ABSOLUTE(arg=72, lineno=275)
2022-05-06 22:35:58,793 stack ['$phi234.0']
2022-05-06 22:35:58,793 end state. edges=[Edge(pc=72, stack=('$phi234.0',), blockstack=(), npush=0)]
2022-05-06 22:35:58,794 pending: deque([State(pc_initial=86 nstack_initial=3), State(pc_initial=72 nstack_initial=1)])
2022-05-06 22:35:58,794 stack: ['$phi86.0', '$phi86.1', '$phi86.2']
2022-05-06 22:35:58,794 dispatch pc=86, inst=STORE_FAST(arg=12, lineno=263)
2022-05-06 22:35:58,794 stack ['$phi86.0', '$phi86.1', '$phi86.2']
2022-05-06 22:35:58,794 dispatch pc=88, inst=LOAD_GLOBAL(arg=4, lineno=264)
2022-05-06 22:35:58,794 stack ['$phi86.0', '$phi86.1']
2022-05-06 22:35:58,794 dispatch pc=90, inst=LOAD_FAST(arg=5, lineno=264)
2022-05-06 22:35:58,794 stack ['$phi86.0', '$phi86.1', '$88load_global.3']
2022-05-06 22:35:58,794 dispatch pc=92, inst=CALL_FUNCTION(arg=1, lineno=264)
2022-05-06 22:35:58,794 stack ['$phi86.0', '$phi86.1', '$88load_global.3', '$max_num_surfaces90.4']
2022-05-06 22:35:58,795 dispatch pc=94, inst=GET_ITER(arg=None, lineno=264)
2022-05-06 22:35:58,795 stack ['$phi86.0', '$phi86.1', '$92call_function.5']
2022-05-06 22:35:58,795 end state. edges=[Edge(pc=96, stack=('$phi86.0', '$phi86.1', '$94get_iter.6'), blockstack=(), npush=0)]
2022-05-06 22:35:58,795 pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=96 nstack_initial=3)])
2022-05-06 22:35:58,795 pending: deque([State(pc_initial=96 nstack_initial=3)])
2022-05-06 22:35:58,796 stack: ['$phi96.0', '$phi96.1', '$phi96.2']
2022-05-06 22:35:58,796 dispatch pc=96, inst=FOR_ITER(arg=134, lineno=264)
2022-05-06 22:35:58,796 stack ['$phi96.0', '$phi96.1', '$phi96.2']
2022-05-06 22:35:58,796 end state. edges=[Edge(pc=232, stack=('$phi96.0', '$phi96.1'), blockstack=(), npush=0), Edge(pc=98, stack=('$phi96.0', '$phi96.1', '$phi96.2', '$96for_iter.4'), blockstack=(), npush=0)]
2022-05-06 22:35:58,796 pending: deque([State(pc_initial=232 nstack_initial=2), State(pc_initial=98 nstack_initial=4)])
2022-05-06 22:35:58,796 stack: ['$phi232.0', '$phi232.1']
2022-05-06 22:35:58,797 dispatch pc=232, inst=JUMP_ABSOLUTE(arg=84, lineno=275)
2022-05-06 22:35:58,797 stack ['$phi232.0', '$phi232.1']
2022-05-06 22:35:58,797 end state. edges=[Edge(pc=84, stack=('$phi232.0', '$phi232.1'), blockstack=(), npush=0)]
2022-05-06 22:35:58,797 pending: deque([State(pc_initial=98 nstack_initial=4), State(pc_initial=84 nstack_initial=2)])
2022-05-06 22:35:58,797 stack: ['$phi98.0', '$phi98.1', '$phi98.2', '$phi98.3']
2022-05-06 22:35:58,797 dispatch pc=98, inst=STORE_FAST(arg=13, lineno=264)
2022-05-06 22:35:58,798 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$phi98.3']
2022-05-06 22:35:58,798 dispatch pc=100, inst=LOAD_FAST(arg=13, lineno=265)
2022-05-06 22:35:58,798 stack ['$phi98.0', '$phi98.1', '$phi98.2']
2022-05-06 22:35:58,798 dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=265)
2022-05-06 22:35:58,798 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$k100.4']
2022-05-06 22:35:58,799 dispatch pc=104, inst=LOAD_FAST(arg=12, lineno=265)
2022-05-06 22:35:58,799 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$k100.4', '$num_surfaces102.5']
2022-05-06 22:35:58,799 dispatch pc=106, inst=BINARY_SUBSCR(arg=None, lineno=265)
2022-05-06 22:35:58,799 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$k100.4', '$num_surfaces102.5', '$j104.6']
2022-05-06 22:35:58,799 dispatch pc=108, inst=COMPARE_OP(arg=4, lineno=265)
2022-05-06 22:35:58,799 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$k100.4', '$106binary_subscr.7']
2022-05-06 22:35:58,800 dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=116, lineno=265)
2022-05-06 22:35:58,800 stack ['$phi98.0', '$phi98.1', '$phi98.2', '$108compare_op.8']
2022-05-06 22:35:58,800 end state. edges=[Edge(pc=112, stack=('$phi98.0', '$phi98.1', '$phi98.2'), blockstack=(), npush=0), Edge(pc=116, stack=('$phi98.0', '$phi98.1', '$phi98.2'), blockstack=(), npush=0)]
2022-05-06 22:35:58,800 pending: deque([State(pc_initial=84 nstack_initial=2), State(pc_initial=112 nstack_initial=3), State(pc_initial=116 nstack_initial=3)])
2022-05-06 22:35:58,800 pending: deque([State(pc_initial=112 nstack_initial=3), State(pc_initial=116 nstack_initial=3)])
2022-05-06 22:35:58,800 stack: ['$phi112.0', '$phi112.1', '$phi112.2']
2022-05-06 22:35:58,801 dispatch pc=112, inst=POP_TOP(arg=None, lineno=266)
2022-05-06 22:35:58,801 stack ['$phi112.0', '$phi112.1', '$phi112.2']
2022-05-06 22:35:58,801 dispatch pc=114, inst=JUMP_ABSOLUTE(arg=84, lineno=266)
2022-05-06 22:35:58,801 stack ['$phi112.0', '$phi112.1']
2022-05-06 22:35:58,801 end state. edges=[Edge(pc=84, stack=('$phi112.0', '$phi112.1'), blockstack=(), npush=0)]
2022-05-06 22:35:58,802 pending: deque([State(pc_initial=116 nstack_initial=3), State(pc_initial=84 nstack_initial=2)])
2022-05-06 22:35:58,802 stack: ['$phi116.0', '$phi116.1', '$phi116.2']
2022-05-06 22:35:58,802 dispatch pc=116, inst=LOAD_FAST(arg=0, lineno=268)
2022-05-06 22:35:58,802 stack ['$phi116.0', '$phi116.1', '$phi116.2']
2022-05-06 22:35:58,802 dispatch pc=118, inst=LOAD_FAST(arg=11, lineno=268)
2022-05-06 22:35:58,802 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$points116.3']
2022-05-06 22:35:58,803 dispatch pc=120, inst=LOAD_CONST(arg=3, lineno=268)
2022-05-06 22:35:58,803 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$points116.3', '$i118.4']
2022-05-06 22:35:58,803 dispatch pc=122, inst=BUILD_TUPLE(arg=2, lineno=268)
2022-05-06 22:35:58,803 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$points116.3', '$i118.4', '$const120.5']
2022-05-06 22:35:58,803 dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=268)
2022-05-06 22:35:58,803 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$points116.3', '$122build_tuple.6']
2022-05-06 22:35:58,804 dispatch pc=126, inst=LOAD_FAST(arg=2, lineno=268)
2022-05-06 22:35:58,804 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7']
2022-05-06 22:35:58,804 dispatch pc=128, inst=LOAD_FAST(arg=12, lineno=268)
2022-05-06 22:35:58,804 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$normal_vec126.8']
2022-05-06 22:35:58,805 dispatch pc=130, inst=LOAD_FAST(arg=13, lineno=268)
2022-05-06 22:35:58,805 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$normal_vec126.8', '$j128.9']
2022-05-06 22:35:58,805 dispatch pc=132, inst=LOAD_CONST(arg=3, lineno=268)
2022-05-06 22:35:58,805 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$normal_vec126.8', '$j128.9', '$k130.10']
2022-05-06 22:35:58,805 dispatch pc=134, inst=BUILD_TUPLE(arg=3, lineno=268)
2022-05-06 22:35:58,806 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$normal_vec126.8', '$j128.9', '$k130.10', '$const132.11']
2022-05-06 22:35:58,806 dispatch pc=136, inst=BINARY_SUBSCR(arg=None, lineno=268)
2022-05-06 22:35:58,806 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$normal_vec126.8', '$134build_tuple.12']
2022-05-06 22:35:58,806 dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=268)
2022-05-06 22:35:58,807 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$124binary_subscr.7', '$136binary_subscr.13']
2022-05-06 22:35:58,807 dispatch pc=140, inst=LOAD_FAST(arg=0, lineno=269)
2022-05-06 22:35:58,807 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14']
2022-05-06 22:35:58,807 dispatch pc=142, inst=LOAD_FAST(arg=11, lineno=269)
2022-05-06 22:35:58,807 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$points140.15']
2022-05-06 22:35:58,808 dispatch pc=144, inst=LOAD_CONST(arg=1, lineno=269)
2022-05-06 22:35:58,808 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$points140.15', '$i142.16']
2022-05-06 22:35:58,808 dispatch pc=146, inst=BUILD_TUPLE(arg=2, lineno=269)
2022-05-06 22:35:58,808 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$points140.15', '$i142.16', '$const144.17']
2022-05-06 22:35:58,809 dispatch pc=148, inst=BINARY_SUBSCR(arg=None, lineno=269)
2022-05-06 22:35:58,809 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$points140.15', '$146build_tuple.18']
2022-05-06 22:35:58,809 dispatch pc=150, inst=LOAD_FAST(arg=2, lineno=269)
2022-05-06 22:35:58,809 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19']
2022-05-06 22:35:58,809 dispatch pc=152, inst=LOAD_FAST(arg=12, lineno=269)
2022-05-06 22:35:58,810 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$normal_vec150.20']
2022-05-06 22:35:58,810 dispatch pc=154, inst=LOAD_FAST(arg=13, lineno=269)
2022-05-06 22:35:58,810 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$normal_vec150.20', '$j152.21']
2022-05-06 22:35:58,810 dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=269)
2022-05-06 22:35:58,811 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$normal_vec150.20', '$j152.21', '$k154.22']
2022-05-06 22:35:58,811 dispatch pc=158, inst=BUILD_TUPLE(arg=3, lineno=269)
2022-05-06 22:35:58,811 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$normal_vec150.20', '$j152.21', '$k154.22', '$const156.23']
2022-05-06 22:35:58,811 dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=269)
2022-05-06 22:35:58,811 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$normal_vec150.20', '$158build_tuple.24']
2022-05-06 22:35:58,812 dispatch pc=162, inst=BINARY_MULTIPLY(arg=None, lineno=269)
2022-05-06 22:35:58,812 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$148binary_subscr.19', '$160binary_subscr.25']
2022-05-06 22:35:58,812 dispatch pc=164, inst=BINARY_ADD(arg=None, lineno=268)
2022-05-06 22:35:58,812 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$138binary_multiply.14', '$162binary_multiply.26']
2022-05-06 22:35:58,813 dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=270)
2022-05-06 22:35:58,813 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27']
2022-05-06 22:35:58,813 dispatch pc=168, inst=LOAD_FAST(arg=11, lineno=270)
2022-05-06 22:35:58,813 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$points166.28']
2022-05-06 22:35:58,814 dispatch pc=170, inst=LOAD_CONST(arg=6, lineno=270)
2022-05-06 22:35:58,814 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$points166.28', '$i168.29']
2022-05-06 22:35:58,814 dispatch pc=172, inst=BUILD_TUPLE(arg=2, lineno=270)
2022-05-06 22:35:58,814 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$points166.28', '$i168.29', '$const170.30']
2022-05-06 22:35:58,814 dispatch pc=174, inst=BINARY_SUBSCR(arg=None, lineno=270)
2022-05-06 22:35:58,815 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$points166.28', '$172build_tuple.31']
2022-05-06 22:35:58,815 dispatch pc=176, inst=LOAD_FAST(arg=2, lineno=270)
2022-05-06 22:35:58,815 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32']
2022-05-06 22:35:58,815 dispatch pc=178, inst=LOAD_FAST(arg=12, lineno=270)
2022-05-06 22:35:58,815 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$normal_vec176.33']
2022-05-06 22:35:58,816 dispatch pc=180, inst=LOAD_FAST(arg=13, lineno=270)
2022-05-06 22:35:58,816 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$normal_vec176.33', '$j178.34']
2022-05-06 22:35:58,816 dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=270)
2022-05-06 22:35:58,816 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$normal_vec176.33', '$j178.34', '$k180.35']
2022-05-06 22:35:58,817 dispatch pc=184, inst=BUILD_TUPLE(arg=3, lineno=270)
2022-05-06 22:35:58,817 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$normal_vec176.33', '$j178.34', '$k180.35', '$const182.36']
2022-05-06 22:35:58,817 dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=270)
2022-05-06 22:35:58,817 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$normal_vec176.33', '$184build_tuple.37']
2022-05-06 22:35:58,817 dispatch pc=188, inst=BINARY_MULTIPLY(arg=None, lineno=270)
2022-05-06 22:35:58,818 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$174binary_subscr.32', '$186binary_subscr.38']
2022-05-06 22:35:58,818 dispatch pc=190, inst=BINARY_ADD(arg=None, lineno=268)
2022-05-06 22:35:58,818 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$164binary_add.27', '$188binary_multiply.39']
2022-05-06 22:35:58,818 dispatch pc=192, inst=LOAD_FAST(arg=3, lineno=271)
2022-05-06 22:35:58,819 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40']
2022-05-06 22:35:58,819 dispatch pc=194, inst=LOAD_FAST(arg=12, lineno=271)
2022-05-06 22:35:58,819 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40', '$d192.41']
2022-05-06 22:35:58,819 dispatch pc=196, inst=LOAD_FAST(arg=13, lineno=271)
2022-05-06 22:35:58,819 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40', '$d192.41', '$j194.42']
2022-05-06 22:35:58,820 dispatch pc=198, inst=BUILD_TUPLE(arg=2, lineno=271)
2022-05-06 22:35:58,820 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40', '$d192.41', '$j194.42', '$k196.43']
2022-05-06 22:35:58,820 dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=271)
2022-05-06 22:35:58,820 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40', '$d192.41', '$198build_tuple.44']
2022-05-06 22:35:58,821 dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=268)
2022-05-06 22:35:58,821 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$190binary_add.40', '$200binary_subscr.45']
2022-05-06 22:35:58,821 dispatch pc=204, inst=STORE_FAST(arg=10, lineno=267)
2022-05-06 22:35:58,821 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$202binary_add.46']
2022-05-06 22:35:58,821 dispatch pc=206, inst=LOAD_FAST(arg=10, lineno=273)
2022-05-06 22:35:58,822 stack ['$phi116.0', '$phi116.1', '$phi116.2']
2022-05-06 22:35:58,822 dispatch pc=208, inst=LOAD_CONST(arg=3, lineno=273)
2022-05-06 22:35:58,822 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$sign206.47']
2022-05-06 22:35:58,822 dispatch pc=210, inst=COMPARE_OP(arg=5, lineno=273)
2022-05-06 22:35:58,822 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$sign206.47', '$const208.48']
2022-05-06 22:35:58,823 dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=96, lineno=273)
2022-05-06 22:35:58,823 stack ['$phi116.0', '$phi116.1', '$phi116.2', '$210compare_op.49']
2022-05-06 22:35:58,823 end state. edges=[Edge(pc=214, stack=('$phi116.0', '$phi116.1', '$phi116.2'), blockstack=(), npush=0), Edge(pc=96, stack=('$phi116.0', '$phi116.1', '$phi116.2'), blockstack=(), npush=0)]
2022-05-06 22:35:58,823 pending: deque([State(pc_initial=84 nstack_initial=2), State(pc_initial=214 nstack_initial=3), State(pc_initial=96 nstack_initial=3)])
2022-05-06 22:35:58,824 pending: deque([State(pc_initial=214 nstack_initial=3), State(pc_initial=96 nstack_initial=3)])
2022-05-06 22:35:58,824 stack: ['$phi214.0', '$phi214.1', '$phi214.2']
2022-05-06 22:35:58,824 dispatch pc=214, inst=LOAD_CONST(arg=7, lineno=274)
2022-05-06 22:35:58,824 stack ['$phi214.0', '$phi214.1', '$phi214.2']
2022-05-06 22:35:58,825 dispatch pc=216, inst=LOAD_FAST(arg=9, lineno=274)
2022-05-06 22:35:58,825 stack ['$phi214.0', '$phi214.1', '$phi214.2', '$const214.3']
2022-05-06 22:35:58,825 dispatch pc=218, inst=LOAD_FAST(arg=11, lineno=274)
2022-05-06 22:35:58,825 stack ['$phi214.0', '$phi214.1', '$phi214.2', '$const214.3', '$ret216.4']
2022-05-06 22:35:58,825 dispatch pc=220, inst=LOAD_FAST(arg=12, lineno=274)
2022-05-06 22:35:58,826 stack ['$phi214.0', '$phi214.1', '$phi214.2', '$const214.3', '$ret216.4', '$i218.5']
2022-05-06 22:35:58,826 dispatch pc=222, inst=BUILD_TUPLE(arg=2, lineno=274)
2022-05-06 22:35:58,826 stack ['$phi214.0', '$phi214.1', '$phi214.2', '$const214.3', '$ret216.4', '$i218.5', '$j220.6']
2022-05-06 22:35:58,826 dispatch pc=224, inst=STORE_SUBSCR(arg=None, lineno=274)
2022-05-06 22:35:58,826 stack ['$phi214.0', '$phi214.1', '$phi214.2', '$const214.3', '$ret216.4', '$222build_tuple.7']
2022-05-06 22:35:58,827 dispatch pc=226, inst=POP_TOP(arg=None, lineno=275)
2022-05-06 22:35:58,827 stack ['$phi214.0', '$phi214.1', '$phi214.2']
2022-05-06 22:35:58,827 dispatch pc=228, inst=JUMP_ABSOLUTE(arg=84, lineno=275)
2022-05-06 22:35:58,827 stack ['$phi214.0', '$phi214.1']
2022-05-06 22:35:58,828 end state. edges=[Edge(pc=84, stack=('$phi214.0', '$phi214.1'), blockstack=(), npush=0)]
2022-05-06 22:35:58,828 pending: deque([State(pc_initial=96 nstack_initial=3), State(pc_initial=84 nstack_initial=2)])
2022-05-06 22:35:58,828 pending: deque([State(pc_initial=84 nstack_initial=2)])
2022-05-06 22:35:58,829 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:58,829 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=1): {'$phi72.0'},
             State(pc_initial=74 nstack_initial=2): {'$phi74.1'},
             State(pc_initial=84 nstack_initial=2): {'$phi84.1'},
             State(pc_initial=86 nstack_initial=3): {'$phi86.2'},
             State(pc_initial=96 nstack_initial=3): {'$phi96.2'},
             State(pc_initial=98 nstack_initial=4): {'$phi98.3'},
             State(pc_initial=112 nstack_initial=3): set(),
             State(pc_initial=116 nstack_initial=3): set(),
             State(pc_initial=214 nstack_initial=3): set(),
             State(pc_initial=232 nstack_initial=2): set(),
             State(pc_initial=234 nstack_initial=1): set(),
             State(pc_initial=236 nstack_initial=0): set()})
2022-05-06 22:35:58,831 defmap: {'$phi72.0': State(pc_initial=0 nstack_initial=0),
 '$phi74.1': State(pc_initial=72 nstack_initial=1),
 '$phi84.1': State(pc_initial=74 nstack_initial=2),
 '$phi86.2': State(pc_initial=84 nstack_initial=2),
 '$phi96.2': State(pc_initial=86 nstack_initial=3),
 '$phi98.3': State(pc_initial=96 nstack_initial=3)}
2022-05-06 22:35:58,831 phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi98.0', State(pc_initial=98 nstack_initial=4))},
             '$phi112.1': {('$phi98.1', State(pc_initial=98 nstack_initial=4))},
             '$phi112.2': {('$phi98.2', State(pc_initial=98 nstack_initial=4))},
             '$phi116.0': {('$phi98.0', State(pc_initial=98 nstack_initial=4))},
             '$phi116.1': {('$phi98.1', State(pc_initial=98 nstack_initial=4))},
             '$phi116.2': {('$phi98.2', State(pc_initial=98 nstack_initial=4))},
             '$phi214.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=3))},
             '$phi214.1': {('$phi116.1',
                            State(pc_initial=116 nstack_initial=3))},
             '$phi214.2': {('$phi116.2',
                            State(pc_initial=116 nstack_initial=3))},
             '$phi232.0': {('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi232.1': {('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi234.0': {('$phi84.0', State(pc_initial=84 nstack_initial=2))},
             '$phi72.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi234.0',
                           State(pc_initial=234 nstack_initial=1))},
             '$phi74.0': {('$phi72.0', State(pc_initial=72 nstack_initial=1))},
             '$phi74.1': {('$72for_iter.2',
                           State(pc_initial=72 nstack_initial=1))},
             '$phi84.0': {('$phi112.0', State(pc_initial=112 nstack_initial=3)),
                          ('$phi214.0', State(pc_initial=214 nstack_initial=3)),
                          ('$phi232.0', State(pc_initial=232 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi84.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2)),
                          ('$phi112.1', State(pc_initial=112 nstack_initial=3)),
                          ('$phi214.1', State(pc_initial=214 nstack_initial=3)),
                          ('$phi232.1',
                           State(pc_initial=232 nstack_initial=2))},
             '$phi86.0': {('$phi84.0', State(pc_initial=84 nstack_initial=2))},
             '$phi86.1': {('$phi84.1', State(pc_initial=84 nstack_initial=2))},
             '$phi86.2': {('$84for_iter.3',
                           State(pc_initial=84 nstack_initial=2))},
             '$phi96.0': {('$phi116.0', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.0', State(pc_initial=86 nstack_initial=3))},
             '$phi96.1': {('$phi116.1', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.1', State(pc_initial=86 nstack_initial=3))},
             '$phi96.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3)),
                          ('$phi116.2',
                           State(pc_initial=116 nstack_initial=3))},
             '$phi98.0': {('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi98.1': {('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi98.2': {('$phi96.2', State(pc_initial=96 nstack_initial=3))},
             '$phi98.3': {('$96for_iter.4',
                           State(pc_initial=96 nstack_initial=3))}})
2022-05-06 22:35:58,836 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi112.1': {('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi112.2': {('$phi96.2', State(pc_initial=96 nstack_initial=3))},
             '$phi116.0': {('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi116.1': {('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi116.2': {('$phi96.2', State(pc_initial=96 nstack_initial=3))},
             '$phi214.0': {('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi214.1': {('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi214.2': {('$phi96.2', State(pc_initial=96 nstack_initial=3))},
             '$phi232.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=3)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=3))},
             '$phi232.1': {('$phi116.1',
                            State(pc_initial=116 nstack_initial=3)),
                           ('$phi86.1', State(pc_initial=86 nstack_initial=3))},
             '$phi234.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=3)),
                           ('$phi214.0',
                            State(pc_initial=214 nstack_initial=3)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi72.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi112.0', State(pc_initial=112 nstack_initial=3)),
                          ('$phi214.0', State(pc_initial=214 nstack_initial=3)),
                          ('$phi232.0', State(pc_initial=232 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi74.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi112.0', State(pc_initial=112 nstack_initial=3)),
                          ('$phi214.0', State(pc_initial=214 nstack_initial=3)),
                          ('$phi232.0', State(pc_initial=232 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi74.1': {('$72for_iter.2',
                           State(pc_initial=72 nstack_initial=1))},
             '$phi84.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi116.0', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.0', State(pc_initial=86 nstack_initial=3)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi84.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2)),
                          ('$phi116.1', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.1', State(pc_initial=86 nstack_initial=3)),
                          ('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi86.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi116.0', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.0', State(pc_initial=86 nstack_initial=3)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi86.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2)),
                          ('$phi116.1', State(pc_initial=116 nstack_initial=3)),
                          ('$phi86.1', State(pc_initial=86 nstack_initial=3)),
                          ('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi86.2': {('$84for_iter.3',
                           State(pc_initial=84 nstack_initial=2))},
             '$phi96.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=3))},
             '$phi96.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2)),
                          ('$phi96.1', State(pc_initial=96 nstack_initial=3))},
             '$phi96.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3)),
                          ('$phi96.2', State(pc_initial=96 nstack_initial=3))},
             '$phi98.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi98.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3))},
             '$phi98.3': {('$96for_iter.4',
                           State(pc_initial=96 nstack_initial=3))}})
2022-05-06 22:35:58,840 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi112.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi116.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi116.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi116.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi214.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi214.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi214.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi232.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi234.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$72for_iter.2',
                           State(pc_initial=72 nstack_initial=1))},
             '$phi84.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi86.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi86.2': {('$84for_iter.3',
                           State(pc_initial=84 nstack_initial=2))},
             '$phi96.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi96.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi96.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3))},
             '$phi98.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi98.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3))},
             '$phi98.3': {('$96for_iter.4',
                           State(pc_initial=96 nstack_initial=3))}})
2022-05-06 22:35:58,842 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi112.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi116.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi116.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi116.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi214.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi214.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi214.2': {('$94get_iter.6',
                            State(pc_initial=86 nstack_initial=3))},
             '$phi232.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$82get_iter.5',
                            State(pc_initial=74 nstack_initial=2))},
             '$phi234.0': {('$70get_iter.31',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$72for_iter.2',
                           State(pc_initial=72 nstack_initial=1))},
             '$phi84.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi86.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi86.2': {('$84for_iter.3',
                           State(pc_initial=84 nstack_initial=2))},
             '$phi96.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi96.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi96.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3))},
             '$phi98.0': {('$70get_iter.31',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$82get_iter.5',
                           State(pc_initial=74 nstack_initial=2))},
             '$phi98.2': {('$94get_iter.6',
                           State(pc_initial=86 nstack_initial=3))},
             '$phi98.3': {('$96for_iter.4',
                           State(pc_initial=96 nstack_initial=3))}})
2022-05-06 22:35:58,845 keep phismap: {'$phi72.0': {('$70get_iter.31', State(pc_initial=0 nstack_initial=0))},
 '$phi74.1': {('$72for_iter.2', State(pc_initial=72 nstack_initial=1))},
 '$phi84.1': {('$82get_iter.5', State(pc_initial=74 nstack_initial=2))},
 '$phi86.2': {('$84for_iter.3', State(pc_initial=84 nstack_initial=2))},
 '$phi96.2': {('$94get_iter.6', State(pc_initial=86 nstack_initial=3))},
 '$phi98.3': {('$96for_iter.4', State(pc_initial=96 nstack_initial=3))}}
2022-05-06 22:35:58,845 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi72.0': '$70get_iter.31'},
             State(pc_initial=72 nstack_initial=1): {'$phi74.1': '$72for_iter.2'},
             State(pc_initial=74 nstack_initial=2): {'$phi84.1': '$82get_iter.5'},
             State(pc_initial=84 nstack_initial=2): {'$phi86.2': '$84for_iter.3'},
             State(pc_initial=86 nstack_initial=3): {'$phi96.2': '$94get_iter.6'},
             State(pc_initial=96 nstack_initial=3): {'$phi98.3': '$96for_iter.4'}})
2022-05-06 22:35:58,846 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:58,846 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$polygon_surfaces2.0'}), (4, {'item': '$polygon_surfaces2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'res': '$const8.3'}), (10, {'start': '$const6.2', 'stop': '$const8.3', 'step': None, 'res': '$10build_slice.5', 'slicevar': '$10build_slice.4'}), (12, {'index': '$10build_slice.5', 'target': '$4load_attr.1', 'res': '$12binary_subscr.6'}), (14, {'iterable': '$12binary_subscr.6', 'stores': ['$14unpack_sequence.7', '$14unpack_sequence.8'], 'tupleobj': '$14unpack_sequence.9'}), (16, {'value': '$14unpack_sequence.7'}), (18, {'value': '$14unpack_sequence.8'}), (20, {'res': '$points20.10'}), (22, {'item': '$points20.10', 'res': '$22load_attr.11'}), (24, {'res': '$const24.12'}), (26, {'index': '$const24.12', 'target': '$22load_attr.11', 'res': '$26binary_subscr.13'}), (28, {'value': '$26binary_subscr.13'}), (30, {'res': '$polygon_surfaces30.14'}), (32, {'item': '$polygon_surfaces30.14', 'res': '$32load_attr.15'}), (34, {'res': '$const34.16'}), (36, {'index': '$const34.16', 'target': '$32load_attr.15', 'res': '$36binary_subscr.17'}), (38, {'value': '$36binary_subscr.17'}), (40, {'res': '$40load_global.18'}), (42, {'item': '$40load_global.18', 'res': '$42load_attr.19'}), (44, {'res': '$num_points44.20'}), (46, {'res': '$num_polygons46.21'}), (48, {'items': ['$num_points44.20', '$num_polygons46.21'], 'res': '$48build_tuple.22'}), (50, {'res': '$50load_global.23'}), (52, {'item': '$50load_global.23', 'res': '$52load_attr.24'}), (54, {'res': '$const54.25'}), (56, {'func': '$42load_attr.19', 'args': ['$48build_tuple.22', '$52load_attr.24'], 'names': '$const54.25', 'res': '$56call_function_kw.26'}), (58, {'value': '$56call_function_kw.26'}), (60, {'res': '$const60.27'}), (62, {'value': '$const60.27'}), (64, {'res': '$64load_global.28'}), (66, {'res': '$num_points66.29'}), (68, {'func': '$64load_global.28', 'args': ['$num_points66.29'], 'res': '$68call_function.30'}), (70, {'value': '$68call_function.30', 'res': '$70get_iter.31'})), outgoing_phis={'$phi72.0': '$70get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$70get_iter.31',)})
2022-05-06 22:35:58,846 block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'iterator': '$phi72.0', 'pair': '$72for_iter.1', 'indval': '$72for_iter.2', 'pred': '$72for_iter.3'}),), outgoing_phis={'$phi74.1': '$72for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: (), 74: ('$phi72.0', '$72for_iter.2')})
2022-05-06 22:35:58,846 block_infos State(pc_initial=74 nstack_initial=2):
AdaptBlockInfo(insts=((74, {'value': '$phi74.1'}), (76, {'res': '$76load_global.2'}), (78, {'res': '$num_polygons78.3'}), (80, {'func': '$76load_global.2', 'args': ['$num_polygons78.3'], 'res': '$80call_function.4'}), (82, {'value': '$80call_function.4', 'res': '$82get_iter.5'})), outgoing_phis={'$phi84.1': '$82get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi74.0', '$82get_iter.5')})
2022-05-06 22:35:58,846 block_infos State(pc_initial=84 nstack_initial=2):
AdaptBlockInfo(insts=((84, {'iterator': '$phi84.1', 'pair': '$84for_iter.2', 'indval': '$84for_iter.3', 'pred': '$84for_iter.4'}),), outgoing_phis={'$phi86.2': '$84for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={234: ('$phi84.0',), 86: ('$phi84.0', '$phi84.1', '$84for_iter.3')})
2022-05-06 22:35:58,846 block_infos State(pc_initial=86 nstack_initial=3):
AdaptBlockInfo(insts=((86, {'value': '$phi86.2'}), (88, {'res': '$88load_global.3'}), (90, {'res': '$max_num_surfaces90.4'}), (92, {'func': '$88load_global.3', 'args': ['$max_num_surfaces90.4'], 'res': '$92call_function.5'}), (94, {'value': '$92call_function.5', 'res': '$94get_iter.6'})), outgoing_phis={'$phi96.2': '$94get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ('$phi86.0', '$phi86.1', '$94get_iter.6')})
2022-05-06 22:35:58,846 block_infos State(pc_initial=96 nstack_initial=3):
AdaptBlockInfo(insts=((96, {'iterator': '$phi96.2', 'pair': '$96for_iter.3', 'indval': '$96for_iter.4', 'pred': '$96for_iter.5'}),), outgoing_phis={'$phi98.3': '$96for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={232: ('$phi96.0', '$phi96.1'), 98: ('$phi96.0', '$phi96.1', '$phi96.2', '$96for_iter.4')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=98 nstack_initial=4):
AdaptBlockInfo(insts=((98, {'value': '$phi98.3'}), (100, {'res': '$k100.4'}), (102, {'res': '$num_surfaces102.5'}), (104, {'res': '$j104.6'}), (106, {'index': '$j104.6', 'target': '$num_surfaces102.5', 'res': '$106binary_subscr.7'}), (108, {'lhs': '$k100.4', 'rhs': '$106binary_subscr.7', 'res': '$108compare_op.8'}), (110, {'pred': '$108compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$phi98.0', '$phi98.1', '$phi98.2'), 116: ('$phi98.0', '$phi98.1', '$phi98.2')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=112 nstack_initial=3):
AdaptBlockInfo(insts=((114, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi112.0', '$phi112.1')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=116 nstack_initial=3):
AdaptBlockInfo(insts=((116, {'res': '$points116.3'}), (118, {'res': '$i118.4'}), (120, {'res': '$const120.5'}), (122, {'items': ['$i118.4', '$const120.5'], 'res': '$122build_tuple.6'}), (124, {'index': '$122build_tuple.6', 'target': '$points116.3', 'res': '$124binary_subscr.7'}), (126, {'res': '$normal_vec126.8'}), (128, {'res': '$j128.9'}), (130, {'res': '$k130.10'}), (132, {'res': '$const132.11'}), (134, {'items': ['$j128.9', '$k130.10', '$const132.11'], 'res': '$134build_tuple.12'}), (136, {'index': '$134build_tuple.12', 'target': '$normal_vec126.8', 'res': '$136binary_subscr.13'}), (138, {'lhs': '$124binary_subscr.7', 'rhs': '$136binary_subscr.13', 'res': '$138binary_multiply.14'}), (140, {'res': '$points140.15'}), (142, {'res': '$i142.16'}), (144, {'res': '$const144.17'}), (146, {'items': ['$i142.16', '$const144.17'], 'res': '$146build_tuple.18'}), (148, {'index': '$146build_tuple.18', 'target': '$points140.15', 'res': '$148binary_subscr.19'}), (150, {'res': '$normal_vec150.20'}), (152, {'res': '$j152.21'}), (154, {'res': '$k154.22'}), (156, {'res': '$const156.23'}), (158, {'items': ['$j152.21', '$k154.22', '$const156.23'], 'res': '$158build_tuple.24'}), (160, {'index': '$158build_tuple.24', 'target': '$normal_vec150.20', 'res': '$160binary_subscr.25'}), (162, {'lhs': '$148binary_subscr.19', 'rhs': '$160binary_subscr.25', 'res': '$162binary_multiply.26'}), (164, {'lhs': '$138binary_multiply.14', 'rhs': '$162binary_multiply.26', 'res': '$164binary_add.27'}), (166, {'res': '$points166.28'}), (168, {'res': '$i168.29'}), (170, {'res': '$const170.30'}), (172, {'items': ['$i168.29', '$const170.30'], 'res': '$172build_tuple.31'}), (174, {'index': '$172build_tuple.31', 'target': '$points166.28', 'res': '$174binary_subscr.32'}), (176, {'res': '$normal_vec176.33'}), (178, {'res': '$j178.34'}), (180, {'res': '$k180.35'}), (182, {'res': '$const182.36'}), (184, {'items': ['$j178.34', '$k180.35', '$const182.36'], 'res': '$184build_tuple.37'}), (186, {'index': '$184build_tuple.37', 'target': '$normal_vec176.33', 'res': '$186binary_subscr.38'}), (188, {'lhs': '$174binary_subscr.32', 'rhs': '$186binary_subscr.38', 'res': '$188binary_multiply.39'}), (190, {'lhs': '$164binary_add.27', 'rhs': '$188binary_multiply.39', 'res': '$190binary_add.40'}), (192, {'res': '$d192.41'}), (194, {'res': '$j194.42'}), (196, {'res': '$k196.43'}), (198, {'items': ['$j194.42', '$k196.43'], 'res': '$198build_tuple.44'}), (200, {'index': '$198build_tuple.44', 'target': '$d192.41', 'res': '$200binary_subscr.45'}), (202, {'lhs': '$190binary_add.40', 'rhs': '$200binary_subscr.45', 'res': '$202binary_add.46'}), (204, {'value': '$202binary_add.46'}), (206, {'res': '$sign206.47'}), (208, {'res': '$const208.48'}), (210, {'lhs': '$sign206.47', 'rhs': '$const208.48', 'res': '$210compare_op.49'}), (212, {'pred': '$210compare_op.49'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: ('$phi116.0', '$phi116.1', '$phi116.2'), 96: ('$phi116.0', '$phi116.1', '$phi116.2')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=214 nstack_initial=3):
AdaptBlockInfo(insts=((214, {'res': '$const214.3'}), (216, {'res': '$ret216.4'}), (218, {'res': '$i218.5'}), (220, {'res': '$j220.6'}), (222, {'items': ['$i218.5', '$j220.6'], 'res': '$222build_tuple.7'}), (224, {'target': '$ret216.4', 'index': '$222build_tuple.7', 'value': '$const214.3'}), (228, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi214.0', '$phi214.1')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi232.0', '$phi232.1')})
2022-05-06 22:35:58,847 block_infos State(pc_initial=234 nstack_initial=1):
AdaptBlockInfo(insts=((234, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi234.0',)})
2022-05-06 22:35:58,847 block_infos State(pc_initial=236 nstack_initial=0):
AdaptBlockInfo(insts=((236, {'res': '$ret236.0'}), (238, {'retval': '$ret236.0', 'castval': '$238return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:58,856 label 0:
    points = arg(0, name=points)             ['points']
    polygon_surfaces = arg(1, name=polygon_surfaces) ['polygon_surfaces']
    normal_vec = arg(2, name=normal_vec)     ['normal_vec']
    d = arg(3, name=d)                       ['d']
    num_surfaces = arg(4, name=num_surfaces) ['num_surfaces']
    $4load_attr.1 = getattr(value=polygon_surfaces, attr=shape) ['$4load_attr.1', 'polygon_surfaces']
    $const6.2 = const(int, 1)                ['$const6.2']
    $const8.3 = const(int, 3)                ['$const8.3']
    $10build_slice.4 = global(slice: <class 'slice'>) ['$10build_slice.4']
    $10build_slice.5 = call $10build_slice.4($const6.2, $const8.3, func=$10build_slice.4, args=(Var($const6.2, geometry.py:257), Var($const8.3, geometry.py:257)), kws=(), vararg=None, target=None) ['$10build_slice.4', '$10build_slice.5', '$const6.2', '$const8.3']
    $12binary_subscr.6 = getitem(value=$4load_attr.1, index=$10build_slice.5, fn=<built-in function getitem>) ['$10build_slice.5', '$12binary_subscr.6', '$4load_attr.1']
    $14unpack_sequence.9 = exhaust_iter(value=$12binary_subscr.6, count=2) ['$12binary_subscr.6', '$14unpack_sequence.9']
    $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.9, index=0, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.7', '$14unpack_sequence.9']
    $14unpack_sequence.8 = static_getitem(value=$14unpack_sequence.9, index=1, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.8', '$14unpack_sequence.9']
    max_num_surfaces = $14unpack_sequence.7  ['$14unpack_sequence.7', 'max_num_surfaces']
    max_num_points_of_surface = $14unpack_sequence.8 ['$14unpack_sequence.8', 'max_num_points_of_surface']
    $22load_attr.11 = getattr(value=points, attr=shape) ['$22load_attr.11', 'points']
    $const24.12 = const(int, 0)              ['$const24.12']
    num_points = getitem(value=$22load_attr.11, index=$const24.12, fn=<built-in function getitem>) ['$22load_attr.11', '$const24.12', 'num_points']
    $32load_attr.15 = getattr(value=polygon_surfaces, attr=shape) ['$32load_attr.15', 'polygon_surfaces']
    $const34.16 = const(int, 0)              ['$const34.16']
    num_polygons = getitem(value=$32load_attr.15, index=$const34.16, fn=<built-in function getitem>) ['$32load_attr.15', '$const34.16', 'num_polygons']
    $40load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$40load_global.18']
    $42load_attr.19 = getattr(value=$40load_global.18, attr=ones) ['$40load_global.18', '$42load_attr.19']
    $48build_tuple.22 = build_tuple(items=[Var(num_points, geometry.py:258), Var(num_polygons, geometry.py:259)]) ['$48build_tuple.22', 'num_points', 'num_polygons']
    $50load_global.23 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$50load_global.23']
    $52load_attr.24 = getattr(value=$50load_global.23, attr=bool_) ['$50load_global.23', '$52load_attr.24']
    ret = call $42load_attr.19($48build_tuple.22, func=$42load_attr.19, args=[Var($48build_tuple.22, geometry.py:260)], kws=[('dtype', Var($52load_attr.24, geometry.py:260))], vararg=None, target=None) ['$42load_attr.19', '$48build_tuple.22', '$52load_attr.24', 'ret']
    sign = const(float, 0.0)                 ['sign']
    $64load_global.28 = global(range: <class 'range'>) ['$64load_global.28']
    $68call_function.30 = call $64load_global.28(num_points, func=$64load_global.28, args=[Var(num_points, geometry.py:258)], kws=(), vararg=None, target=None) ['$64load_global.28', '$68call_function.30', 'num_points']
    $70get_iter.31 = getiter(value=$68call_function.30) ['$68call_function.30', '$70get_iter.31']
    $phi72.0 = $70get_iter.31                ['$70get_iter.31', '$phi72.0']
    jump 72                                  []
label 72:
    $72for_iter.1 = iternext(value=$phi72.0) ['$72for_iter.1', '$phi72.0']
    $72for_iter.2 = pair_first(value=$72for_iter.1) ['$72for_iter.1', '$72for_iter.2']
    $72for_iter.3 = pair_second(value=$72for_iter.1) ['$72for_iter.1', '$72for_iter.3']
    $phi74.1 = $72for_iter.2                 ['$72for_iter.2', '$phi74.1']
    branch $72for_iter.3, 74, 236            ['$72for_iter.3']
label 74:
    i = $phi74.1                             ['$phi74.1', 'i']
    $76load_global.2 = global(range: <class 'range'>) ['$76load_global.2']
    $80call_function.4 = call $76load_global.2(num_polygons, func=$76load_global.2, args=[Var(num_polygons, geometry.py:259)], kws=(), vararg=None, target=None) ['$76load_global.2', '$80call_function.4', 'num_polygons']
    $82get_iter.5 = getiter(value=$80call_function.4) ['$80call_function.4', '$82get_iter.5']
    $phi84.1 = $82get_iter.5                 ['$82get_iter.5', '$phi84.1']
    jump 84                                  []
label 84:
    $84for_iter.2 = iternext(value=$phi84.1) ['$84for_iter.2', '$phi84.1']
    $84for_iter.3 = pair_first(value=$84for_iter.2) ['$84for_iter.2', '$84for_iter.3']
    $84for_iter.4 = pair_second(value=$84for_iter.2) ['$84for_iter.2', '$84for_iter.4']
    $phi86.2 = $84for_iter.3                 ['$84for_iter.3', '$phi86.2']
    branch $84for_iter.4, 86, 234            ['$84for_iter.4']
label 86:
    j = $phi86.2                             ['$phi86.2', 'j']
    $88load_global.3 = global(range: <class 'range'>) ['$88load_global.3']
    $92call_function.5 = call $88load_global.3(max_num_surfaces, func=$88load_global.3, args=[Var(max_num_surfaces, geometry.py:257)], kws=(), vararg=None, target=None) ['$88load_global.3', '$92call_function.5', 'max_num_surfaces']
    $94get_iter.6 = getiter(value=$92call_function.5) ['$92call_function.5', '$94get_iter.6']
    $phi96.2 = $94get_iter.6                 ['$94get_iter.6', '$phi96.2']
    jump 96                                  []
label 96:
    $96for_iter.3 = iternext(value=$phi96.2) ['$96for_iter.3', '$phi96.2']
    $96for_iter.4 = pair_first(value=$96for_iter.3) ['$96for_iter.3', '$96for_iter.4']
    $96for_iter.5 = pair_second(value=$96for_iter.3) ['$96for_iter.3', '$96for_iter.5']
    $phi98.3 = $96for_iter.4                 ['$96for_iter.4', '$phi98.3']
    branch $96for_iter.5, 98, 232            ['$96for_iter.5']
label 98:
    k = $phi98.3                             ['$phi98.3', 'k']
    $106binary_subscr.7 = getitem(value=num_surfaces, index=j, fn=<built-in function getitem>) ['$106binary_subscr.7', 'j', 'num_surfaces']
    $108compare_op.8 = k > $106binary_subscr.7 ['$106binary_subscr.7', '$108compare_op.8', 'k']
    bool110 = global(bool: <class 'bool'>)   ['bool110']
    $110pred = call bool110($108compare_op.8, func=bool110, args=(Var($108compare_op.8, geometry.py:265),), kws=(), vararg=None, target=None) ['$108compare_op.8', '$110pred', 'bool110']
    branch $110pred, 112, 116                ['$110pred']
label 112:
    jump 84                                  []
label 116:
    $const120.5 = const(int, 0)              ['$const120.5']
    $122build_tuple.6 = build_tuple(items=[Var(i, geometry.py:262), Var($const120.5, geometry.py:268)]) ['$122build_tuple.6', '$const120.5', 'i']
    $124binary_subscr.7 = getitem(value=points, index=$122build_tuple.6, fn=<built-in function getitem>) ['$122build_tuple.6', '$124binary_subscr.7', 'points']
    $const132.11 = const(int, 0)             ['$const132.11']
    $134build_tuple.12 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const132.11, geometry.py:268)]) ['$134build_tuple.12', '$const132.11', 'j', 'k']
    $136binary_subscr.13 = getitem(value=normal_vec, index=$134build_tuple.12, fn=<built-in function getitem>) ['$134build_tuple.12', '$136binary_subscr.13', 'normal_vec']
    $138binary_multiply.14 = $124binary_subscr.7 * $136binary_subscr.13 ['$124binary_subscr.7', '$136binary_subscr.13', '$138binary_multiply.14']
    $const144.17 = const(int, 1)             ['$const144.17']
    $146build_tuple.18 = build_tuple(items=[Var(i, geometry.py:262), Var($const144.17, geometry.py:269)]) ['$146build_tuple.18', '$const144.17', 'i']
    $148binary_subscr.19 = getitem(value=points, index=$146build_tuple.18, fn=<built-in function getitem>) ['$146build_tuple.18', '$148binary_subscr.19', 'points']
    $const156.23 = const(int, 1)             ['$const156.23']
    $158build_tuple.24 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const156.23, geometry.py:269)]) ['$158build_tuple.24', '$const156.23', 'j', 'k']
    $160binary_subscr.25 = getitem(value=normal_vec, index=$158build_tuple.24, fn=<built-in function getitem>) ['$158build_tuple.24', '$160binary_subscr.25', 'normal_vec']
    $162binary_multiply.26 = $148binary_subscr.19 * $160binary_subscr.25 ['$148binary_subscr.19', '$160binary_subscr.25', '$162binary_multiply.26']
    $164binary_add.27 = $138binary_multiply.14 + $162binary_multiply.26 ['$138binary_multiply.14', '$162binary_multiply.26', '$164binary_add.27']
    $const170.30 = const(int, 2)             ['$const170.30']
    $172build_tuple.31 = build_tuple(items=[Var(i, geometry.py:262), Var($const170.30, geometry.py:270)]) ['$172build_tuple.31', '$const170.30', 'i']
    $174binary_subscr.32 = getitem(value=points, index=$172build_tuple.31, fn=<built-in function getitem>) ['$172build_tuple.31', '$174binary_subscr.32', 'points']
    $const182.36 = const(int, 2)             ['$const182.36']
    $184build_tuple.37 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const182.36, geometry.py:270)]) ['$184build_tuple.37', '$const182.36', 'j', 'k']
    $186binary_subscr.38 = getitem(value=normal_vec, index=$184build_tuple.37, fn=<built-in function getitem>) ['$184build_tuple.37', '$186binary_subscr.38', 'normal_vec']
    $188binary_multiply.39 = $174binary_subscr.32 * $186binary_subscr.38 ['$174binary_subscr.32', '$186binary_subscr.38', '$188binary_multiply.39']
    $190binary_add.40 = $164binary_add.27 + $188binary_multiply.39 ['$164binary_add.27', '$188binary_multiply.39', '$190binary_add.40']
    $198build_tuple.44 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264)]) ['$198build_tuple.44', 'j', 'k']
    $200binary_subscr.45 = getitem(value=d, index=$198build_tuple.44, fn=<built-in function getitem>) ['$198build_tuple.44', '$200binary_subscr.45', 'd']
    sign = $190binary_add.40 + $200binary_subscr.45 ['$190binary_add.40', '$200binary_subscr.45', 'sign']
    $const208.48 = const(int, 0)             ['$const208.48']
    $210compare_op.49 = sign >= $const208.48 ['$210compare_op.49', '$const208.48', 'sign']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($210compare_op.49, func=bool212, args=(Var($210compare_op.49, geometry.py:273),), kws=(), vararg=None, target=None) ['$210compare_op.49', '$212pred', 'bool212']
    branch $212pred, 214, 96                 ['$212pred']
label 214:
    $const214.3 = const(bool, False)         ['$const214.3']
    $222build_tuple.7 = build_tuple(items=[Var(i, geometry.py:262), Var(j, geometry.py:263)]) ['$222build_tuple.7', 'i', 'j']
    ret[$222build_tuple.7] = $const214.3     ['$222build_tuple.7', '$const214.3', 'ret']
    jump 84                                  []
label 232:
    jump 84                                  []
label 234:
    jump 72                                  []
label 236:
    $238return_value.1 = cast(value=ret)     ['$238return_value.1', 'ret']
    return $238return_value.1                ['$238return_value.1']

2022-05-06 22:35:58,924 ==== SSA block analysis pass on 0
2022-05-06 22:35:58,924 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,924 on stmt: points = arg(0, name=points)
2022-05-06 22:35:58,925 on stmt: polygon_surfaces = arg(1, name=polygon_surfaces)
2022-05-06 22:35:58,925 on stmt: normal_vec = arg(2, name=normal_vec)
2022-05-06 22:35:58,925 on stmt: d = arg(3, name=d)
2022-05-06 22:35:58,925 on stmt: num_surfaces = arg(4, name=num_surfaces)
2022-05-06 22:35:58,925 on stmt: $4load_attr.1 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,925 on stmt: $const6.2 = const(int, 1)
2022-05-06 22:35:58,926 on stmt: $const8.3 = const(int, 3)
2022-05-06 22:35:58,926 on stmt: $10build_slice.4 = global(slice: <class 'slice'>)
2022-05-06 22:35:58,926 on stmt: $10build_slice.5 = call $10build_slice.4($const6.2, $const8.3, func=$10build_slice.4, args=(Var($const6.2, geometry.py:257), Var($const8.3, geometry.py:257)), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,926 on stmt: $12binary_subscr.6 = static_getitem(value=$4load_attr.1, index=slice(1, 3, None), index_var=$10build_slice.5, fn=<built-in function getitem>)
2022-05-06 22:35:58,927 on stmt: $14unpack_sequence.9 = exhaust_iter(value=$12binary_subscr.6, count=2)
2022-05-06 22:35:58,927 on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.9, index=0, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,927 on stmt: $14unpack_sequence.8 = static_getitem(value=$14unpack_sequence.9, index=1, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,927 on stmt: max_num_surfaces = $14unpack_sequence.7
2022-05-06 22:35:58,928 on stmt: max_num_points_of_surface = $14unpack_sequence.8
2022-05-06 22:35:58,928 on stmt: $22load_attr.11 = getattr(value=points, attr=shape)
2022-05-06 22:35:58,928 on stmt: $const24.12 = const(int, 0)
2022-05-06 22:35:58,928 on stmt: num_points = static_getitem(value=$22load_attr.11, index=0, index_var=$const24.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,928 on stmt: $32load_attr.15 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,929 on stmt: $const34.16 = const(int, 0)
2022-05-06 22:35:58,929 on stmt: num_polygons = static_getitem(value=$32load_attr.15, index=0, index_var=$const34.16, fn=<built-in function getitem>)
2022-05-06 22:35:58,929 on stmt: $40load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,929 on stmt: $42load_attr.19 = getattr(value=$40load_global.18, attr=ones)
2022-05-06 22:35:58,929 on stmt: $48build_tuple.22 = build_tuple(items=[Var(num_points, geometry.py:258), Var(num_polygons, geometry.py:259)])
2022-05-06 22:35:58,930 on stmt: $50load_global.23 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,930 on stmt: $52load_attr.24 = getattr(value=$50load_global.23, attr=bool_)
2022-05-06 22:35:58,930 on stmt: ret = call $42load_attr.19($48build_tuple.22, func=$42load_attr.19, args=[Var($48build_tuple.22, geometry.py:260)], kws=[('dtype', Var($52load_attr.24, geometry.py:260))], vararg=None, target=None)
2022-05-06 22:35:58,930 on stmt: sign = const(float, 0.0)
2022-05-06 22:35:58,931 on stmt: $64load_global.28 = global(range: <class 'range'>)
2022-05-06 22:35:58,931 on stmt: $68call_function.30 = call $64load_global.28(num_points, func=$64load_global.28, args=[Var(num_points, geometry.py:258)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,931 on stmt: $70get_iter.31 = getiter(value=$68call_function.30)
2022-05-06 22:35:58,931 on stmt: $phi72.0 = $70get_iter.31
2022-05-06 22:35:58,931 on stmt: jump 72
2022-05-06 22:35:58,931 ==== SSA block analysis pass on 72
2022-05-06 22:35:58,931 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,931 on stmt: $72for_iter.1 = iternext(value=$phi72.0)
2022-05-06 22:35:58,932 on stmt: $72for_iter.2 = pair_first(value=$72for_iter.1)
2022-05-06 22:35:58,932 on stmt: $72for_iter.3 = pair_second(value=$72for_iter.1)
2022-05-06 22:35:58,932 on stmt: $phi74.1 = $72for_iter.2
2022-05-06 22:35:58,932 on stmt: branch $72for_iter.3, 74, 236
2022-05-06 22:35:58,932 ==== SSA block analysis pass on 74
2022-05-06 22:35:58,932 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,932 on stmt: i = $phi74.1
2022-05-06 22:35:58,932 on stmt: $76load_global.2 = global(range: <class 'range'>)
2022-05-06 22:35:58,932 on stmt: $80call_function.4 = call $76load_global.2(num_polygons, func=$76load_global.2, args=[Var(num_polygons, geometry.py:259)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,933 on stmt: $82get_iter.5 = getiter(value=$80call_function.4)
2022-05-06 22:35:58,933 on stmt: $phi84.1 = $82get_iter.5
2022-05-06 22:35:58,933 on stmt: jump 84
2022-05-06 22:35:58,933 ==== SSA block analysis pass on 84
2022-05-06 22:35:58,933 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,933 on stmt: $84for_iter.2 = iternext(value=$phi84.1)
2022-05-06 22:35:58,933 on stmt: $84for_iter.3 = pair_first(value=$84for_iter.2)
2022-05-06 22:35:58,934 on stmt: $84for_iter.4 = pair_second(value=$84for_iter.2)
2022-05-06 22:35:58,934 on stmt: $phi86.2 = $84for_iter.3
2022-05-06 22:35:58,934 on stmt: branch $84for_iter.4, 86, 234
2022-05-06 22:35:58,934 ==== SSA block analysis pass on 86
2022-05-06 22:35:58,934 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,934 on stmt: j = $phi86.2
2022-05-06 22:35:58,934 on stmt: $88load_global.3 = global(range: <class 'range'>)
2022-05-06 22:35:58,934 on stmt: $92call_function.5 = call $88load_global.3(max_num_surfaces, func=$88load_global.3, args=[Var(max_num_surfaces, geometry.py:257)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,934 on stmt: $94get_iter.6 = getiter(value=$92call_function.5)
2022-05-06 22:35:58,934 on stmt: $phi96.2 = $94get_iter.6
2022-05-06 22:35:58,935 on stmt: jump 96
2022-05-06 22:35:58,935 ==== SSA block analysis pass on 96
2022-05-06 22:35:58,935 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,935 on stmt: $96for_iter.3 = iternext(value=$phi96.2)
2022-05-06 22:35:58,935 on stmt: $96for_iter.4 = pair_first(value=$96for_iter.3)
2022-05-06 22:35:58,935 on stmt: $96for_iter.5 = pair_second(value=$96for_iter.3)
2022-05-06 22:35:58,935 on stmt: $phi98.3 = $96for_iter.4
2022-05-06 22:35:58,935 on stmt: branch $96for_iter.5, 98, 232
2022-05-06 22:35:58,935 ==== SSA block analysis pass on 98
2022-05-06 22:35:58,935 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,935 on stmt: k = $phi98.3
2022-05-06 22:35:58,936 on stmt: $106binary_subscr.7 = getitem(value=num_surfaces, index=j, fn=<built-in function getitem>)
2022-05-06 22:35:58,936 on stmt: $108compare_op.8 = k > $106binary_subscr.7
2022-05-06 22:35:58,936 on stmt: bool110 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,936 on stmt: $110pred = call bool110($108compare_op.8, func=bool110, args=(Var($108compare_op.8, geometry.py:265),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,936 on stmt: branch $110pred, 112, 116
2022-05-06 22:35:58,936 ==== SSA block analysis pass on 112
2022-05-06 22:35:58,936 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,936 on stmt: jump 237
2022-05-06 22:35:58,936 ==== SSA block analysis pass on 116
2022-05-06 22:35:58,936 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,937 on stmt: $const120.5 = const(int, 0)
2022-05-06 22:35:58,937 on stmt: $122build_tuple.6 = build_tuple(items=[Var(i, geometry.py:262), Var($const120.5, geometry.py:268)])
2022-05-06 22:35:58,937 on stmt: $124binary_subscr.7 = getitem(value=points, index=$122build_tuple.6, fn=<built-in function getitem>)
2022-05-06 22:35:58,937 on stmt: $const132.11 = const(int, 0)
2022-05-06 22:35:58,937 on stmt: $134build_tuple.12 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const132.11, geometry.py:268)])
2022-05-06 22:35:58,937 on stmt: $136binary_subscr.13 = getitem(value=normal_vec, index=$134build_tuple.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,938 on stmt: $138binary_multiply.14 = $124binary_subscr.7 * $136binary_subscr.13
2022-05-06 22:35:58,938 on stmt: $const144.17 = const(int, 1)
2022-05-06 22:35:58,938 on stmt: $146build_tuple.18 = build_tuple(items=[Var(i, geometry.py:262), Var($const144.17, geometry.py:269)])
2022-05-06 22:35:58,938 on stmt: $148binary_subscr.19 = getitem(value=points, index=$146build_tuple.18, fn=<built-in function getitem>)
2022-05-06 22:35:58,938 on stmt: $const156.23 = const(int, 1)
2022-05-06 22:35:58,938 on stmt: $158build_tuple.24 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const156.23, geometry.py:269)])
2022-05-06 22:35:58,938 on stmt: $160binary_subscr.25 = getitem(value=normal_vec, index=$158build_tuple.24, fn=<built-in function getitem>)
2022-05-06 22:35:58,938 on stmt: $162binary_multiply.26 = $148binary_subscr.19 * $160binary_subscr.25
2022-05-06 22:35:58,939 on stmt: $164binary_add.27 = $138binary_multiply.14 + $162binary_multiply.26
2022-05-06 22:35:58,939 on stmt: $const170.30 = const(int, 2)
2022-05-06 22:35:58,939 on stmt: $172build_tuple.31 = build_tuple(items=[Var(i, geometry.py:262), Var($const170.30, geometry.py:270)])
2022-05-06 22:35:58,939 on stmt: $174binary_subscr.32 = getitem(value=points, index=$172build_tuple.31, fn=<built-in function getitem>)
2022-05-06 22:35:58,939 on stmt: $const182.36 = const(int, 2)
2022-05-06 22:35:58,939 on stmt: $184build_tuple.37 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const182.36, geometry.py:270)])
2022-05-06 22:35:58,939 on stmt: $186binary_subscr.38 = getitem(value=normal_vec, index=$184build_tuple.37, fn=<built-in function getitem>)
2022-05-06 22:35:58,939 on stmt: $188binary_multiply.39 = $174binary_subscr.32 * $186binary_subscr.38
2022-05-06 22:35:58,940 on stmt: $190binary_add.40 = $164binary_add.27 + $188binary_multiply.39
2022-05-06 22:35:58,940 on stmt: $198build_tuple.44 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264)])
2022-05-06 22:35:58,940 on stmt: $200binary_subscr.45 = getitem(value=d, index=$198build_tuple.44, fn=<built-in function getitem>)
2022-05-06 22:35:58,940 on stmt: sign = $190binary_add.40 + $200binary_subscr.45
2022-05-06 22:35:58,940 on stmt: $const208.48 = const(int, 0)
2022-05-06 22:35:58,940 on stmt: $210compare_op.49 = sign >= $const208.48
2022-05-06 22:35:58,941 on stmt: bool212 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,941 on stmt: $212pred = call bool212($210compare_op.49, func=bool212, args=(Var($210compare_op.49, geometry.py:273),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,941 on stmt: branch $212pred, 214, 96
2022-05-06 22:35:58,941 ==== SSA block analysis pass on 214
2022-05-06 22:35:58,941 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,942 on stmt: $const214.3 = const(bool, False)
2022-05-06 22:35:58,942 on stmt: $222build_tuple.7 = build_tuple(items=[Var(i, geometry.py:262), Var(j, geometry.py:263)])
2022-05-06 22:35:58,942 on stmt: ret[$222build_tuple.7] = $const214.3
2022-05-06 22:35:58,942 on stmt: jump 237
2022-05-06 22:35:58,942 ==== SSA block analysis pass on 232
2022-05-06 22:35:58,942 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,942 on stmt: jump 237
2022-05-06 22:35:58,942 ==== SSA block analysis pass on 234
2022-05-06 22:35:58,942 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,942 on stmt: jump 72
2022-05-06 22:35:58,943 ==== SSA block analysis pass on 236
2022-05-06 22:35:58,943 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,943 on stmt: $238return_value.1 = cast(value=ret)
2022-05-06 22:35:58,943 on stmt: return $238return_value.1
2022-05-06 22:35:58,943 ==== SSA block analysis pass on 237
2022-05-06 22:35:58,943 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272704C0>
2022-05-06 22:35:58,943 on stmt: jump 84
2022-05-06 22:35:58,947 defs defaultdict(<class 'list'>,
            {'$106binary_subscr.7': [<numba.core.ir.Assign object at 0x0000021625E388E0>],
             '$108compare_op.8': [<numba.core.ir.Assign object at 0x0000021625E38EB0>],
             '$10build_slice.4': [<numba.core.ir.Assign object at 0x0000021625E2B7F0>],
             '$10build_slice.5': [<numba.core.ir.Assign object at 0x0000021625E2BBB0>],
             '$110pred': [<numba.core.ir.Assign object at 0x0000021625E38A60>],
             '$122build_tuple.6': [<numba.core.ir.Assign object at 0x00000216272496D0>],
             '$124binary_subscr.7': [<numba.core.ir.Assign object at 0x0000021627249850>],
             '$12binary_subscr.6': [<numba.core.ir.Assign object at 0x00000216272661C0>],
             '$134build_tuple.12': [<numba.core.ir.Assign object at 0x0000021627249EB0>],
             '$136binary_subscr.13': [<numba.core.ir.Assign object at 0x000002162725C070>],
             '$138binary_multiply.14': [<numba.core.ir.Assign object at 0x000002162725C1F0>],
             '$146build_tuple.18': [<numba.core.ir.Assign object at 0x000002162725C730>],
             '$148binary_subscr.19': [<numba.core.ir.Assign object at 0x000002162725C8B0>],
             '$14unpack_sequence.7': [<numba.core.ir.Assign object at 0x0000021625E2BD90>],
             '$14unpack_sequence.8': [<numba.core.ir.Assign object at 0x0000021625E2B430>],
             '$14unpack_sequence.9': [<numba.core.ir.Assign object at 0x0000021625E2B3A0>],
             '$158build_tuple.24': [<numba.core.ir.Assign object at 0x000002162725CF10>],
             '$160binary_subscr.25': [<numba.core.ir.Assign object at 0x000002162725F0D0>],
             '$162binary_multiply.26': [<numba.core.ir.Assign object at 0x000002162725F250>],
             '$164binary_add.27': [<numba.core.ir.Assign object at 0x000002162725F3D0>],
             '$172build_tuple.31': [<numba.core.ir.Assign object at 0x000002162725F910>],
             '$174binary_subscr.32': [<numba.core.ir.Assign object at 0x000002162725FA90>],
             '$184build_tuple.37': [<numba.core.ir.Assign object at 0x0000021627262130>],
             '$186binary_subscr.38': [<numba.core.ir.Assign object at 0x00000216272622B0>],
             '$188binary_multiply.39': [<numba.core.ir.Assign object at 0x0000021627262430>],
             '$190binary_add.40': [<numba.core.ir.Assign object at 0x00000216272625B0>],
             '$198build_tuple.44': [<numba.core.ir.Assign object at 0x0000021627262A90>],
             '$200binary_subscr.45': [<numba.core.ir.Assign object at 0x0000021627262C10>],
             '$210compare_op.49': [<numba.core.ir.Assign object at 0x00000216272632B0>],
             '$212pred': [<numba.core.ir.Assign object at 0x0000021627263520>],
             '$222build_tuple.7': [<numba.core.ir.Assign object at 0x0000021627262DF0>],
             '$22load_attr.11': [<numba.core.ir.Assign object at 0x0000021625DCA790>],
             '$238return_value.1': [<numba.core.ir.Assign object at 0x0000021627263B80>],
             '$32load_attr.15': [<numba.core.ir.Assign object at 0x0000021625E13910>],
             '$40load_global.18': [<numba.core.ir.Assign object at 0x0000021625E13400>],
             '$42load_attr.19': [<numba.core.ir.Assign object at 0x0000021625E13130>],
             '$48build_tuple.22': [<numba.core.ir.Assign object at 0x0000021625636D60>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x00000216256767F0>],
             '$50load_global.23': [<numba.core.ir.Assign object at 0x0000021625610490>],
             '$52load_attr.24': [<numba.core.ir.Assign object at 0x000002162561EA90>],
             '$64load_global.28': [<numba.core.ir.Assign object at 0x000002162562B910>],
             '$68call_function.30': [<numba.core.ir.Assign object at 0x00000216255A5A60>],
             '$70get_iter.31': [<numba.core.ir.Assign object at 0x0000021625605070>],
             '$72for_iter.1': [<numba.core.ir.Assign object at 0x00000216255FF8E0>],
             '$72for_iter.2': [<numba.core.ir.Assign object at 0x0000021625605820>],
             '$72for_iter.3': [<numba.core.ir.Assign object at 0x0000021625607AF0>],
             '$76load_global.2': [<numba.core.ir.Assign object at 0x0000021625E05880>],
             '$80call_function.4': [<numba.core.ir.Assign object at 0x0000021625E05610>],
             '$82get_iter.5': [<numba.core.ir.Assign object at 0x0000021625E05430>],
             '$84for_iter.2': [<numba.core.ir.Assign object at 0x0000021625E05070>],
             '$84for_iter.3': [<numba.core.ir.Assign object at 0x0000021625E05550>],
             '$84for_iter.4': [<numba.core.ir.Assign object at 0x0000021625E05CD0>],
             '$88load_global.3': [<numba.core.ir.Assign object at 0x0000021625612AF0>],
             '$92call_function.5': [<numba.core.ir.Assign object at 0x000002162607A550>],
             '$94get_iter.6': [<numba.core.ir.Assign object at 0x0000021626043F10>],
             '$96for_iter.3': [<numba.core.ir.Assign object at 0x0000021625F41A30>],
             '$96for_iter.4': [<numba.core.ir.Assign object at 0x0000021625D532E0>],
             '$96for_iter.5': [<numba.core.ir.Assign object at 0x0000021625DD7370>],
             '$const120.5': [<numba.core.ir.Assign object at 0x0000021627249520>],
             '$const132.11': [<numba.core.ir.Assign object at 0x0000021627249D00>],
             '$const144.17': [<numba.core.ir.Assign object at 0x000002162725C580>],
             '$const156.23': [<numba.core.ir.Assign object at 0x000002162725CD60>],
             '$const170.30': [<numba.core.ir.Assign object at 0x000002162725F760>],
             '$const182.36': [<numba.core.ir.Assign object at 0x000002162725FF40>],
             '$const208.48': [<numba.core.ir.Assign object at 0x0000021627263100>],
             '$const214.3': [<numba.core.ir.Assign object at 0x000002162725C400>],
             '$const24.12': [<numba.core.ir.Assign object at 0x0000021625E13A00>],
             '$const34.16': [<numba.core.ir.Assign object at 0x0000021625E13D30>],
             '$const6.2': [<numba.core.ir.Assign object at 0x0000021625E2B190>],
             '$const8.3': [<numba.core.ir.Assign object at 0x0000021625E2B490>],
             '$phi72.0': [<numba.core.ir.Assign object at 0x0000021625676E20>],
             '$phi74.1': [<numba.core.ir.Assign object at 0x00000216256276D0>],
             '$phi84.1': [<numba.core.ir.Assign object at 0x0000021625E05A30>],
             '$phi86.2': [<numba.core.ir.Assign object at 0x0000021625E051C0>],
             '$phi96.2': [<numba.core.ir.Assign object at 0x000002162561B310>],
             '$phi98.3': [<numba.core.ir.Assign object at 0x0000021625F6E2B0>],
             'bool110': [<numba.core.ir.Assign object at 0x0000021625E38A00>],
             'bool212': [<numba.core.ir.Assign object at 0x0000021627263400>],
             'd': [<numba.core.ir.Assign object at 0x0000021625E01370>],
             'i': [<numba.core.ir.Assign object at 0x0000021625E05BE0>],
             'j': [<numba.core.ir.Assign object at 0x000002162377A2E0>],
             'k': [<numba.core.ir.Assign object at 0x0000021625E38460>],
             'max_num_points_of_surface': [<numba.core.ir.Assign object at 0x0000021625E2B160>],
             'max_num_surfaces': [<numba.core.ir.Assign object at 0x0000021625E2B880>],
             'normal_vec': [<numba.core.ir.Assign object at 0x0000021625E01640>],
             'num_points': [<numba.core.ir.Assign object at 0x0000021627266E80>],
             'num_polygons': [<numba.core.ir.Assign object at 0x0000021627266E20>],
             'num_surfaces': [<numba.core.ir.Assign object at 0x0000021625676340>],
             'points': [<numba.core.ir.Assign object at 0x0000021625E01550>],
             'polygon_surfaces': [<numba.core.ir.Assign object at 0x0000021625E01820>],
             'ret': [<numba.core.ir.Assign object at 0x0000021625627760>],
             'sign': [<numba.core.ir.Assign object at 0x0000021625629160>,
                      <numba.core.ir.Assign object at 0x0000021627262D90>]})
2022-05-06 22:35:58,948 SSA violators {'sign'}
2022-05-06 22:35:58,948 Fix SSA violator on var sign
2022-05-06 22:35:58,948 ==== SSA block rewrite pass on 0
2022-05-06 22:35:58,948 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,948 on stmt: points = arg(0, name=points)
2022-05-06 22:35:58,948 on stmt: polygon_surfaces = arg(1, name=polygon_surfaces)
2022-05-06 22:35:58,948 on stmt: normal_vec = arg(2, name=normal_vec)
2022-05-06 22:35:58,948 on stmt: d = arg(3, name=d)
2022-05-06 22:35:58,948 on stmt: num_surfaces = arg(4, name=num_surfaces)
2022-05-06 22:35:58,949 on stmt: $4load_attr.1 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,949 on stmt: $const6.2 = const(int, 1)
2022-05-06 22:35:58,949 on stmt: $const8.3 = const(int, 3)
2022-05-06 22:35:58,949 on stmt: $10build_slice.4 = global(slice: <class 'slice'>)
2022-05-06 22:35:58,949 on stmt: $10build_slice.5 = call $10build_slice.4($const6.2, $const8.3, func=$10build_slice.4, args=(Var($const6.2, geometry.py:257), Var($const8.3, geometry.py:257)), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,949 on stmt: $12binary_subscr.6 = static_getitem(value=$4load_attr.1, index=slice(1, 3, None), index_var=$10build_slice.5, fn=<built-in function getitem>)
2022-05-06 22:35:58,949 on stmt: $14unpack_sequence.9 = exhaust_iter(value=$12binary_subscr.6, count=2)
2022-05-06 22:35:58,949 on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.9, index=0, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,950 on stmt: $14unpack_sequence.8 = static_getitem(value=$14unpack_sequence.9, index=1, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,950 on stmt: max_num_surfaces = $14unpack_sequence.7
2022-05-06 22:35:58,950 on stmt: max_num_points_of_surface = $14unpack_sequence.8
2022-05-06 22:35:58,950 on stmt: $22load_attr.11 = getattr(value=points, attr=shape)
2022-05-06 22:35:58,950 on stmt: $const24.12 = const(int, 0)
2022-05-06 22:35:58,950 on stmt: num_points = static_getitem(value=$22load_attr.11, index=0, index_var=$const24.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,950 on stmt: $32load_attr.15 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,950 on stmt: $const34.16 = const(int, 0)
2022-05-06 22:35:58,950 on stmt: num_polygons = static_getitem(value=$32load_attr.15, index=0, index_var=$const34.16, fn=<built-in function getitem>)
2022-05-06 22:35:58,950 on stmt: $40load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,951 on stmt: $42load_attr.19 = getattr(value=$40load_global.18, attr=ones)
2022-05-06 22:35:58,951 on stmt: $48build_tuple.22 = build_tuple(items=[Var(num_points, geometry.py:258), Var(num_polygons, geometry.py:259)])
2022-05-06 22:35:58,951 on stmt: $50load_global.23 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,951 on stmt: $52load_attr.24 = getattr(value=$50load_global.23, attr=bool_)
2022-05-06 22:35:58,951 on stmt: ret = call $42load_attr.19($48build_tuple.22, func=$42load_attr.19, args=[Var($48build_tuple.22, geometry.py:260)], kws=[('dtype', Var($52load_attr.24, geometry.py:260))], vararg=None, target=None)
2022-05-06 22:35:58,951 on stmt: sign = const(float, 0.0)
2022-05-06 22:35:58,951 first assign: sign
2022-05-06 22:35:58,951 replaced with: sign = const(float, 0.0)
2022-05-06 22:35:58,951 on stmt: $64load_global.28 = global(range: <class 'range'>)
2022-05-06 22:35:58,952 on stmt: $68call_function.30 = call $64load_global.28(num_points, func=$64load_global.28, args=[Var(num_points, geometry.py:258)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,952 on stmt: $70get_iter.31 = getiter(value=$68call_function.30)
2022-05-06 22:35:58,952 on stmt: $phi72.0 = $70get_iter.31
2022-05-06 22:35:58,952 on stmt: jump 72
2022-05-06 22:35:58,952 ==== SSA block rewrite pass on 72
2022-05-06 22:35:58,952 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,953 on stmt: $72for_iter.1 = iternext(value=$phi72.0)
2022-05-06 22:35:58,953 on stmt: $72for_iter.2 = pair_first(value=$72for_iter.1)
2022-05-06 22:35:58,953 on stmt: $72for_iter.3 = pair_second(value=$72for_iter.1)
2022-05-06 22:35:58,953 on stmt: $phi74.1 = $72for_iter.2
2022-05-06 22:35:58,953 on stmt: branch $72for_iter.3, 74, 236
2022-05-06 22:35:58,953 ==== SSA block rewrite pass on 74
2022-05-06 22:35:58,953 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,953 on stmt: i = $phi74.1
2022-05-06 22:35:58,953 on stmt: $76load_global.2 = global(range: <class 'range'>)
2022-05-06 22:35:58,953 on stmt: $80call_function.4 = call $76load_global.2(num_polygons, func=$76load_global.2, args=[Var(num_polygons, geometry.py:259)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,954 on stmt: $82get_iter.5 = getiter(value=$80call_function.4)
2022-05-06 22:35:58,954 on stmt: $phi84.1 = $82get_iter.5
2022-05-06 22:35:58,954 on stmt: jump 84
2022-05-06 22:35:58,954 ==== SSA block rewrite pass on 84
2022-05-06 22:35:58,954 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,954 on stmt: $84for_iter.2 = iternext(value=$phi84.1)
2022-05-06 22:35:58,954 on stmt: $84for_iter.3 = pair_first(value=$84for_iter.2)
2022-05-06 22:35:58,954 on stmt: $84for_iter.4 = pair_second(value=$84for_iter.2)
2022-05-06 22:35:58,954 on stmt: $phi86.2 = $84for_iter.3
2022-05-06 22:35:58,954 on stmt: branch $84for_iter.4, 86, 234
2022-05-06 22:35:58,955 ==== SSA block rewrite pass on 86
2022-05-06 22:35:58,955 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,955 on stmt: j = $phi86.2
2022-05-06 22:35:58,955 on stmt: $88load_global.3 = global(range: <class 'range'>)
2022-05-06 22:35:58,955 on stmt: $92call_function.5 = call $88load_global.3(max_num_surfaces, func=$88load_global.3, args=[Var(max_num_surfaces, geometry.py:257)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,955 on stmt: $94get_iter.6 = getiter(value=$92call_function.5)
2022-05-06 22:35:58,955 on stmt: $phi96.2 = $94get_iter.6
2022-05-06 22:35:58,955 on stmt: jump 96
2022-05-06 22:35:58,955 ==== SSA block rewrite pass on 96
2022-05-06 22:35:58,955 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,955 on stmt: $96for_iter.3 = iternext(value=$phi96.2)
2022-05-06 22:35:58,956 on stmt: $96for_iter.4 = pair_first(value=$96for_iter.3)
2022-05-06 22:35:58,956 on stmt: $96for_iter.5 = pair_second(value=$96for_iter.3)
2022-05-06 22:35:58,956 on stmt: $phi98.3 = $96for_iter.4
2022-05-06 22:35:58,956 on stmt: branch $96for_iter.5, 98, 232
2022-05-06 22:35:58,956 ==== SSA block rewrite pass on 98
2022-05-06 22:35:58,956 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,956 on stmt: k = $phi98.3
2022-05-06 22:35:58,956 on stmt: $106binary_subscr.7 = getitem(value=num_surfaces, index=j, fn=<built-in function getitem>)
2022-05-06 22:35:58,956 on stmt: $108compare_op.8 = k > $106binary_subscr.7
2022-05-06 22:35:58,956 on stmt: bool110 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,957 on stmt: $110pred = call bool110($108compare_op.8, func=bool110, args=(Var($108compare_op.8, geometry.py:265),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,957 on stmt: branch $110pred, 112, 116
2022-05-06 22:35:58,957 ==== SSA block rewrite pass on 112
2022-05-06 22:35:58,957 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,958 on stmt: jump 237
2022-05-06 22:35:58,958 ==== SSA block rewrite pass on 116
2022-05-06 22:35:58,958 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,958 on stmt: $const120.5 = const(int, 0)
2022-05-06 22:35:58,959 on stmt: $122build_tuple.6 = build_tuple(items=[Var(i, geometry.py:262), Var($const120.5, geometry.py:268)])
2022-05-06 22:35:58,959 on stmt: $124binary_subscr.7 = getitem(value=points, index=$122build_tuple.6, fn=<built-in function getitem>)
2022-05-06 22:35:58,959 on stmt: $const132.11 = const(int, 0)
2022-05-06 22:35:58,959 on stmt: $134build_tuple.12 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const132.11, geometry.py:268)])
2022-05-06 22:35:58,959 on stmt: $136binary_subscr.13 = getitem(value=normal_vec, index=$134build_tuple.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,960 on stmt: $138binary_multiply.14 = $124binary_subscr.7 * $136binary_subscr.13
2022-05-06 22:35:58,960 on stmt: $const144.17 = const(int, 1)
2022-05-06 22:35:58,960 on stmt: $146build_tuple.18 = build_tuple(items=[Var(i, geometry.py:262), Var($const144.17, geometry.py:269)])
2022-05-06 22:35:58,960 on stmt: $148binary_subscr.19 = getitem(value=points, index=$146build_tuple.18, fn=<built-in function getitem>)
2022-05-06 22:35:58,960 on stmt: $const156.23 = const(int, 1)
2022-05-06 22:35:58,960 on stmt: $158build_tuple.24 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const156.23, geometry.py:269)])
2022-05-06 22:35:58,960 on stmt: $160binary_subscr.25 = getitem(value=normal_vec, index=$158build_tuple.24, fn=<built-in function getitem>)
2022-05-06 22:35:58,960 on stmt: $162binary_multiply.26 = $148binary_subscr.19 * $160binary_subscr.25
2022-05-06 22:35:58,960 on stmt: $164binary_add.27 = $138binary_multiply.14 + $162binary_multiply.26
2022-05-06 22:35:58,961 on stmt: $const170.30 = const(int, 2)
2022-05-06 22:35:58,961 on stmt: $172build_tuple.31 = build_tuple(items=[Var(i, geometry.py:262), Var($const170.30, geometry.py:270)])
2022-05-06 22:35:58,961 on stmt: $174binary_subscr.32 = getitem(value=points, index=$172build_tuple.31, fn=<built-in function getitem>)
2022-05-06 22:35:58,961 on stmt: $const182.36 = const(int, 2)
2022-05-06 22:35:58,961 on stmt: $184build_tuple.37 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const182.36, geometry.py:270)])
2022-05-06 22:35:58,961 on stmt: $186binary_subscr.38 = getitem(value=normal_vec, index=$184build_tuple.37, fn=<built-in function getitem>)
2022-05-06 22:35:58,961 on stmt: $188binary_multiply.39 = $174binary_subscr.32 * $186binary_subscr.38
2022-05-06 22:35:58,961 on stmt: $190binary_add.40 = $164binary_add.27 + $188binary_multiply.39
2022-05-06 22:35:58,961 on stmt: $198build_tuple.44 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264)])
2022-05-06 22:35:58,962 on stmt: $200binary_subscr.45 = getitem(value=d, index=$198build_tuple.44, fn=<built-in function getitem>)
2022-05-06 22:35:58,962 on stmt: sign = $190binary_add.40 + $200binary_subscr.45
2022-05-06 22:35:58,962 replaced with: sign.1 = $190binary_add.40 + $200binary_subscr.45
2022-05-06 22:35:58,962 on stmt: $const208.48 = const(int, 0)
2022-05-06 22:35:58,962 on stmt: $210compare_op.49 = sign >= $const208.48
2022-05-06 22:35:58,962 on stmt: bool212 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,962 on stmt: $212pred = call bool212($210compare_op.49, func=bool212, args=(Var($210compare_op.49, geometry.py:273),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,963 on stmt: branch $212pred, 214, 96
2022-05-06 22:35:58,963 ==== SSA block rewrite pass on 214
2022-05-06 22:35:58,963 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,963 on stmt: $const214.3 = const(bool, False)
2022-05-06 22:35:58,963 on stmt: $222build_tuple.7 = build_tuple(items=[Var(i, geometry.py:262), Var(j, geometry.py:263)])
2022-05-06 22:35:58,963 on stmt: ret[$222build_tuple.7] = $const214.3
2022-05-06 22:35:58,963 on stmt: jump 237
2022-05-06 22:35:58,963 ==== SSA block rewrite pass on 232
2022-05-06 22:35:58,963 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,963 on stmt: jump 237
2022-05-06 22:35:58,963 ==== SSA block rewrite pass on 234
2022-05-06 22:35:58,964 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,964 on stmt: jump 72
2022-05-06 22:35:58,964 ==== SSA block rewrite pass on 236
2022-05-06 22:35:58,964 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,964 on stmt: $238return_value.1 = cast(value=ret)
2022-05-06 22:35:58,964 on stmt: return $238return_value.1
2022-05-06 22:35:58,964 ==== SSA block rewrite pass on 237
2022-05-06 22:35:58,964 Running <numba.core.ssa._FreshVarHandler object at 0x0000021625DCFC10>
2022-05-06 22:35:58,964 on stmt: jump 84
2022-05-06 22:35:58,965 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021625DCFE50>],
             116: [<numba.core.ir.Assign object at 0x0000021627266A30>]})
2022-05-06 22:35:58,965 ==== SSA block rewrite pass on 0
2022-05-06 22:35:58,965 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,965 on stmt: points = arg(0, name=points)
2022-05-06 22:35:58,965 on stmt: polygon_surfaces = arg(1, name=polygon_surfaces)
2022-05-06 22:35:58,965 on stmt: normal_vec = arg(2, name=normal_vec)
2022-05-06 22:35:58,965 on stmt: d = arg(3, name=d)
2022-05-06 22:35:58,965 on stmt: num_surfaces = arg(4, name=num_surfaces)
2022-05-06 22:35:58,965 on stmt: $4load_attr.1 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,966 on stmt: $const6.2 = const(int, 1)
2022-05-06 22:35:58,966 on stmt: $const8.3 = const(int, 3)
2022-05-06 22:35:58,966 on stmt: $10build_slice.4 = global(slice: <class 'slice'>)
2022-05-06 22:35:58,966 on stmt: $10build_slice.5 = call $10build_slice.4($const6.2, $const8.3, func=$10build_slice.4, args=(Var($const6.2, geometry.py:257), Var($const8.3, geometry.py:257)), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,966 on stmt: $12binary_subscr.6 = static_getitem(value=$4load_attr.1, index=slice(1, 3, None), index_var=$10build_slice.5, fn=<built-in function getitem>)
2022-05-06 22:35:58,966 on stmt: $14unpack_sequence.9 = exhaust_iter(value=$12binary_subscr.6, count=2)
2022-05-06 22:35:58,966 on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.9, index=0, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,966 on stmt: $14unpack_sequence.8 = static_getitem(value=$14unpack_sequence.9, index=1, index_var=None, fn=<built-in function getitem>)
2022-05-06 22:35:58,967 on stmt: max_num_surfaces = $14unpack_sequence.7
2022-05-06 22:35:58,967 on stmt: max_num_points_of_surface = $14unpack_sequence.8
2022-05-06 22:35:58,967 on stmt: $22load_attr.11 = getattr(value=points, attr=shape)
2022-05-06 22:35:58,967 on stmt: $const24.12 = const(int, 0)
2022-05-06 22:35:58,967 on stmt: num_points = static_getitem(value=$22load_attr.11, index=0, index_var=$const24.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,967 on stmt: $32load_attr.15 = getattr(value=polygon_surfaces, attr=shape)
2022-05-06 22:35:58,967 on stmt: $const34.16 = const(int, 0)
2022-05-06 22:35:58,967 on stmt: num_polygons = static_getitem(value=$32load_attr.15, index=0, index_var=$const34.16, fn=<built-in function getitem>)
2022-05-06 22:35:58,967 on stmt: $40load_global.18 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,968 on stmt: $42load_attr.19 = getattr(value=$40load_global.18, attr=ones)
2022-05-06 22:35:58,968 on stmt: $48build_tuple.22 = build_tuple(items=[Var(num_points, geometry.py:258), Var(num_polygons, geometry.py:259)])
2022-05-06 22:35:58,968 on stmt: $50load_global.23 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:58,969 on stmt: $52load_attr.24 = getattr(value=$50load_global.23, attr=bool_)
2022-05-06 22:35:58,969 on stmt: ret = call $42load_attr.19($48build_tuple.22, func=$42load_attr.19, args=[Var($48build_tuple.22, geometry.py:260)], kws=[('dtype', Var($52load_attr.24, geometry.py:260))], vararg=None, target=None)
2022-05-06 22:35:58,969 on stmt: sign = const(float, 0.0)
2022-05-06 22:35:58,969 on stmt: $64load_global.28 = global(range: <class 'range'>)
2022-05-06 22:35:58,970 on stmt: $68call_function.30 = call $64load_global.28(num_points, func=$64load_global.28, args=[Var(num_points, geometry.py:258)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,970 on stmt: $70get_iter.31 = getiter(value=$68call_function.30)
2022-05-06 22:35:58,970 on stmt: $phi72.0 = $70get_iter.31
2022-05-06 22:35:58,970 on stmt: jump 72
2022-05-06 22:35:58,971 ==== SSA block rewrite pass on 72
2022-05-06 22:35:58,971 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,971 on stmt: $72for_iter.1 = iternext(value=$phi72.0)
2022-05-06 22:35:58,971 on stmt: $72for_iter.2 = pair_first(value=$72for_iter.1)
2022-05-06 22:35:58,971 on stmt: $72for_iter.3 = pair_second(value=$72for_iter.1)
2022-05-06 22:35:58,972 on stmt: $phi74.1 = $72for_iter.2
2022-05-06 22:35:58,972 on stmt: branch $72for_iter.3, 74, 236
2022-05-06 22:35:58,972 ==== SSA block rewrite pass on 74
2022-05-06 22:35:58,972 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,973 on stmt: i = $phi74.1
2022-05-06 22:35:58,973 on stmt: $76load_global.2 = global(range: <class 'range'>)
2022-05-06 22:35:58,973 on stmt: $80call_function.4 = call $76load_global.2(num_polygons, func=$76load_global.2, args=[Var(num_polygons, geometry.py:259)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,973 on stmt: $82get_iter.5 = getiter(value=$80call_function.4)
2022-05-06 22:35:58,973 on stmt: $phi84.1 = $82get_iter.5
2022-05-06 22:35:58,974 on stmt: jump 84
2022-05-06 22:35:58,974 ==== SSA block rewrite pass on 84
2022-05-06 22:35:58,974 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,974 on stmt: $84for_iter.2 = iternext(value=$phi84.1)
2022-05-06 22:35:58,975 on stmt: $84for_iter.3 = pair_first(value=$84for_iter.2)
2022-05-06 22:35:58,975 on stmt: $84for_iter.4 = pair_second(value=$84for_iter.2)
2022-05-06 22:35:58,975 on stmt: $phi86.2 = $84for_iter.3
2022-05-06 22:35:58,975 on stmt: branch $84for_iter.4, 86, 234
2022-05-06 22:35:58,976 ==== SSA block rewrite pass on 86
2022-05-06 22:35:58,976 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,976 on stmt: j = $phi86.2
2022-05-06 22:35:58,976 on stmt: $88load_global.3 = global(range: <class 'range'>)
2022-05-06 22:35:58,976 on stmt: $92call_function.5 = call $88load_global.3(max_num_surfaces, func=$88load_global.3, args=[Var(max_num_surfaces, geometry.py:257)], kws=(), vararg=None, target=None)
2022-05-06 22:35:58,977 on stmt: $94get_iter.6 = getiter(value=$92call_function.5)
2022-05-06 22:35:58,977 on stmt: $phi96.2 = $94get_iter.6
2022-05-06 22:35:58,977 on stmt: jump 96
2022-05-06 22:35:58,977 ==== SSA block rewrite pass on 96
2022-05-06 22:35:58,978 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,978 on stmt: $96for_iter.3 = iternext(value=$phi96.2)
2022-05-06 22:35:58,978 on stmt: $96for_iter.4 = pair_first(value=$96for_iter.3)
2022-05-06 22:35:58,978 on stmt: $96for_iter.5 = pair_second(value=$96for_iter.3)
2022-05-06 22:35:58,978 on stmt: $phi98.3 = $96for_iter.4
2022-05-06 22:35:58,979 on stmt: branch $96for_iter.5, 98, 232
2022-05-06 22:35:58,979 ==== SSA block rewrite pass on 98
2022-05-06 22:35:58,979 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,979 on stmt: k = $phi98.3
2022-05-06 22:35:58,979 on stmt: $106binary_subscr.7 = getitem(value=num_surfaces, index=j, fn=<built-in function getitem>)
2022-05-06 22:35:58,980 on stmt: $108compare_op.8 = k > $106binary_subscr.7
2022-05-06 22:35:58,980 on stmt: bool110 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,980 on stmt: $110pred = call bool110($108compare_op.8, func=bool110, args=(Var($108compare_op.8, geometry.py:265),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,980 on stmt: branch $110pred, 112, 116
2022-05-06 22:35:58,981 ==== SSA block rewrite pass on 112
2022-05-06 22:35:58,981 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,981 on stmt: jump 237
2022-05-06 22:35:58,981 ==== SSA block rewrite pass on 116
2022-05-06 22:35:58,982 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,982 on stmt: $const120.5 = const(int, 0)
2022-05-06 22:35:58,982 on stmt: $122build_tuple.6 = build_tuple(items=[Var(i, geometry.py:262), Var($const120.5, geometry.py:268)])
2022-05-06 22:35:58,982 on stmt: $124binary_subscr.7 = getitem(value=points, index=$122build_tuple.6, fn=<built-in function getitem>)
2022-05-06 22:35:58,982 on stmt: $const132.11 = const(int, 0)
2022-05-06 22:35:58,983 on stmt: $134build_tuple.12 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const132.11, geometry.py:268)])
2022-05-06 22:35:58,983 on stmt: $136binary_subscr.13 = getitem(value=normal_vec, index=$134build_tuple.12, fn=<built-in function getitem>)
2022-05-06 22:35:58,983 on stmt: $138binary_multiply.14 = $124binary_subscr.7 * $136binary_subscr.13
2022-05-06 22:35:58,984 on stmt: $const144.17 = const(int, 1)
2022-05-06 22:35:58,984 on stmt: $146build_tuple.18 = build_tuple(items=[Var(i, geometry.py:262), Var($const144.17, geometry.py:269)])
2022-05-06 22:35:58,984 on stmt: $148binary_subscr.19 = getitem(value=points, index=$146build_tuple.18, fn=<built-in function getitem>)
2022-05-06 22:35:58,984 on stmt: $const156.23 = const(int, 1)
2022-05-06 22:35:58,985 on stmt: $158build_tuple.24 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const156.23, geometry.py:269)])
2022-05-06 22:35:58,985 on stmt: $160binary_subscr.25 = getitem(value=normal_vec, index=$158build_tuple.24, fn=<built-in function getitem>)
2022-05-06 22:35:58,985 on stmt: $162binary_multiply.26 = $148binary_subscr.19 * $160binary_subscr.25
2022-05-06 22:35:58,985 on stmt: $164binary_add.27 = $138binary_multiply.14 + $162binary_multiply.26
2022-05-06 22:35:58,985 on stmt: $const170.30 = const(int, 2)
2022-05-06 22:35:58,986 on stmt: $172build_tuple.31 = build_tuple(items=[Var(i, geometry.py:262), Var($const170.30, geometry.py:270)])
2022-05-06 22:35:58,986 on stmt: $174binary_subscr.32 = getitem(value=points, index=$172build_tuple.31, fn=<built-in function getitem>)
2022-05-06 22:35:58,986 on stmt: $const182.36 = const(int, 2)
2022-05-06 22:35:58,986 on stmt: $184build_tuple.37 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264), Var($const182.36, geometry.py:270)])
2022-05-06 22:35:58,986 on stmt: $186binary_subscr.38 = getitem(value=normal_vec, index=$184build_tuple.37, fn=<built-in function getitem>)
2022-05-06 22:35:58,986 on stmt: $188binary_multiply.39 = $174binary_subscr.32 * $186binary_subscr.38
2022-05-06 22:35:58,986 on stmt: $190binary_add.40 = $164binary_add.27 + $188binary_multiply.39
2022-05-06 22:35:58,986 on stmt: $198build_tuple.44 = build_tuple(items=[Var(j, geometry.py:263), Var(k, geometry.py:264)])
2022-05-06 22:35:58,987 on stmt: $200binary_subscr.45 = getitem(value=d, index=$198build_tuple.44, fn=<built-in function getitem>)
2022-05-06 22:35:58,987 on stmt: sign.1 = $190binary_add.40 + $200binary_subscr.45
2022-05-06 22:35:58,987 on stmt: $const208.48 = const(int, 0)
2022-05-06 22:35:58,987 on stmt: $210compare_op.49 = sign >= $const208.48
2022-05-06 22:35:58,987 find_def var='sign' stmt=$210compare_op.49 = sign >= $const208.48
2022-05-06 22:35:58,987 replaced with: $210compare_op.49 = sign.1 >= $const208.48
2022-05-06 22:35:58,987 on stmt: bool212 = global(bool: <class 'bool'>)
2022-05-06 22:35:58,988 on stmt: $212pred = call bool212($210compare_op.49, func=bool212, args=(Var($210compare_op.49, geometry.py:273),), kws=(), vararg=None, target=None)
2022-05-06 22:35:58,988 on stmt: branch $212pred, 214, 96
2022-05-06 22:35:58,988 ==== SSA block rewrite pass on 214
2022-05-06 22:35:58,988 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,988 on stmt: $const214.3 = const(bool, False)
2022-05-06 22:35:58,988 on stmt: $222build_tuple.7 = build_tuple(items=[Var(i, geometry.py:262), Var(j, geometry.py:263)])
2022-05-06 22:35:58,988 on stmt: ret[$222build_tuple.7] = $const214.3
2022-05-06 22:35:58,989 on stmt: jump 237
2022-05-06 22:35:58,989 ==== SSA block rewrite pass on 232
2022-05-06 22:35:58,989 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,989 on stmt: jump 237
2022-05-06 22:35:58,989 ==== SSA block rewrite pass on 234
2022-05-06 22:35:58,989 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,989 on stmt: jump 72
2022-05-06 22:35:58,989 ==== SSA block rewrite pass on 236
2022-05-06 22:35:58,989 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,989 on stmt: $238return_value.1 = cast(value=ret)
2022-05-06 22:35:58,990 on stmt: return $238return_value.1
2022-05-06 22:35:58,990 ==== SSA block rewrite pass on 237
2022-05-06 22:35:58,990 Running <numba.core.ssa._FixSSAVars object at 0x0000021625DCFC10>
2022-05-06 22:35:58,990 on stmt: jump 84
2022-05-06 22:35:59,012 bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:59,012 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:59,012 stack: []
2022-05-06 22:35:59,012 dispatch pc=0, inst=NOP(arg=None, lineno=3)
2022-05-06 22:35:59,012 stack []
2022-05-06 22:35:59,012 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
2022-05-06 22:35:59,013 stack []
2022-05-06 22:35:59,013 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
2022-05-06 22:35:59,013 stack ['$2load_global.0']
2022-05-06 22:35:59,013 dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
2022-05-06 22:35:59,013 stack ['$2load_global.0', '$tmp04.1']
2022-05-06 22:35:59,013 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
2022-05-06 22:35:59,013 stack ['$2load_global.0', '$tmp04.1', '$dtype6.2']
2022-05-06 22:35:59,013 dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:59,013 stack ['$8call_function.3']
2022-05-06 22:35:59,014 end state. edges=[]
2022-05-06 22:35:59,014 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:59,014 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:59,014 defmap: {}
2022-05-06 22:35:59,014 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:59,014 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:59,014 keep phismap: {}
2022-05-06 22:35:59,014 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:59,015 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:59,015 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$dtype6.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$dtype6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:59,016 label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'dtype', 'tmp0']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2022-05-06 22:35:59,019 ==== SSA block analysis pass on 0
2022-05-06 22:35:59,020 Running <numba.core.ssa._GatherDefsHandler object at 0x000002162727F3A0>
2022-05-06 22:35:59,020 on stmt: tmp0 = arg(0, name=tmp0)
2022-05-06 22:35:59,020 on stmt: dtype = arg(1, name=dtype)
2022-05-06 22:35:59,020 on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
2022-05-06 22:35:59,020 on stmt: $8call_function.3 = call $2load_global.0(tmp0, dtype, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(dtype, <string>:3)], kws=(), vararg=None, target=None)
2022-05-06 22:35:59,020 on stmt: $10return_value.4 = cast(value=$8call_function.3)
2022-05-06 22:35:59,020 on stmt: return $10return_value.4
2022-05-06 22:35:59,021 defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x000002162727C490>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000002162727FF10>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x000002162727C370>],
             'dtype': [<numba.core.ir.Assign object at 0x000002162727FD90>],
             'tmp0': [<numba.core.ir.Assign object at 0x000002162727F040>]})
2022-05-06 22:35:59,021 SSA violators set()
2022-05-06 22:35:59,038 bytecode dump:
>          0	NOP(arg=None, lineno=3749)
           2	LOAD_GLOBAL(arg=0, lineno=3749)
           4	LOAD_METHOD(arg=1, lineno=3749)
           6	LOAD_FAST(arg=0, lineno=3749)
           8	LOAD_FAST(arg=1, lineno=3749)
          10	CALL_METHOD(arg=2, lineno=3749)
          12	STORE_FAST(arg=2, lineno=3749)
          14	LOAD_GLOBAL(arg=0, lineno=3750)
          16	LOAD_METHOD(arg=2, lineno=3750)
          18	LOAD_FAST(arg=2, lineno=3750)
          20	LOAD_ATTR(arg=3, lineno=3750)
          22	CALL_METHOD(arg=1, lineno=3750)
          24	GET_ITER(arg=None, lineno=3750)
>         26	FOR_ITER(arg=12, lineno=3750)
          28	STORE_FAST(arg=3, lineno=3750)
          30	LOAD_CONST(arg=1, lineno=3751)
          32	LOAD_FAST(arg=2, lineno=3751)
          34	LOAD_FAST(arg=3, lineno=3751)
          36	STORE_SUBSCR(arg=None, lineno=3751)
          38	JUMP_ABSOLUTE(arg=26, lineno=3751)
>         40	LOAD_FAST(arg=2, lineno=3752)
          42	RETURN_VALUE(arg=None, lineno=3752)
2022-05-06 22:35:59,038 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:59,038 stack: []
2022-05-06 22:35:59,038 dispatch pc=0, inst=NOP(arg=None, lineno=3749)
2022-05-06 22:35:59,038 stack []
2022-05-06 22:35:59,039 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3749)
2022-05-06 22:35:59,039 stack []
2022-05-06 22:35:59,039 dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=3749)
2022-05-06 22:35:59,039 stack ['$2load_global.0']
2022-05-06 22:35:59,039 dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=3749)
2022-05-06 22:35:59,039 stack ['$4load_method.1']
2022-05-06 22:35:59,039 dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=3749)
2022-05-06 22:35:59,039 stack ['$4load_method.1', '$shape6.2']
2022-05-06 22:35:59,039 dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3749)
2022-05-06 22:35:59,040 stack ['$4load_method.1', '$shape6.2', '$dtype8.3']
2022-05-06 22:35:59,040 dispatch pc=12, inst=STORE_FAST(arg=2, lineno=3749)
2022-05-06 22:35:59,040 stack ['$10call_method.4']
2022-05-06 22:35:59,040 dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=3750)
2022-05-06 22:35:59,040 stack []
2022-05-06 22:35:59,041 dispatch pc=16, inst=LOAD_METHOD(arg=2, lineno=3750)
2022-05-06 22:35:59,041 stack ['$14load_global.5']
2022-05-06 22:35:59,041 dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=3750)
2022-05-06 22:35:59,041 stack ['$16load_method.6']
2022-05-06 22:35:59,042 dispatch pc=20, inst=LOAD_ATTR(arg=3, lineno=3750)
2022-05-06 22:35:59,042 stack ['$16load_method.6', '$arr18.7']
2022-05-06 22:35:59,042 dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=3750)
2022-05-06 22:35:59,042 stack ['$16load_method.6', '$20load_attr.8']
2022-05-06 22:35:59,043 dispatch pc=24, inst=GET_ITER(arg=None, lineno=3750)
2022-05-06 22:35:59,043 stack ['$22call_method.9']
2022-05-06 22:35:59,043 end state. edges=[Edge(pc=26, stack=('$24get_iter.10',), blockstack=(), npush=0)]
2022-05-06 22:35:59,043 pending: deque([State(pc_initial=26 nstack_initial=1)])
2022-05-06 22:35:59,043 stack: ['$phi26.0']
2022-05-06 22:35:59,044 dispatch pc=26, inst=FOR_ITER(arg=12, lineno=3750)
2022-05-06 22:35:59,044 stack ['$phi26.0']
2022-05-06 22:35:59,044 end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=('$phi26.0', '$26for_iter.2'), blockstack=(), npush=0)]
2022-05-06 22:35:59,044 pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=28 nstack_initial=2)])
2022-05-06 22:35:59,045 stack: []
2022-05-06 22:35:59,045 dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=3752)
2022-05-06 22:35:59,045 stack []
2022-05-06 22:35:59,045 dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=3752)
2022-05-06 22:35:59,045 stack ['$arr40.0']
2022-05-06 22:35:59,046 end state. edges=[]
2022-05-06 22:35:59,046 pending: deque([State(pc_initial=28 nstack_initial=2)])
2022-05-06 22:35:59,046 stack: ['$phi28.0', '$phi28.1']
2022-05-06 22:35:59,046 dispatch pc=28, inst=STORE_FAST(arg=3, lineno=3750)
2022-05-06 22:35:59,046 stack ['$phi28.0', '$phi28.1']
2022-05-06 22:35:59,047 dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=3751)
2022-05-06 22:35:59,047 stack ['$phi28.0']
2022-05-06 22:35:59,047 dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=3751)
2022-05-06 22:35:59,047 stack ['$phi28.0', '$const30.2']
2022-05-06 22:35:59,048 dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=3751)
2022-05-06 22:35:59,048 stack ['$phi28.0', '$const30.2', '$arr32.3']
2022-05-06 22:35:59,048 dispatch pc=36, inst=STORE_SUBSCR(arg=None, lineno=3751)
2022-05-06 22:35:59,048 stack ['$phi28.0', '$const30.2', '$arr32.3', '$idx34.4']
2022-05-06 22:35:59,048 dispatch pc=38, inst=JUMP_ABSOLUTE(arg=26, lineno=3751)
2022-05-06 22:35:59,048 stack ['$phi28.0']
2022-05-06 22:35:59,049 end state. edges=[Edge(pc=26, stack=('$phi28.0',), blockstack=(), npush=0)]
2022-05-06 22:35:59,049 pending: deque([State(pc_initial=26 nstack_initial=1)])
2022-05-06 22:35:59,049 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:59,049 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=1): {'$phi26.0'},
             State(pc_initial=28 nstack_initial=2): {'$phi28.1'},
             State(pc_initial=40 nstack_initial=0): set()})
2022-05-06 22:35:59,050 defmap: {'$phi26.0': State(pc_initial=0 nstack_initial=0),
 '$phi28.1': State(pc_initial=26 nstack_initial=1)}
2022-05-06 22:35:59,050 phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=2))},
             '$phi28.0': {('$phi26.0', State(pc_initial=26 nstack_initial=1))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
2022-05-06 22:35:59,051 changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=1))},
             '$phi28.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
2022-05-06 22:35:59,051 changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
2022-05-06 22:35:59,052 changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.0': {('$24get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
2022-05-06 22:35:59,053 keep phismap: {'$phi26.0': {('$24get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi28.1': {('$26for_iter.2', State(pc_initial=26 nstack_initial=1))}}
2022-05-06 22:35:59,053 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi26.0': '$24get_iter.10'},
             State(pc_initial=26 nstack_initial=1): {'$phi28.1': '$26for_iter.2'}})
2022-05-06 22:35:59,054 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:59,054 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'func': '$4load_method.1', 'args': ['$shape6.2', '$dtype8.3'], 'res': '$10call_method.4'}), (12, {'value': '$10call_method.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_method.6'}), (18, {'res': '$arr18.7'}), (20, {'item': '$arr18.7', 'res': '$20load_attr.8'}), (22, {'func': '$16load_method.6', 'args': ['$20load_attr.8'], 'res': '$22call_method.9'}), (24, {'value': '$22call_method.9', 'res': '$24get_iter.10'})), outgoing_phis={'$phi26.0': '$24get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ('$24get_iter.10',)})
2022-05-06 22:35:59,054 block_infos State(pc_initial=26 nstack_initial=1):
AdaptBlockInfo(insts=((26, {'iterator': '$phi26.0', 'pair': '$26for_iter.1', 'indval': '$26for_iter.2', 'pred': '$26for_iter.3'}),), outgoing_phis={'$phi28.1': '$26for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 28: ('$phi26.0', '$26for_iter.2')})
2022-05-06 22:35:59,054 block_infos State(pc_initial=28 nstack_initial=2):
AdaptBlockInfo(insts=((28, {'value': '$phi28.1'}), (30, {'res': '$const30.2'}), (32, {'res': '$arr32.3'}), (34, {'res': '$idx34.4'}), (36, {'target': '$arr32.3', 'index': '$idx34.4', 'value': '$const30.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ('$phi28.0',)})
2022-05-06 22:35:59,055 block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$arr40.0'}), (42, {'retval': '$arr40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:59,059 label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_method.1']
    arr = call $4load_method.1(shape, dtype, func=$4load_method.1, args=[Var(shape, arrayobj.py:3749), Var(dtype, arrayobj.py:3749)], kws=(), vararg=None, target=None) ['$4load_method.1', 'arr', 'dtype', 'shape']
    $14load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>) ['$14load_global.5']
    $16load_method.6 = getattr(value=$14load_global.5, attr=ndindex) ['$14load_global.5', '$16load_method.6']
    $20load_attr.8 = getattr(value=arr, attr=shape) ['$20load_attr.8', 'arr']
    $22call_method.9 = call $16load_method.6($20load_attr.8, func=$16load_method.6, args=[Var($20load_attr.8, arrayobj.py:3750)], kws=(), vararg=None, target=None) ['$16load_method.6', '$20load_attr.8', '$22call_method.9']
    $24get_iter.10 = getiter(value=$22call_method.9) ['$22call_method.9', '$24get_iter.10']
    $phi26.0 = $24get_iter.10                ['$24get_iter.10', '$phi26.0']
    jump 26                                  []
label 26:
    $26for_iter.1 = iternext(value=$phi26.0) ['$26for_iter.1', '$phi26.0']
    $26for_iter.2 = pair_first(value=$26for_iter.1) ['$26for_iter.1', '$26for_iter.2']
    $26for_iter.3 = pair_second(value=$26for_iter.1) ['$26for_iter.1', '$26for_iter.3']
    $phi28.1 = $26for_iter.2                 ['$26for_iter.2', '$phi28.1']
    branch $26for_iter.3, 28, 40             ['$26for_iter.3']
label 28:
    idx = $phi28.1                           ['$phi28.1', 'idx']
    $const30.2 = const(int, 1)               ['$const30.2']
    arr[idx] = $const30.2                    ['$const30.2', 'arr', 'idx']
    jump 26                                  []
label 40:
    $42return_value.1 = cast(value=arr)      ['$42return_value.1', 'arr']
    return $42return_value.1                 ['$42return_value.1']

2022-05-06 22:35:59,079 ==== SSA block analysis pass on 0
2022-05-06 22:35:59,080 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272461C0>
2022-05-06 22:35:59,080 on stmt: shape = arg(0, name=shape)
2022-05-06 22:35:59,080 on stmt: dtype = arg(1, name=dtype)
2022-05-06 22:35:59,080 on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:59,080 on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty)
2022-05-06 22:35:59,080 on stmt: arr = call $4load_method.1(shape, dtype, func=$4load_method.1, args=[Var(shape, arrayobj.py:3749), Var(dtype, arrayobj.py:3749)], kws=(), vararg=None, target=None)
2022-05-06 22:35:59,080 on stmt: $14load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Furqan\\anaconda3\\lib\\site-packages\\numpy\\__init__.py'>)
2022-05-06 22:35:59,080 on stmt: $16load_method.6 = getattr(value=$14load_global.5, attr=ndindex)
2022-05-06 22:35:59,080 on stmt: $20load_attr.8 = getattr(value=arr, attr=shape)
2022-05-06 22:35:59,081 on stmt: $22call_method.9 = call $16load_method.6($20load_attr.8, func=$16load_method.6, args=[Var($20load_attr.8, arrayobj.py:3750)], kws=(), vararg=None, target=None)
2022-05-06 22:35:59,081 on stmt: $24get_iter.10 = getiter(value=$22call_method.9)
2022-05-06 22:35:59,081 on stmt: $phi26.0 = $24get_iter.10
2022-05-06 22:35:59,081 on stmt: jump 26
2022-05-06 22:35:59,081 ==== SSA block analysis pass on 26
2022-05-06 22:35:59,081 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272461C0>
2022-05-06 22:35:59,081 on stmt: $26for_iter.1 = iternext(value=$phi26.0)
2022-05-06 22:35:59,081 on stmt: $26for_iter.2 = pair_first(value=$26for_iter.1)
2022-05-06 22:35:59,081 on stmt: $26for_iter.3 = pair_second(value=$26for_iter.1)
2022-05-06 22:35:59,081 on stmt: $phi28.1 = $26for_iter.2
2022-05-06 22:35:59,082 on stmt: branch $26for_iter.3, 28, 40
2022-05-06 22:35:59,082 ==== SSA block analysis pass on 28
2022-05-06 22:35:59,082 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272461C0>
2022-05-06 22:35:59,082 on stmt: idx = $phi28.1
2022-05-06 22:35:59,082 on stmt: $const30.2 = const(int, 1)
2022-05-06 22:35:59,082 on stmt: arr[idx] = $const30.2
2022-05-06 22:35:59,082 on stmt: jump 26
2022-05-06 22:35:59,082 ==== SSA block analysis pass on 40
2022-05-06 22:35:59,082 Running <numba.core.ssa._GatherDefsHandler object at 0x00000216272461C0>
2022-05-06 22:35:59,082 on stmt: $42return_value.1 = cast(value=arr)
2022-05-06 22:35:59,083 on stmt: return $42return_value.1
2022-05-06 22:35:59,083 defs defaultdict(<class 'list'>,
            {'$14load_global.5': [<numba.core.ir.Assign object at 0x0000021627237C40>],
             '$16load_method.6': [<numba.core.ir.Assign object at 0x0000021627237D00>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x00000216272379A0>],
             '$22call_method.9': [<numba.core.ir.Assign object at 0x00000216272377C0>],
             '$24get_iter.10': [<numba.core.ir.Assign object at 0x0000021627237520>],
             '$26for_iter.1': [<numba.core.ir.Assign object at 0x0000021627237430>],
             '$26for_iter.2': [<numba.core.ir.Assign object at 0x0000021627237370>],
             '$26for_iter.3': [<numba.core.ir.Assign object at 0x0000021627237220>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000002162726A8E0>],
             '$42return_value.1': [<numba.core.ir.Assign object at 0x00000216272309D0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000002162727AE20>],
             '$const30.2': [<numba.core.ir.Assign object at 0x0000021627230FD0>],
             '$phi26.0': [<numba.core.ir.Assign object at 0x000002162727AB20>],
             '$phi28.1': [<numba.core.ir.Assign object at 0x0000021627237670>],
             'arr': [<numba.core.ir.Assign object at 0x0000021627249310>],
             'dtype': [<numba.core.ir.Assign object at 0x000002162726C8B0>],
             'idx': [<numba.core.ir.Assign object at 0x0000021627237A90>],
             'shape': [<numba.core.ir.Assign object at 0x0000021627266A90>]})
2022-05-06 22:35:59,084 SSA violators set()
2022-05-06 22:35:59,090 bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:59,091 pending: deque([State(pc_initial=0 nstack_initial=0)])
2022-05-06 22:35:59,091 stack: []
2022-05-06 22:35:59,091 dispatch pc=0, inst=NOP(arg=None, lineno=3)
2022-05-06 22:35:59,091 stack []
2022-05-06 22:35:59,092 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
2022-05-06 22:35:59,092 stack []
2022-05-06 22:35:59,092 dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
2022-05-06 22:35:59,092 stack ['$2load_global.0']
2022-05-06 22:35:59,093 dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
2022-05-06 22:35:59,093 stack ['$2load_global.0', '$tmp04.1']
2022-05-06 22:35:59,093 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
2022-05-06 22:35:59,093 stack ['$2load_global.0', '$tmp04.1', '$tmp16.2']
2022-05-06 22:35:59,094 dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
2022-05-06 22:35:59,094 stack ['$8call_function.3']
2022-05-06 22:35:59,094 end state. edges=[]
2022-05-06 22:35:59,094 -------------------------Prune PHIs-------------------------
2022-05-06 22:35:59,094 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2022-05-06 22:35:59,095 defmap: {}
2022-05-06 22:35:59,095 phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:59,095 changing phismap: defaultdict(<class 'set'>, {})
2022-05-06 22:35:59,096 keep phismap: {}
2022-05-06 22:35:59,096 new_out: defaultdict(<class 'dict'>, {})
2022-05-06 22:35:59,096 ----------------------DONE Prune PHIs-----------------------
2022-05-06 22:35:59,096 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$tmp16.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$tmp16.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2022-05-06 22:35:59,097 label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    tmp1 = arg(1, name=tmp1)                 ['tmp1']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'tmp0', 'tmp1']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2022-05-06 22:35:59,100 ==== SSA block analysis pass on 0
2022-05-06 22:35:59,100 Running <numba.core.ssa._GatherDefsHandler object at 0x0000021627288D90>
2022-05-06 22:35:59,101 on stmt: tmp0 = arg(0, name=tmp0)
2022-05-06 22:35:59,101 on stmt: tmp1 = arg(1, name=tmp1)
2022-05-06 22:35:59,101 on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
2022-05-06 22:35:59,101 on stmt: $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None)
2022-05-06 22:35:59,101 on stmt: $10return_value.4 = cast(value=$8call_function.3)
2022-05-06 22:35:59,101 on stmt: return $10return_value.4
2022-05-06 22:35:59,101 defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x000002162722C760>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x0000021627240F10>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x000002162722C6A0>],
             'tmp0': [<numba.core.ir.Assign object at 0x0000021627230BB0>],
             'tmp1': [<numba.core.ir.Assign object at 0x0000021627240250>]})
2022-05-06 22:35:59,102 SSA violators set()
2022-05-06 22:35:59,929 index # 0 object # 0 has less than 5 points
2022-05-06 22:35:59,931 index # 0 object # 1 has less than 5 points
